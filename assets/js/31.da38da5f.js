(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{366:function(t,n,a){"use strict";a.r(n);var s=a(1),e=Object(s.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"写在前面"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#写在前面"}},[t._v("#")]),t._v(" 写在前面")]),t._v(" "),n("p",[t._v("如果你是按照顺序来阅读的，你就会对 "),n("strong",[t._v("Intent-filter")]),t._v(" 有点印象，比如在隐式Intent启动Activity时，我们就提到了，"),n("strong",[t._v("通过Intent-filter的Action,Category或data来实现 这个是通过Intent的 intent-filter来实现的")])]),t._v(" "),n("p",[t._v("再说，我们前面提到了 四大组件 都是依赖的 Intent来启动的，而这个名字 "),n("strong",[t._v("Intent过滤器")]),t._v("，也能很直观的告诉我们，它的作用是用来过滤Intent的，那怎么一个过滤法呢？或者说，它依赖什么去过滤，过滤的规则是什么？")]),t._v(" "),n("p",[t._v("没错，答案就在第一句话，它过滤依赖的有以下三个部分：")]),t._v(" "),n("ul",[n("li",[t._v("action属性")]),t._v(" "),n("li",[t._v("category属性")]),t._v(" "),n("li",[t._v("data属性")])]),t._v(" "),n("p",[t._v("比如：")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('        <activity...>\n            <intent-filter>\n                <action android:name="android.intent.action.MAIN" />\n\n                <category android:name="android.intent.category.LAUNCHER" />\n            </intent-filter>\n        </activity>\n')])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])]),n("p",[t._v("在分别介绍它们之前，我们先来仔细聊下Intent启动的内容。")]),t._v(" "),n("h1",{attrs:{id:"intent"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#intent"}},[t._v("#")]),t._v(" Intent")]),t._v(" "),n("p",[t._v("Intent是一个消息传递对象，可以用来从其他应用组件请求操作。基本用例主要包括以下三个：")]),t._v(" "),n("ul",[n("li",[t._v("启动Activity")]),t._v(" "),n("li",[t._v("启动Service")]),t._v(" "),n("li",[t._v("传递广播")])]),t._v(" "),n("h2",{attrs:{id:"intent的类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#intent的类型"}},[t._v("#")]),t._v(" Intent的类型")]),t._v(" "),n("ul",[n("li",[t._v("显式Intent")])]),t._v(" "),n("blockquote",[n("p",[t._v("通过提供目标应用的软件包名称或完全限定的组件类名来指定可处理Intent的应用。")])]),t._v(" "),n("ul",[n("li",[t._v("隐式Intent")])]),t._v(" "),n("blockquote",[n("p",[t._v("不会指定特定的组件，而是声明要执行的常规操作，从而允许其他应用中的组件来处理。例如，需要在地图上向用户显示位置等。")])]),t._v(" "),n("p",[t._v("使用隐式Intent，Android系统通过将Intent的内容与设备上其他应用的清单文件中声明的Intent过滤器进行比较，从而找到要启动的相应组件。如果只有一个，那么直接启动；如果有多个，那么会显示一个对话框，支持用户选取要使用的应用。")]),t._v(" "),n("p",[n("strong",[t._v("Intent过滤器")]),t._v("，是应用清单文件中的一个表达式，用于指定该组件要接收的Intent类型。例如，通过为Activity声明Intent过滤器，可以使其他应用能够直接使用某一特定类型的Intent启动该Activity；如果未给Activity声明任何Intent过滤器，那么该Activity只能显示Intent启动。")]),t._v(" "),n("p",[t._v("需要注意的是：")]),t._v(" "),n("blockquote",[n("p",[t._v("启动Service时，应始终使用显示Intent，且不要为服务声明Intent过滤器。使用隐式Intent启动服务存在安全隐患，因为无法确定哪些服务将响应Intent，且用户也无法看到哪些服务已启动。从Android5.0开始，如果使用隐式Intent调用bindService，系统会抛出异常。")])]),t._v(" "),n("h2",{attrs:{id:"构建intent"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#构建intent"}},[t._v("#")]),t._v(" 构建Intent")]),t._v(" "),n("p",[t._v("Intent对象携带Android系统用来确定要启动哪个组件的信息，以及收件人组件为了正确执行操作而使用的信息。也就是说主要分为两个方面：")]),t._v(" "),n("ul",[n("li",[t._v("ComponentName")])]),t._v(" "),n("p",[t._v("要启动的组件名称，为可选项。如果没有那么则为隐式Intent。")]),t._v(" "),n("p",[t._v("对应这一属性的字段是ComponentName，可以通过方法setComponent()、setClass()、setClassName()，或Intent构造函数设置组件名称。")]),t._v(" "),n("ul",[n("li",[t._v("action")])]),t._v(" "),n("p",[t._v("指定要执行的通用操作的字符串。")]),t._v(" "),n("p",[t._v("对于广播Intent，这是指已发生且正在报告的操作。操作会在很大程度上决定其余Intent的构成，特别是数据和extra中包含的内容。")]),t._v(" "),n("p",[t._v("可以指定自己的操作，共应用内使用。也可以使用Intent中既定好的操作如：")]),t._v(" "),n("p",[t._v("ACTION_VIEW：通过一些Activity展示某些特定的信息，例如照片或地图")]),t._v(" "),n("p",[t._v("ACTION_SEND：也称为共享Intent。一些用户可通过其他应用共享的数据，如邮件或社交共享应用等。")]),t._v(" "),n("p",[t._v("可以使用setAction()或Intent构造函数指定操作。")]),t._v(" "),n("ul",[n("li",[t._v("data")])]),t._v(" "),n("p",[t._v("引用待操作数据和/或该数据MIME类型的URI。")]),t._v(" "),n("p",[t._v("创建Intent时，除了指定URI外，指定数据类型即MIME类型往往也很重要，这有助于Android系统找到接收Intent的最佳组件。当URI为content：xxx 类型时，表明数据位于设备中，且由ContentProvider控制，系统可以通过URI获知数据类型。")]),t._v(" "),n("p",[t._v("仅设置数据通过setData()，如果要设置MIME类型则用setType（）。需要注意的是，不能既调setData又调setType，因为这两个方法会互相清除对方的设置。同时指定时应使用setDataAndType()。")]),t._v(" "),n("ul",[n("li",[t._v("category")])]),t._v(" "),n("p",[t._v("一个包含应处理Intent组件类型的附加信息的字符串。可以将任意数量的类别描述放入一个Intent中，但多数Intent均不需要类别。")]),t._v(" "),n("p",[t._v("常见类别：")]),t._v(" "),n("p",[t._v("CATEGORY_BROWSABLE：目标Activity允许本身通过网络浏览器启动，以显示连接引用的数据。")]),t._v(" "),n("p",[t._v("CATEGORY_LAUNCHER：该Activity是任务的初始Activity，在系统的应用启动器中列出。")]),t._v(" "),n("p",[t._v("指定类别通过方法addCategory()。")]),t._v(" "),n("ul",[n("li",[t._v("Extra")])]),t._v(" "),n("p",[t._v("携带完成请求操作所需的附加信息的键值对。通过Bundle保存键值对信息。")]),t._v(" "),n("p",[t._v("在发给另一个应用接收的Intent时，不要使用Parcelable或Serializable数据，如果某个应用尝试访问Bundle对象中的数据，但没有对打包或序列化的访问权限，系统会触发RuntimeException。")]),t._v(" "),n("p",[t._v("对应方法是putExtra()。")]),t._v(" "),n("ul",[n("li",[t._v("flag")])]),t._v(" "),n("p",[t._v("可以指示Android系统如何启动Activity，以及启动之后如何处理。")]),t._v(" "),n("p",[t._v("对应方法是setFlags()。")]),t._v(" "),n("p",[t._v("常用Intent Flags：")]),t._v(" "),n("ul",[n("li",[t._v("Intent.FLAG_ACTIVITY_NEW_TASK：这个是最常用的，但是往往会被误解，在程序根Activity的Task栈里加此标识开启新Activity都不会创建新的Task，只有当另一程序（进程）启动带有改标识的Activity时，才会创建新的Task。如果配合FLAG_ACTIVITY_NEW_MULTI_TASK，则无论什么情况都会创建新的Task，就成了类似 singleInstance 的情况了（singleInstance中的Activity独占一个栈）。如果配合 FLAG_ACTIVITY_CLEAR_TASK，则会先清空该栈，然后向栈中添加目标Activity，栈ID不变。")]),t._v(" "),n("li",[t._v("Intent.FLAG_ACTIVITY_CLEAR_TOP：有些文章中直接把该Flag说成作用和singleTask 相同，这是大错特错的。如果在ABCD的堆栈状态下，以该标识启动B，则会销毁CD，且B也是重新创建的（与singleTask有区别），如果配合FLAG_ACTIVITY_SINGLE_TOP，则就会成为 singleTask 的模式.")]),t._v(" "),n("li",[t._v("Intent.FLAG_ACTIVITY_SINGLE_TOP：同singleTop启动模式.")]),t._v(" "),n("li",[t._v("Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT：这个Flag主要用来改变Task堆栈顺序，如果在ABCD的状态下，以该标识启动B，则会成为ACDB，且B不会重新创建")]),t._v(" "),n("li",[t._v("Intent.FLAG_ACTIVITY_REORDER_TO_FRONT：这个Flag主要用来改变Task堆栈顺序，如果在ABCD的状态下，以该标识启动B，则会成为ACDB，且B不会重新创建。")]),t._v(" "),n("li",[t._v("Intent.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED：这个标识主要用于创建一个还原点，再次启动该Task时会将还原点之上包括其本身都销毁掉，如果在一个程序中以该标识启动了另外一个程序的功能，如一个用于看图的软件，当退出桌面，再点击这个程序，看图软件会消失。")]),t._v(" "),n("li",[t._v("Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS：有此标识的 Activity 不会出现在历时列表里.")]),t._v(" "),n("li",[t._v("Intent.FLAG_ACTIVITY_FORWARD_RESULT：如果设置，并且该intent会启动一个新的Activity，则返回消息的目标会从当前Activity转移到新的Activity中。（在这个案例中，返回消息的目标最开始为B）")])]),t._v(" "),n("h2",{attrs:{id:"隐式intent安全校验"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#隐式intent安全校验"}},[t._v("#")]),t._v(" 隐式Intent安全校验")]),t._v(" "),n("p",[t._v("通过隐式Intent可以将指定动作交由可处理的应用执行。但这其中也可能存在用户设备上没有任何应用能够处理此隐式Intent，或者由于配置文件限制或管理员执行了设置，导致该隐式Intent最终执行失败，一旦发生了这种情况，调用失败，发起此行为的应用也会崩溃。")]),t._v(" "),n("p",[t._v("解决此种情况了方式也很简单，就是对Intent对象调用resolveActivity进行安全校验，如果有返回结果，那么至少有一个应用能够处理该Intent，这时使用隐式Intent是安全的。如果结果为空，那么该隐式Intent则不可用。")]),t._v(" "),n("div",{staticClass:"language-scss line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scss"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个隐式Intent")]),t._v("\nval sendIntent = "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Intent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".apply ")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    action = Intent.ACTION_SEND\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("putExtra")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Intent.EXTRA_TEXT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" textMessage"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    type = "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text/plain"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 安全校验后，再使用该隐式Intent")]),t._v("\nif "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sendIntent."),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolveActivity")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("packageManager"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token null keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("startActivity")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sendIntent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br")])]),n("h2",{attrs:{id:"强制使用应用选择器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#强制使用应用选择器"}},[t._v("#")]),t._v(" 强制使用应用选择器")]),t._v(" "),n("p",[t._v("通过隐式Intent发送目标意图时，可能存在多个应用均能处理此行为的情况，这时系统会弹出选择框，让用户选择一个应用处理此行为。同时，默认情况下，用户还可以将某款应用设置为此行为的默认处理应用，那么在下次触发时，则不会再显示选择框，直接交由之前用户选择的应用处理。")]),t._v(" "),n("p",[t._v("当然，Android系统也提供了特定的API，可以使发起的隐式Intent每次都弹出应用选择框，用户则无法为该操作选择默认应用。")]),t._v(" "),n("div",{staticClass:"language-ini line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-ini"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("val sendIntent")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("Intent(Intent.ACTION_SEND)")]),t._v("\n...\n"),n("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("val title: String")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("resources.getString(R.string.chooser_title)")]),t._v("\n// 创建显示应用选择框的隐式Intent\n"),n("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("val chooser: Intent")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("Intent.createChooser(sendIntent, title)")]),t._v("\n// 安全验证后发起操作\n"),n("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("if (sendIntent.resolveActivity(packageManager) !")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("null) {")]),t._v("\n    startActivity(chooser)\n}\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br")])]),n("h2",{attrs:{id:"接收隐式intent"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#接收隐式intent"}},[t._v("#")]),t._v(" 接收隐式Intent")]),t._v(" "),n("p",[t._v("通过在清单文件中使用"),n("code",[t._v("<intent-filter>")]),t._v("元素，可以为每个应用组件声明一个或多个Intent过滤器。每个Intent过滤器均根据Intent的操作、数据和类别指定自身接受的Intent类型。仅当隐式Intent可以通过Intent过滤器之一传递时，系统才会将该Intent传递给应用组件。")]),t._v(" "),n("p",[t._v("在"),n("code",[t._v("<intent-filer>")]),t._v("标签内部，可以使用以下三种元素中的一个或多个指定要接受的Intent类型：")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("<action>")])])]),t._v(" "),n("blockquote",[n("p",[t._v("在name属性中，声明接受的Intent操作。值必须是操作的文本字符串值，而不是类常量。")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("<data>")])])]),t._v(" "),n("blockquote",[n("p",[t._v("使用一个或多个指定数据URI（scheme、host、prot、path）各个方面和MIME类型的属性，声明接受的数据类型。")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("<category>")])])]),t._v(" "),n("blockquote",[n("p",[t._v("在name属性中，声明接受的Intent类别。值必须是操作的文本字符串值，而不是类常量。")]),t._v(" "),n("p",[t._v("需要特别注意的一点是，"),n("strong",[t._v("如果要接受隐式Intent，必须将CATEGORY_DEFAULT类别包括在过滤器中")]),t._v("。方法startActivity()和startActivityForResult()将按照其声明CATEGORY_DEFAULT类别的方式处理所有Intent。如果未在Intent过滤器中声明此类别，则隐式Intent不会解析为此Activity。")])]),t._v(" "),n("p",[t._v("Activity组件的Intent过滤器必须在清单文件中声明，但是广播的过滤器可以通过调用registerReceiver()动态注册。Service则应始终通过显式Intent开启。")]),t._v(" "),n("h1",{attrs:{id:"intent-filter"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#intent-filter"}},[t._v("#")]),t._v(" Intent-filter")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<intent-filter android:icon="drawable resource"\n               android:label="string resource"\n               android:priority="integer" >\n    . . .\n</intent-filter>\n')])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("p",[t._v("**必须包含：**action属性")]),t._v(" "),n("h2",{attrs:{id:"属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[t._v("#")]),t._v(" "),n("strong",[t._v("属性")])]),t._v(" "),n("h3",{attrs:{id:"android-icon"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#android-icon"}},[t._v("#")]),t._v(" android:icon")]),t._v(" "),n("p",[t._v("一个表示父 Activity、服务或广播接收器的图标，在将该组件以具备过滤器所描述功能的形式呈现给用户时显示。")]),t._v(" "),n("p",[t._v("此属性必须设置为对包含图片定义的可绘制资源的引用。默认值为父组件的 "),n("code",[t._v("icon")]),t._v(" 属性设置的图标。如果父组件未指定图标，则默认值为 "),n("code",[t._v("<application>")]),t._v(" 元素设置的图标。")]),t._v(" "),n("h3",{attrs:{id:"android-label"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#android-label"}},[t._v("#")]),t._v(" android:label")]),t._v(" "),n("p",[t._v("父组件的用户可读标签。将相应组件以具备过滤器所描述功能的形式呈现给用户时，将使用此标签（而不是父组件设置的标签）。")]),t._v(" "),n("p",[t._v("此标签应设置为对字符串资源的引用，以便可以像界面中的其他字符串一样进行本地化。不过，为了方便您开发应用，也可以将其设为原始字符串。")]),t._v(" "),n("p",[t._v("默认值为父组件设置的标签。如果父组件未指定标签，则默认值为 "),n("code",[t._v("<application>")]),t._v(" 元素的 "),n("code",[t._v("label")]),t._v(" 属性设置的标签。")]),t._v(" "),n("h3",{attrs:{id:"android-priority"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#android-priority"}},[t._v("#")]),t._v(" android:priority")]),t._v(" "),n("p",[t._v("就处理过滤器所描述类型的 intent 而言，应该为父组件指定的优先级。此属性对 Activity 和广播接收器都有意义：")]),t._v(" "),n("ul",[n("li",[t._v("它说明了某个 Activity 对与过滤器匹配的 Intent 的响应能力，这是相对于也可以响应该 Intent 的其他 Activity 的响应能力。当 Intent 可由优先级不同的多个 Activity 处理时，Android 只会将优先级值较高的 Activity 视为 Intent 的潜在目标。")]),t._v(" "),n("li",[t._v("它控制按什么顺序执行广播接收器以接收广播消息。优先级值越高，调用顺序越靠前。（该顺序仅适用于同步消息；对于异步消息，系统会忽略该顺序。）")])]),t._v(" "),n("p",[t._v("只有在您确实需要对接收广播施加特定顺序或想要强制 Android 优先选用某个 Activity 时，才能使用此属性。")]),t._v(" "),n("p",[t._v("值必须是一个整数，如“"),n("code",[t._v("100")]),t._v("”。数值越高，优先级也就越高。默认值为 0。")]),t._v(" "),n("p",[t._v("在某些情况下，系统会忽略请求的优先级，并将值限定为 "),n("code",[t._v("0")]),t._v("。此类情况发生在：")]),t._v(" "),n("ul",[n("li",[t._v("非特权应用请求任何大于 0 的优先级时")]),t._v(" "),n("li",[t._v("特权应用为 "),n("code",[t._v("ACTION_VIEW")]),t._v("、"),n("code",[t._v("ACTION_SEND")]),t._v("、"),n("code",[t._v("ACTION_SENDTO")]),t._v(" 或 "),n("code",[t._v("ACTION_SEND_MULTIPLE")]),t._v(" 请求大于 0 的优先级时")])]),t._v(" "),n("h3",{attrs:{id:"android-order"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#android-order"}},[t._v("#")]),t._v(" android:order")]),t._v(" "),n("p",[t._v("当多个过滤器匹配时应按什么顺序处理过滤器。")]),t._v(" "),n("p",[n("code",[t._v("order")]),t._v(" 与 "),n("code",[t._v("priority")]),t._v(" 的不同之处在于，"),n("code",[t._v("priority")]),t._v(" 在多个应用间应用，而 "),n("code",[t._v("order")]),t._v(" 可消除单个应用中多个匹配的过滤器的歧义。")]),t._v(" "),n("p",[t._v("当多个过滤器可以匹配时，请改用定向 Intent。")]),t._v(" "),n("p",[t._v("值必须是一个整数，如“"),n("code",[t._v("100")]),t._v("”。数值越高，匹配顺序越靠前。 默认值为 "),n("code",[t._v("0")]),t._v("。")]),t._v(" "),n("p",[t._v("此属性是在 API 级别 28 中引入的。")]),t._v(" "),n("h3",{attrs:{id:"android-autoverify"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#android-autoverify"}},[t._v("#")]),t._v(" android:autoVerify")]),t._v(" "),n("p",[t._v("Android 是否应验证指定主机中的 Digital Asset Links JSON 文件与此应用的匹配情况。")]),t._v(" "),n("p",[t._v("请参阅："),n("a",{attrs:{href:"https://developer.android.com/training/app-links/verify-android-applinks",target:"_blank",rel:"noopener noreferrer"}},[t._v("验证 Android App Links"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("默认值为 "),n("code",[t._v("false")]),t._v("。")]),t._v(" "),n("p",[t._v("此属性是在 API 级别 23 中引入的。")]),t._v(" "),n("h1",{attrs:{id:"action"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#action"}},[t._v("#")]),t._v(" action")]),t._v(" "),n("p",[t._v("action是一个字符串，如果Intent指明定了action，则目标组件的IntentFilter的action列表中就必须包含有这个action，否则不能匹配。一个Intent Filter中可声明多个action，Intent中的action与其中的任一个action在字符串形式上完全相同（注意，区分大小写，大小写不同但字符串内容相同也会造成匹配失败），action方面就匹配成功。可通过setAction方法为Intent设置action，也可在构造Intent时传入action。需要注意的是，隐式Intent必须指定action。比如我们在Manifest文件中为MyActivity定义了如下Intent Filter：")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<intent-filter>\n    <action android:name="android.intent.action.SEND"/>\n    <action android:name="android.intent.action.SEND_TO"/>\n</intent-filter>\n')])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br")])]),n("p",[t._v("那么只要Intent的action为“SEND”或“SEND_TO”，那么这个Intent在action方面就能和上面那个Activity匹配成功。比如我们的Intent定义如下：")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('Intent intent = new Intent("android.intent.action.SEND") ;\nstartActivity(intent);\n')])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br")])]),n("p",[t._v("那么我们的Intent在action方面就与MyActivity匹配了。")]),t._v(" "),n("p",[t._v("Android系统预定义了许多action，这些action代表了一些常见的操作。常见action如下（Intent类中的常量）：")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("Intent.ACTION_VIEW\nIntent.ACTION_DIAL\nIntent.ACTION_SENDTO\nIntent.ACTION_SEND\nIntent.ACTION_WEB_SEARCH\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("h1",{attrs:{id:"category"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#category"}},[t._v("#")]),t._v(" category")]),t._v(" "),n("p",[t._v("category也是一个字符串，但是它与action的过滤规则不同，它要求Intent中个如果含有category，那么所有的category都必须和过滤规则中的其中一个category相同。也就是说，Intent中如果出现了category，不管有几个category，对于每个category来说，它必须是过滤规则中的定义了的category。当然，Intent中也可以没有category（若Intent中未指定category，系统会自动为它带上“android.intent.category.DEFAULT”），如果没有，仍然可以匹配成功。category和action的区别在于，action要求Intent中必须有一个action且必须和过滤规则中的某几个action相同，而category要求Intent可以没有category，但是一旦发现存在category，不论你有多少，每个都要能够和过滤规则中的任何一个category相同。我们可以通过addCategory方法为Intent添加category。")]),t._v(" "),n("p",[t._v("特别说明：")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<intent-filter>\n    <action android:name="android.intent.action.MAIN" />\n    <category android:name="android.intent.category.LAUNCHER" />\n</intent-filter>\n')])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br")])]),n("p",[t._v("这二者共同出现，标明该Activity是一个入口Activity，并且会出现在系统应用列表中，二者缺一不可。")]),t._v(" "),n("h1",{attrs:{id:"data"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#data"}},[t._v("#")]),t._v(" data")]),t._v(" "),n("p",[t._v("如果Intent没有提供type，系统将从data中得到数据类型。和action一样，同action类似，只要Intent的data只要与Intent Filter中的任一个data声明完全相同，data方面就完全匹配成功。")]),t._v(" "),n("p",[t._v("data由两部分组成：")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("mimeType和URI\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("p",[t._v("​")]),t._v(" "),n("p",[t._v("MineType指的是媒体类型：")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("例如imgage/jpeg，auto/mpeg4和viedo/*等，可以表示图片、文本、视频等不同的媒体格式\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("p",[t._v("uri则由scheme、host、port、path | pathPattern | pathPrefix这4部分组成")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("<scheme>://<host>:<port>/[<path>|<pathPrefix>|<pathPattern >]\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("p",[t._v("例如：\ncontent://com.wooyun.org:200/folder/etc\n"),n("a",{attrs:{href:"http://www.wooyun.org/search/info",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.wooyun.org:80/search/info"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("Intent的uri可通过setData方法设置，mimetype可通过setType方法设置。")]),t._v(" "),n("p",[t._v("​")]),t._v(" "),n("p",[t._v("需要注意的是：若Intent Filter的data声明部分未指定uri，则缺省uri为content或file，Intent中的uri的scheme部分需为content或file才能匹配；若要为Intent指定完整的data，必须用setDataAndType方法，究其原因在，setData和setType方法的源码中我们发现：")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("public Intent setData(Uri data) {\n    mData = data;\n    mType = null;\n    return this;\n}\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("public Intent setType(String type) {\n    mData = null;\n    mType = type;\n    return this;\n}\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("p",[t._v("这两个方法会彼此互相清除对方的值（这个比较逗），即setData会把mimeType置为null，setType会把uri置为null。")]),t._v(" "),n("p",[t._v("下面我们来举例说明一下data的匹配。首先我们先来看一下Intent Filter中指定data的语法：")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<data android:scheme="String.“ \n          android:host="String"\n          android:port="String"\n          android:path="String"\n          android:pathPattern="String"\n          android:pathPrefix="String"\n          android:mimeType="String"/>\n')])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])]),n("p",[t._v("其中scheme、host等各个部分无需全部指定。")]),t._v(" "),n("p",[t._v("使用案例：")]),t._v(" "),n("p",[t._v("（1）如果我们想要匹配 http 以 “.pdf” 结尾的路径，使得别的程序想要打开网络 pdf 时，用户能够可以选择我们的程序进行下载查看。\n我们可以将 scheme 设置为 “http”，pathPattern 设置为 “.*//.pdf”，整个 intent-filter 设置为：")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<intent-filter>  \n    <action android:name="android.intent.action.VIEW"></action>  \n    <category android:name="android.intent.category.DEFAULT"></category>  \n    <data android:scheme="http" android:pathPattern=".*//.pdf"></data>  \n</intent-filter>  \n')])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("p",[t._v("如果你只想处理某个站点的 pdf，那么在 data 标签里增加 android:host=”yoursite.com” 则只会匹配 http://yoursite.com/xxx/xxx.pdf，但这不会匹配 www.yoursite.com，如果你也想匹配这个站点的话，你就需要再添加一个 data 标签，除了 android:host 改为 “www.yoursite.com” 其他都一样。")]),t._v(" "),n("p",[t._v("（2）如果我们做的是一个IM应用，或是其他类似于微博之类的应用，如何让别人通过 Intent 进行调用出现在选择框里呢？我们只用注册 android.intent.action.SEND 与 mimeType 为 “text/plain” 或 “/” 就可以了，整个 intent-filter 设置为：")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<intent-filter>  \n    <action android:name="android.intent.action.SEND" />  \n    <category android:name="android.intent.category.DEFAULT" />  \n    <data mimeType="*/*" />  \n</intent-filter> \n')])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("p",[t._v("这里设置 category 的原因是，创建的 Intent 的实例默认 category 就包含了 Intent.CATEGORY_DEFAULT ，google 这样做的原因是为了让这个 Intent 始终有一个 category。")]),t._v(" "),n("p",[t._v("（3）如果我们做的是一个音乐播放软件，当文件浏览器打开某音乐文件的时候，使我们的应用能够出现在选择框里？这类似于文件关联了，其实做起来跟上面一样，也很简单，我们只用注册 android.intent.action.VIEW 与 mimeType 为 “audio/*” 就可以了，整个 intent-filter 设置为：")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<intent-filter>  \n     <action android:name="android.intent.action.VIEW" />  \n     <category android:name="android.intent.category.DEFAULT" />  \n     <data android:mimeType="audio/*" />  \n</intent-filter>  \n')])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("h1",{attrs:{id:"版本适配"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#版本适配"}},[t._v("#")]),t._v(" 版本适配")]),t._v(" "),n("h2",{attrs:{id:"android12"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#android12"}},[t._v("#")]),t._v(" Android12")]),t._v(" "),n("p",[t._v("安卓12需要把添加了 intent-filter 的四大组件的 export 属性加上，否则无法编译安装。")]),t._v(" "),n("h2",{attrs:{id:"android13"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#android13"}},[t._v("#")]),t._v(" Android13")]),t._v(" "),n("p",[t._v("Android 12 的一个安全性变更， 即声明了 "),n("code",[t._v("<intent-filter>")]),t._v(" 的Activity、BroadcastReceiver、Service 必须声明 "),n("code",[t._v("android:exported")]),t._v("， 否则将会无法被启动。")]),t._v(" "),n("p",[t._v("Android 12 的这个变更是为了防止开发者在不知情的情况下，声明了一个 intent-filter 就会使得这些组件对外公开，一定程度下强化了安全性。")]),t._v(" "),n("p",[t._v("但是却漏掉了"),n("strong",[t._v("显式 Intent 启动")]),t._v("和 "),n("strong",[t._v("Broadcast Receiver 动态注册")]),t._v("两种情况，便在 13 中分别推出了两项变更来进行加强。")]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("Intent filters block non- -matching intents")])]),t._v(" "),n("li",[n("strong",[t._v("Safer exporting of context- -registered receivers")])])]),t._v(" "),n("h3",{attrs:{id:"intent-filters-block-non-matching-intents"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#intent-filters-block-non-matching-intents"}},[t._v("#")]),t._v(" Intent filters block non-matching intents")]),t._v(" "),n("p",[t._v("Android 13 开始 Intent 过滤器会屏蔽不匹配的 intent，即便是指定了 Component 的显式启动。")]),t._v(" "),n("p",[t._v("在 13 以前：")]),t._v(" "),n("ol",[n("li",[t._v("开发者想给 Component 添加 支持")]),t._v(" "),n("li",[t._v("这个 需要公开给外部 App 使用，便设定了 Component exported 为 true")]),t._v(" "),n("li",[t._v("这时候该 Component 就出现了一个安全漏洞：外部 App 使用不同于 中声明的 Action，甚至 mimeType 都不匹配均可以启动它")])]),t._v(" "),n("p",[t._v("也许你觉得这并没有什么，但是如果 App 只针对 过来的 Route 做了安全校验，就造成了校验上的疏漏。")]),t._v(" "),n("h4",{attrs:{id:"具体变更"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#具体变更"}},[t._v("#")]),t._v(" "),n("strong",[t._v("具体变更")])]),t._v(" "),n("p",[t._v("假如我们提供了的 Activity 像如下一样声明：")]),t._v(" "),n("div",{staticClass:"language-xml line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-xml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("activity")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("name")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v(".MainActivity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("exported")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("true"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("intent-filter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("action")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("name")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("android.intent.action.MAIN"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("category")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("name")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("android.intent.category.LAUNCHER"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("intent-filter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("intent-filter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("action")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("name")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("android.intent.action.TEST"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("data")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("mimeType")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("vnd.android.cursor.dir/event"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("intent-filter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("activity")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br")])]),n("p",[t._v("在 13 之前，其他 App 采用了显式启动，即便是错误的 ACTION 是可以正常启动我们的 Activity。")]),t._v(" "),n("div",{staticClass:"language-kotlin line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-kotlin"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("testIntentFilters")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Intent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ComponentName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.example.demoapplication"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.example.demoapplication.MainActivity"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        action "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"android.intent.action.TEST_A"')])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("startActivity")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br")])]),n("p",[t._v("而运行在 13 上的话，将无法启动并会发生如下错误：")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("PackageManager: Intent does not match component's intent filter: Intent { act=android.intent.action.TEST_A cmp=com.example.demoapplication/.MainActivity }\n\nPackageManager: Access blocked: ComponentInfo{com.example.demoapplication/com.example.demoapplication.MainActivity}\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br")])]),n("p",[t._v("除了 ACTION 修改正确以外，data 也要满足即 Intent-filter 完全符合才可以启动。")]),t._v(" "),n("div",{staticClass:"language-kotlin line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-kotlin"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("testIntentFilters")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Intent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ComponentName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.example.demoapplication"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.example.demoapplication.MainActivity"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        action "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"android.intent.action.TEST"')])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("data")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" CalendarContract"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Events"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CONTENT_URI\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("startActivity")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br")])]),n("h4",{attrs:{id:"豁免"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#豁免"}},[t._v("#")]),t._v(" "),n("strong",[t._v("豁免")])]),t._v(" "),n("p",[t._v("如下的几种场景下的 Intent 并不在本次变更的影响范围内：")]),t._v(" "),n("ol",[n("li",[t._v("目标 Component 没有声明 "),n("code",[t._v("<intent-filter>")])]),t._v(" "),n("li",[t._v("同一个 App 内部发出的 Intent")]),t._v(" "),n("li",[t._v("系统发出的 Intent，包括 "),n("code",[t._v("SystemServer")]),t._v("、采用 System UID 的系统 App")]),t._v(" "),n("li",[n("code",[t._v("Root")]),t._v(" 进程发出的 Intent")])]),t._v(" "),n("h4",{attrs:{id:"适配办法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#适配办法"}},[t._v("#")]),t._v(" "),n("strong",[t._v("适配办法")])]),t._v(" "),n("p",[t._v("如果目标运行的版本基于 Android 13，并且不是上述豁免对象的话，需要做些检查和必要的修改。")]),t._v(" "),n("p",[t._v("按照启动方和目标方两种情况进行适配办法的探讨：")]),t._v(" "),n("ol",[n("li",[t._v("作为启动方：\n"),n("ul",[n("li",[t._v("是否存在采用显式 Intent 方式启动其他 App 或发送广播的情况\n"),n("ul",[n("li",[t._v("startActivity()")]),t._v(" "),n("li",[t._v("startActivityForResult()")]),t._v(" "),n("li",[t._v("sendBroadcast()")])])]),t._v(" "),n("li",[t._v("该 Component 是否声明了 "),n("code",[t._v("<intent-filter>")])]),t._v(" "),n("li",[t._v("防止其 Target 升级到了 Android 13 无法正常启动，需要注意 Intent 的 action、data 等信息是否准确")])])]),t._v(" "),n("li",[t._v("作为目标方：\n"),n("ul",[n("li",[t._v("Target 是否需要升级到 Android 13")]),t._v(" "),n("li",[t._v("是否对外提供了 Component 并声明了 "),n("code",[t._v("<intent-filter>")])]),t._v(" "),n("li",[t._v("防止无法被正常启动，需要告知启动方 "),n("code",[t._v("<intent-filter>")]),t._v(" 的信息")])])])]),t._v(" "),n("h4",{attrs:{id:"残留"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#残留"}},[t._v("#")]),t._v(" 残留")]),t._v(" "),n("p",[t._v("13 上实测发现 Service 组件在显式启动下，即便是错误的 ACTION，仍能被正常启动。这是有意为之还是 Beta 版漏洞，源码尚未公开，原因未知。")]),t._v(" "),n("ul",[n("li",[t._v("startService()")]),t._v(" "),n("li",[t._v("startForegroundService()")]),t._v(" "),n("li",[t._v("bindService()")])]),t._v(" "),n("h3",{attrs:{id:"safer-exporting-of-context-registered-receivers"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#safer-exporting-of-context-registered-receivers"}},[t._v("#")]),t._v(" Safer exporting of context-registered receivers")]),t._v(" "),n("p",[t._v("为了帮助提高运行时接收器的安全性，Android 13 允许您指定您应用中的特定广播接收器是否应被导出以及是否对设备上的其他应用可见。")]),t._v(" "),n("p",[t._v("如果导出广播接收器，其他应用将可以向您的应用发送不受保护的广播。此导出配置在以 Android 13 或更高版本为目标平台的应用中可用，有助于防止一个主要的应用漏洞来源。")]),t._v(" "),n("h4",{attrs:{id:"具体变更-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#具体变更-2"}},[t._v("#")]),t._v(" 具体变更")]),t._v(" "),n("p",[t._v("TargetSDK 升级到 Android13 的 App 在动态注册 Receiver 的时候不指明该 flag，那么会收到如下的 crash：")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("java.lang.SecurityException: com.example.demoapplication: One of RECEIVER_EXPORTED or RECEIVER_NOT_EXPORTED should be specified when a receiver isn't being registered exclusively for system broadcasts\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("p",[t._v("目前上述限制不是默认生效的，需要开启如下兼容性变更：")]),t._v(" "),n("ul",[n("li",[t._v("开发者选项 -> App Compatibility Changes -> "),n("strong",[t._v("Your App")]),t._v(" -> "),n("code",[t._v("DYNAMIC_RECEIVER_EXPLICIT_EXPORT_REQUIRED")])])]),t._v(" "),n("p",[t._v("另外，当你的 Receiver 声明了 RECEIVER_NOT_EXPORTED 的话，其他 App 向其发送广播会失败，并打印如下日志提醒你的 Receiver 需要公开：")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("BroadcastQueue: Exported Denial: sending Intent { act=com.example.demoapplication.RECEIVER flg=0x10 }, action: com.example.demoapplication.RECEIVER from com.example.tiramisu_demo (uid=10161)\n\ndue to receiver ProcessRecord{8e5f11c 16942:com.example.demoapplication/u0a158} (uid 10158) not specifying RECEIVER_EXPORTED\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br")])]),n("h4",{attrs:{id:"豁免-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#豁免-2"}},[t._v("#")]),t._v(" 豁免")]),t._v(" "),n("p",[t._v("需要留意的是，系统级广播是受保护的，普通 App 没有权限发送。")]),t._v(" "),n("p",[t._v("所以只是监听系统广播的话，动态注册的 Receiver 无需指定上述 flag。即便指定了 RECEIVER_NOT_EXPORTED，和静态注册方式一致也能正常接收、不受影响。")]),t._v(" "),n("h4",{attrs:{id:"适配办法-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#适配办法-2"}},[t._v("#")]),t._v(" 适配办法")]),t._v(" "),n("p",[t._v("找到所有动态注册 Broadcast Receiver 的代码。如果监听的包含非系统广播，请根据是否公开给其他 App 的需要使用来添加 flag 的声明。")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("RECEIVER_EXPORTED")])]),t._v(" "),n("li",[n("code",[t._v("RECEIVER_NOT_EXPORTED")])])]),t._v(" "),n("div",{staticClass:"language-kotlin line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-kotlin"}},[n("code",[t._v("context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerReceiver")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sharedBroadcastReceiver"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" intentFilter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    RECEIVER_EXPORTED"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ncontext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerReceiver")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("privateBroadcastReceiver"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" intentFilter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    RECEIVER_NOT_EXPORTED"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);