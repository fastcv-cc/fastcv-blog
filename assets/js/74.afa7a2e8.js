(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{409:function(s,a,n){"use strict";n.r(a);var t=n(1),e=Object(t.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("在维护公司项目时发现，在多人协作的环境中，各式各样的代码风格让人很难下手，无法快速的定位问题位置。结合之前的看法，所以找到比较完善的代码规范，借鉴下来，让自己形成自己的代码规范，日积月累形成习惯。这样子的代码才能拿得出手。")]),s._v(" "),a("h3",{attrs:{id:"as-规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#as-规范"}},[s._v("#")]),s._v(" AS 规范")]),s._v(" "),a("p",[s._v("作为安卓开发最常用的开发工具，我们还是需要对它限制一下规范的，但是只是建议")]),s._v(" "),a("ul",[a("li",[s._v("尽量使用最新的稳定版的 IDE 进行开发（可以低几个版本，但是不能太老）")]),s._v(" "),a("li",[s._v("编码格式统一为 "),a("strong",[s._v("UTF-8")]),s._v("，如果使用其他的编码方式会导致项目出现乱码，很不好看")]),s._v(" "),a("li",[s._v("编辑完 .java、.xml 等文件后一定要 "),a("strong",[s._v("格式化，格式化，格式化")]),s._v("（如果团队有公共的样式包，那就遵循它，否则统一使用 AS 默认模板即可）")]),s._v(" "),a("li",[s._v("删除多余的 import，减少警告出现，可利用 AS 的 Optimize Imports（Settings -> Keymap -> Optimize Imports）快捷键")])]),s._v(" "),a("h3",{attrs:{id:"命名规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命名规范"}},[s._v("#")]),s._v(" 命名规范")]),s._v(" "),a("p",[s._v("代码中的命名严禁使用拼音与英文混合的方式，更不允许直接使用中文的方式。正确的英文拼写和语法可以让阅读者易于理解，避免歧义。")]),s._v(" "),a("blockquote",[a("p",[s._v("注意：即使纯拼音命名方式也要避免采用。但 "),a("code",[s._v("alibaba")]),s._v("、"),a("code",[s._v("taobao")]),s._v("、"),a("code",[s._v("youku")]),s._v("、"),a("code",[s._v("hangzhou")]),s._v(" 等国际通用的名称，可视同英文。")])]),s._v(" "),a("h4",{attrs:{id:"包名规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#包名规范"}},[s._v("#")]),s._v(" 包名规范")]),s._v(" "),a("p",[s._v("包名全部小写，连续的单词只是简单地连接起来，不使用下划线，采用反域名命名规则，全部使用小写字母。另外，分包推荐使用按功能分包 Package By Feature，不太建议按层分包 Package By Layer。")]),s._v(" "),a("blockquote",[a("p",[s._v("按层拆分包就像按专业拆分同事，而不是将他们拆分为组织团队。\n想象一下这种荒谬的情况："),a("strong",[s._v("经理公司、程序员公司")]),s._v("、"),a("strong",[s._v("人力资源公司")]),s._v("和"),a("strong",[s._v("营销公司")]),s._v("，其中"),a("strong",[s._v("程序员公司")]),s._v("只有"),a("strong",[s._v("程序员")]),s._v("，没有"),a("strong",[s._v("经理")]),s._v("、"),a("strong",[s._v("营销人员")]),s._v("或"),a("strong",[s._v("人力资源")])])]),s._v(" "),a("h4",{attrs:{id:"类名规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类名规范"}},[s._v("#")]),s._v(" 类名规范")]),s._v(" "),a("p",[s._v("类名都以 UpperCamelCase 风格编写。\n类名通常是名词或名词短语，接口名称有时可能是形容词或形容词短语。现在还没有特定的规则或行之有效的约定来命名注解类型。\n名词，采用大驼峰命名法，尽量避免缩写，除非该缩写是众所周知的， 比如 HTML、URL，如果类名称中包含单词缩写，则单词缩写的每个字母均应大写。")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("类")]),s._v(" "),a("th",[s._v("描述")]),s._v(" "),a("th",[s._v("例如")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("Activity")]),s._v("类")]),s._v(" "),a("td",[a("code",[s._v("Activity")]),s._v("为后缀标识")]),s._v(" "),a("td",[s._v("欢迎页面类 "),a("code",[s._v("WelcomeActivity")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("Adapter")]),s._v("类")]),s._v(" "),a("td",[a("code",[s._v("Adapter")]),s._v("为后缀标识")]),s._v(" "),a("td",[s._v("新闻详情适配器 "),a("code",[s._v("NewsDetailAdapter")])])]),s._v(" "),a("tr",[a("td",[s._v("解析类")]),s._v(" "),a("td",[a("code",[s._v("Parser")]),s._v("为后缀标识")]),s._v(" "),a("td",[s._v("首页解析类 "),a("code",[s._v("HomePosterParser")])])]),s._v(" "),a("tr",[a("td",[s._v("工具方法类")]),s._v(" "),a("td",[a("code",[s._v("Utils")]),s._v("或 "),a("code",[s._v("Manager")]),s._v("为后缀标识")]),s._v(" "),a("td",[s._v("线程池管理类："),a("code",[s._v("ThreadPoolManager")])])]),s._v(" "),a("tr",[a("td",[s._v("日志工具类："),a("code",[s._v("LogUtils``Logger")]),s._v("也可）")]),s._v(" "),a("td"),s._v(" "),a("td")]),s._v(" "),a("tr",[a("td",[s._v("打印工具类："),a("code",[s._v("PrinterUtils")])]),s._v(" "),a("td"),s._v(" "),a("td")]),s._v(" "),a("tr",[a("td",[s._v("数据库类")]),s._v(" "),a("td",[s._v("以 "),a("code",[s._v("DBHelper")]),s._v("后缀标识")]),s._v(" "),a("td",[s._v("新闻数据库："),a("code",[s._v("NewsDBHelper")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("Service")]),s._v("类")]),s._v(" "),a("td",[s._v("以 "),a("code",[s._v("Service")]),s._v("为后缀标识")]),s._v(" "),a("td",[s._v("时间服务 "),a("code",[s._v("TimeService")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("BroadcastReceiver")]),s._v("类")]),s._v(" "),a("td",[s._v("以 "),a("code",[s._v("Receiver")]),s._v("为后缀标识")]),s._v(" "),a("td",[s._v("推送接收 "),a("code",[s._v("JPushReceiver")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("ContentProvider")]),s._v("类")]),s._v(" "),a("td",[s._v("以 "),a("code",[s._v("Provider")]),s._v("为后缀标识")]),s._v(" "),a("td",[a("code",[s._v("ShareProvider")])])]),s._v(" "),a("tr",[a("td",[s._v("自定义的共享基础类")]),s._v(" "),a("td",[s._v("以 "),a("code",[s._v("Base")]),s._v("开头")]),s._v(" "),a("td",[a("code",[s._v("BaseActivity")]),s._v(", "),a("code",[s._v("BaseFragment")])])])])]),s._v(" "),a("p",[s._v("测试类的命名以它要测试的类的名称开始，以 Test 结束。例如："),a("code",[s._v("HashTest")]),s._v(" 或 "),a("code",[s._v("HashIntegrationTest")]),s._v("。")]),s._v(" "),a("p",[s._v("接口（interface）：命名规则与类一样采用大驼峰命名法，多以 able 或 ible 结尾，如 "),a("code",[s._v("interface Runnable")]),s._v("、"),a("code",[s._v("interface Accessible")]),s._v("。")]),s._v(" "),a("blockquote",[a("p",[s._v("注意：如果项目采用 MVP，所有 Model、View、Presenter 的接口都以 I 为前缀，不加后缀，其他的接口采用上述命名规则。")])]),s._v(" "),a("h4",{attrs:{id:"方法名规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法名规范"}},[s._v("#")]),s._v(" 方法名规范")]),s._v(" "),a("p",[s._v("方法名都以 lowerCamelCase 风格编写。\n方法名通常是动词或动词短语。")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("方法")]),s._v(" "),a("th",[s._v("说明")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("initXX()")])]),s._v(" "),a("td",[s._v("初始化相关方法，使用 init 为前缀标识，如初始化布局 "),a("code",[s._v("initView()")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("isXX()")]),s._v(", "),a("code",[s._v("checkXX()")])]),s._v(" "),a("td",[s._v("方法返回值为 boolean 型的请使用 is/check 为前缀标识")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("getXX()")])]),s._v(" "),a("td",[s._v("返回某个值的方法，使用 get 为前缀标识")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("setXX()")])]),s._v(" "),a("td",[s._v("设置某个属性值")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("handleXX()")]),s._v(", "),a("code",[s._v("processXX()")])]),s._v(" "),a("td",[s._v("对数据进行处理的方法")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("displayXX()")]),s._v(", "),a("code",[s._v("showXX()")])]),s._v(" "),a("td",[s._v("弹出提示框和提示信息，使用 display/show 为前缀标识")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("updateXX()")])]),s._v(" "),a("td",[s._v("更新数据")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("saveXX()")]),s._v(", "),a("code",[s._v("insertXX()")])]),s._v(" "),a("td",[s._v("保存或插入数据")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("resetXX()")])]),s._v(" "),a("td",[s._v("重置数据")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("clearXX()")])]),s._v(" "),a("td",[s._v("清除数据")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("removeXX()")]),s._v(", "),a("code",[s._v("deleteXX()")])]),s._v(" "),a("td",[s._v("移除数据或者视图等，如 "),a("code",[s._v("removeView()")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("drawXX()")])]),s._v(" "),a("td",[s._v("绘制数据或效果相关的，使用 draw 前缀标识")])])])]),s._v(" "),a("h4",{attrs:{id:"常量名规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常量名规范"}},[s._v("#")]),s._v(" 常量名规范")]),s._v(" "),a("p",[s._v("常量名命名模式为 CONSTANT_CASE，全部字母大写，用下划线分隔单词。那到底什么算是一个常量？\n每个常量都是一个 static final 字段，但不是所有 static final 字段都是常量。在决定一个字段是否是一个常量时，得考虑它是否真的感觉像是一个常量。例如，如果观测任何一个该实例的状态是可变的，则它几乎肯定不会是一个常量。"),a("strong",[s._v("只是永远不打算改变的对象一般是不够的，它要真的一直不变才能将它示为常量")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Constants")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NUMBER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ImmutableListNAMES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ImmutableList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("of")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Ed"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Ann"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Joiner")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COMMA_JOINER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Joiner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token char"}},[s._v("','")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// because Joiner is immutable")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SomeMutableType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("EMPTY_ARRAY")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SomeEnum")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ENUM_CONSTANT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Not constants")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" nonFinal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"non-final"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" nonStatic "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"non-static"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SetmutableCollection")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HashSet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ImmutableSetmutableElements")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ImmutableSet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("of")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("mutable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Logger")]),s._v(" logger "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Logger")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getLogger")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" nonEmptyArray "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"these"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"can"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"change"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("h4",{attrs:{id:"非常量字段名规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非常量字段名规范"}},[s._v("#")]),s._v(" 非常量字段名规范")]),s._v(" "),a("p",[s._v("非常量字段名以 "),a("code",[s._v("lowerCamelCase")]),s._v(" 风格的基础上改造为如下风格：基本结构为 "),a("code",[s._v("scope{Type0}VariableName{Type1}")]),s._v("、"),a("code",[s._v("type0VariableName{Type1}")]),s._v("、"),a("code",[s._v("variableName{Type1}")]),s._v("。")]),s._v(" "),a("p",[s._v("说明："),a("code",[s._v("{}")]),s._v(" 中的内容为可选。")]),s._v(" "),a("blockquote",[a("p",[s._v("注意：所有的 VO（值对象）统一采用标准的 lowerCamelCase 风格编写，所有的 DTO（数据传输对象）就按照接口文档中定义的字段名编写。")])]),s._v(" "),a("h5",{attrs:{id:"scope-范围"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scope-范围"}},[s._v("#")]),s._v(" scope（范围）")]),s._v(" "),a("ul",[a("li",[s._v("非公有，非静态字段命名以 "),a("code",[s._v("m")]),s._v(" 开头。")]),s._v(" "),a("li",[s._v("非公有，静态字段命名以 "),a("code",[s._v("s")]),s._v(" 开头。")]),s._v(" "),a("li",[s._v("其他字段以小写字母开头。")])]),s._v(" "),a("p",[s._v("例如：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyClass")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" publicField"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyClass")]),s._v(" sSingleton"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" mPackagePrivate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" mPrivate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("protected")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" mProtected"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("使用 1 个字符前缀来表示作用范围，1 个字符的前缀必须小写，前缀后面是由表意性强的一个单词或多个单词组成的名字，而且每个单词的首写字母大写，其它字母小写，这样保证了对变量名能够进行正确的断句。")]),s._v(" "),a("h5",{attrs:{id:"type0-控件类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type0-控件类型"}},[s._v("#")]),s._v(" Type0（控件类型）")]),s._v(" "),a("p",[s._v("考虑到 Android 众多的 UI 控件，为避免控件和普通成员变量混淆以及更好地表达意思，所有用来表示控件的成员变量统一加上控件缩写作为前缀。\n例如：mIvAvatar、rvBooks、flContainer。")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[s._v("名称")])]),s._v(" "),a("th",[a("strong",[s._v("缩写")])])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("Button")]),s._v(" "),a("td",[s._v("btn")])]),s._v(" "),a("tr",[a("td",[s._v("CheckBox")]),s._v(" "),a("td",[s._v("cb")])]),s._v(" "),a("tr",[a("td",[s._v("EditText")]),s._v(" "),a("td",[s._v("et")])]),s._v(" "),a("tr",[a("td",[s._v("FrameLayout")]),s._v(" "),a("td",[s._v("fl")])]),s._v(" "),a("tr",[a("td",[s._v("GridView")]),s._v(" "),a("td",[s._v("gv")])]),s._v(" "),a("tr",[a("td",[s._v("ImageButton")]),s._v(" "),a("td",[s._v("ib")])]),s._v(" "),a("tr",[a("td",[s._v("ImageView")]),s._v(" "),a("td",[s._v("iv")])]),s._v(" "),a("tr",[a("td",[s._v("LinearLayout")]),s._v(" "),a("td",[s._v("ll")])]),s._v(" "),a("tr",[a("td",[s._v("ListView")]),s._v(" "),a("td",[s._v("lv")])]),s._v(" "),a("tr",[a("td",[s._v("ProgressBar")]),s._v(" "),a("td",[s._v("pb")])]),s._v(" "),a("tr",[a("td",[s._v("RadioButtion")]),s._v(" "),a("td",[s._v("rb")])]),s._v(" "),a("tr",[a("td",[s._v("RecyclerView")]),s._v(" "),a("td",[s._v("rv")])]),s._v(" "),a("tr",[a("td",[s._v("RelativeLayout")]),s._v(" "),a("td",[s._v("rl")])]),s._v(" "),a("tr",[a("td",[s._v("ScrollView")]),s._v(" "),a("td",[s._v("sv")])]),s._v(" "),a("tr",[a("td",[s._v("SeekBar")]),s._v(" "),a("td",[s._v("sb")])]),s._v(" "),a("tr",[a("td",[s._v("Spinner")]),s._v(" "),a("td",[s._v("spn")])]),s._v(" "),a("tr",[a("td",[s._v("TextView")]),s._v(" "),a("td",[s._v("tv")])]),s._v(" "),a("tr",[a("td",[s._v("ToggleButton")]),s._v(" "),a("td",[s._v("tb")])]),s._v(" "),a("tr",[a("td",[s._v("VideoView")]),s._v(" "),a("td",[s._v("vv")])]),s._v(" "),a("tr",[a("td",[s._v("WebView")]),s._v(" "),a("td",[s._v("wv")])])])]),s._v(" "),a("h5",{attrs:{id:"variablename-变量名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#variablename-变量名"}},[s._v("#")]),s._v(" VariableName（变量名）")]),s._v(" "),a("p",[s._v("变量名中可能会出现量词，我们需要创建统一的量词，它们更容易理解，也更容易搜索。\n例如：mFirstBook、mPreBook、curBook。")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("量词列表")]),s._v(" "),a("th",[s._v("量词后缀说明")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("First")])]),s._v(" "),a("td",[s._v("一组变量中的第一个")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("Last")])]),s._v(" "),a("td",[s._v("一组变量中的最后一个")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("Next")])]),s._v(" "),a("td",[s._v("一组变量中的下一个")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("Pre")])]),s._v(" "),a("td",[s._v("一组变量中的上一个")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("Cur")])]),s._v(" "),a("td",[s._v("一组变量中的当前变量")])])])]),s._v(" "),a("h5",{attrs:{id:"type1-数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type1-数据类型"}},[s._v("#")]),s._v(" Type1（数据类型）")]),s._v(" "),a("p",[s._v("对于表示集合或者数组的非常量字段名，我们可以添加后缀来增强字段的可读性，比如")]),s._v(" "),a("ul",[a("li",[s._v("集合添加如下后缀：List、Map、Set。")]),s._v(" "),a("li",[s._v("数组添加如下后缀：Arr。")])]),s._v(" "),a("p",[s._v("例如："),a("code",[s._v("mIvAvatarList")]),s._v("、"),a("code",[s._v("userArr")]),s._v("、"),a("code",[s._v("firstNameSet")]),s._v("。")]),s._v(" "),a("blockquote",[a("p",[s._v("注意：如果数据类型不确定的话，比如表示的是很多书，那么使用其复数形式来表示也可，例如 "),a("code",[s._v("mBooks")]),s._v("。")])]),s._v(" "),a("h4",{attrs:{id:"参数名规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数名规范"}},[s._v("#")]),s._v(" 参数名规范")]),s._v(" "),a("p",[s._v("参数名以 lowerCamelCase 风格编写，参数应该避免用单个字符命名。")]),s._v(" "),a("h4",{attrs:{id:"局部变量名规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#局部变量名规范"}},[s._v("#")]),s._v(" 局部变量名规范")]),s._v(" "),a("p",[s._v("局部变量名以 lowerCamelCase 风格编写，比起其它类型的名称，局部变量名可以有更为宽松的缩写。\n虽然缩写更宽松，但还是要避免用单字符进行命名，除了临时变量和循环变量。\n即使局部变量是 final 和不可改变的，也不应该把它示为常量，自然也不能用常量的规则去命名它。")]),s._v(" "),a("h4",{attrs:{id:"临时变量规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#临时变量规范"}},[s._v("#")]),s._v(" 临时变量规范")]),s._v(" "),a("p",[s._v("临时变量通常被取名为 i、j、k、m 和 n，它们一般用于整型；c、d、e，它们一般用于字符型。 如：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" len"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"代码样式规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码样式规范"}},[s._v("#")]),s._v(" 代码样式规范")]),s._v(" "),a("h4",{attrs:{id:"使用标准大括号样式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用标准大括号样式"}},[s._v("#")]),s._v(" 使用标准大括号样式")]),s._v(" "),a("p",[s._v("左大括号不单独占一行，与其前面的代码位于同一行：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyClass")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("something"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("somethingElse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("我们需要在条件语句周围添加大括号。例外情况：如果整个条件语句（条件和主体）适合放在同一行，那么您可以（但不是必须）将其全部放在一行上。例如，我们接受以下样式：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("condition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("同样也接受以下样式：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("condition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("但不接受以下样式：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("condition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// bad!")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:"编写简短方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编写简短方法"}},[s._v("#")]),s._v(" 编写简短方法")]),s._v(" "),a("p",[s._v("在可行的情况下，尽量编写短小精炼的方法。我们了解，有些情况下较长的方法是恰当的，因此对方法的代码长度没有做出硬性限制。如果某个方法的代码超出 40 行，请考虑是否可以在不破坏程序结构的前提下对其拆解。")]),s._v(" "),a("h4",{attrs:{id:"类成员的顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类成员的顺序"}},[s._v("#")]),s._v(" 类成员的顺序")]),s._v(" "),a("p",[s._v("这并没有唯一的正确解决方案，但如果都使用一致的顺序将会提高代码的可读性，推荐使用如下排序：")]),s._v(" "),a("ul",[a("li",[s._v("常量")]),s._v(" "),a("li",[s._v("字段")]),s._v(" "),a("li",[s._v("构造函数")]),s._v(" "),a("li",[s._v("重写函数和回调")]),s._v(" "),a("li",[s._v("公有函数")]),s._v(" "),a("li",[s._v("私有函数")]),s._v(" "),a("li",[s._v("内部类或接口")])]),s._v(" "),a("p",[s._v("例如：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MainActivity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Activity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TAG")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MainActivity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getSimpleName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" mTitle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TextView")]),s._v(" mTextViewTitle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("onCreate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("        \n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTitle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        mTitle "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setUpView")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("       \n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AnInnerClass")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])]),a("p",[s._v("如果类继承于 Android 组件（例如 Activity 或 Fragment），那么把重写函数按照他们的生命周期进行排序是一个非常好的习惯，例如，Activity 实现了 onCreate()、onDestroy()、onPause()、onResume()，它的正确排序如下所示：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MainActivity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Activity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//Order matches Activity lifecycle    ")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("onCreate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("onResume")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("onPause")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("onDestroy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("h4",{attrs:{id:"函数参数的排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数参数的排序"}},[s._v("#")]),s._v(" 函数参数的排序")]),s._v(" "),a("p",[s._v("在 Android 开发过程中，Context 在函数参数中是再常见不过的了，我们最好把 Context 作为其第一个参数。\n正相反，我们把回调接口应该作为其最后一个参数。例如：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Context always goes first")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("User")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("loadUser")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Context")]),s._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" userId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Callbacks always go last")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("loadUserAsync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Context")]),s._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" userId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("UserCallback")]),s._v(" callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h4",{attrs:{id:"字符串常量的命名和值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串常量的命名和值"}},[s._v("#")]),s._v(" 字符串常量的命名和值")]),s._v(" "),a("p",[s._v("Android SDK 中的很多类都用到了键值对函数，比如SharedPreferences、Bundle、Intent，所以，即便是一个小应用，我们最终也不得不编写大量的字符串常量。\n当时用到这些类的时候，我们 "),a("strong",[s._v("必须")]),s._v(" 将它们的键定义为 static final 字段，并遵循以下指示作为前缀。")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("类")]),s._v(" "),a("th",[s._v("字段名前缀")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("SharedPreferences")]),s._v(" "),a("td",[a("code",[s._v("PREF_")])])]),s._v(" "),a("tr",[a("td",[s._v("Bundle")]),s._v(" "),a("td",[a("code",[s._v("BUNDLE_")])])]),s._v(" "),a("tr",[a("td",[s._v("Fragment Arguments")]),s._v(" "),a("td",[a("code",[s._v("ARGUMENT_")])])]),s._v(" "),a("tr",[a("td",[s._v("Intent Extra")]),s._v(" "),a("td",[a("code",[s._v("EXTRA_")])])]),s._v(" "),a("tr",[a("td",[s._v("Intent Action")]),s._v(" "),a("td",[a("code",[s._v("ACTION_")])])])])]),s._v(" "),a("p",[s._v("说明：虽然 Fragment.getArguments() 得到的也是 Bundle ，但因为这是 Bundle 的常用用法，所以特意为此定义一个不同的前缀。\n例如：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 注意：字段的值与名称相同以避免重复问题")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PREF_EMAIL")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"PREF_EMAIL"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("BUNDLE_AGE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"BUNDLE_AGE"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ARGUMENT_USER_ID")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ARGUMENT_USER_ID"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 与意图相关的项使用完整的包名作为值的前缀")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("EXTRA_SURNAME")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"com.myapp.extras.EXTRA_SURNAME"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ACTION_OPEN_USER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"com.myapp.action.ACTION_OPEN_USER"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h4",{attrs:{id:"activities-和-fragments-的传参"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#activities-和-fragments-的传参"}},[s._v("#")]),s._v(" Activities 和 Fragments 的传参")]),s._v(" "),a("p",[s._v("当 Activity 或 Fragment 传递数据通过 Intent 或 Bundle 时，不同值的键须遵循上一条所提及到的。\n当 Activity 或 Fragment 启动需要传递参数时，那么它需要提供一个 public static 的函数来帮助启动或创建它。\n这方面，AS 已帮你写好了相关的 Live Templates，启动相关 Activity 的只需要在其内部输入 starter 即可生成它的启动器，如下所示：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Context")]),s._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("User")]),s._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Intent")]),s._v(" starter "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Intent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MainActivity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        starter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("putParcelableExtra")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("EXTRA_USER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("startActivity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("starter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("同理，启动相关 Fragment 在其内部输入 newInstance 即可，如下所示：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MainFragment")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("newInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("User")]),s._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Bundle")]),s._v(" args "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Bundle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("putParcelable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ARGUMENT_USER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MainFragment")]),s._v(" fragment "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MainFragment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        fragment"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setArguments")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" fragment"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("在kotlin中没有快捷指令，需要我们自己去新建一个 Live Templates。具体的实现方式在这里就不细说了，有心可以去自己学习下。")]),s._v(" "),a("blockquote",[a("p",[s._v("注意：这些函数需要放在 onCreate() 之前的类的顶部；如果我们使用了这种方式，那么 extras 和 arguments 的键应该是 private 的，因为它们不再需要暴露给其他类来使用。")])]),s._v(" "),a("h4",{attrs:{id:"行长限制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#行长限制"}},[s._v("#")]),s._v(" 行长限制")]),s._v(" "),a("p",[s._v("代码中每一行文本的长度都应该不超过 100 个字符。虽然关于此规则存在很多争论，但最终决定仍是以 100 个字符为上限，如果行长超过了 100（AS 窗口右侧的竖线就是设置的行宽末尾 ），我们通常有两种方法来缩减行长")]),s._v(" "),a("ul",[a("li",[s._v("提取一个局部变量或方法（最好）。")]),s._v(" "),a("li",[s._v("使用换行符将一行换成多行。")])]),s._v(" "),a("p",[s._v("不过存在以下例外情况：")]),s._v(" "),a("ul",[a("li",[s._v("如果备注行包含长度超过 100 个字符的示例命令或文字网址，那么为了便于剪切和粘贴，该行可以超过 100 个字符。")]),s._v(" "),a("li",[s._v("导入语句行可以超出此限制，因为用户很少会看到它们（这也简化了工具编写流程）。")])]),s._v(" "),a("h4",{attrs:{id:"换行策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#换行策略"}},[s._v("#")]),s._v(" 换行策略")]),s._v(" "),a("p",[s._v("这没有一个准确的解决方案来决定如何换行，通常不同的解决方案都是有效的，但是有一些规则可以应用于常见的情况。")]),s._v(" "),a("h5",{attrs:{id:"操作符的换行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作符的换行"}},[s._v("#")]),s._v(" 操作符的换行")]),s._v(" "),a("p",[s._v("除赋值操作符之外，我们把换行符放在操作符之前，例如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("int longName = anotherVeryLongVariable + anEvenLongerOne - thisRidiculousLongOne\n        + theFinalOne;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("赋值操作符的换行我们放在其后，例如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("int longName =\n        anotherVeryLongVariable + anEvenLongerOne - thisRidiculousLongOne + theFinalOne;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h5",{attrs:{id:"函数链的换行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数链的换行"}},[s._v("#")]),s._v(" 函数链的换行")]),s._v(" "),a("p",[s._v("当同一行中调用多个函数时（比如使用构建器时），对每个函数的调用应该在新的一行中，我们把换行符插入在 "),a("code",[s._v(".")]),s._v(" 之前。例如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('    Picasso.with(context)\n            .load("https://blankj.com/images/avatar.jpg")\n            .into(ivAvatar);\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h5",{attrs:{id:"多参数的换行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多参数的换行"}},[s._v("#")]),s._v(" 多参数的换行")]),s._v(" "),a("p",[s._v("当一个方法有很多参数或者参数很长的时候，我们应该在每个 "),a("code",[s._v(",")]),s._v(" 后面进行换行。比如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('    loadPicture(context,"https://blankj.com/images/avatar.jpg",ivAvatar,\n                "Avatar of the user",clickListener);\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h5",{attrs:{id:"rxjava-链式的换行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rxjava-链式的换行"}},[s._v("#")]),s._v(" RxJava 链式的换行")]),s._v(" "),a("p",[s._v("RxJava 的每个操作符都需要换新行，并且把换行符插入在 "),a("code",[s._v(".")]),s._v(" 之前。例如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    public Observable<Location> syncLocations() {\n        return mDatabaseHelper\n                .getAllLocations()\n                .concatMap(new Func1<Location, Observable<? extends Location>>() {\n                    @Override\n                    public Observable<? extends Location> call(Location location) {\n                        return mRetrofitService.getLocation(location.id);\n                    }\n                })\n                .retry(new Func2<Integer, Throwable, Boolean>() {\n                    @Override\n                    public Boolean call(Integer numRetries, Throwable throwable) {\n                        return throwable instanceof RetrofitError;\n                    }\n                });\n    }\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("h3",{attrs:{id:"资源文件规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#资源文件规范"}},[s._v("#")]),s._v(" 资源文件规范")]),s._v(" "),a("p",[s._v("资源文件命名为全部小写，采用下划线命名法。\n如果想对资源文件进行分包可以参考下面的方法\n方法很简单，配置我们的app文件夹下的 build.gradle 文件，比如我的")]),s._v(" "),a("div",{staticClass:"language-groovy line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[s._v("android "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("    \n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("...")]),s._v("\n            sourceSets "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            main "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("srcDirs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'src/main/res'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'src/main/res_core'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'src/main/res_sub'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("配置完之后，sync project 一下就成功了。")]),s._v(" "),a("h4",{attrs:{id:"动画资源文件-anim-和-animator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动画资源文件-anim-和-animator"}},[s._v("#")]),s._v(" 动画资源文件（anim/ 和 animator/）")]),s._v(" "),a("p",[s._v("安卓主要包含属性动画和视图动画，其视图动画包括补间动画和逐帧动画。属性动画文件需要放在 res/animator/ 目录下，视图动画文件需放在 res/anim/ 目录下。")]),s._v(" "),a("p",[a("strong",[s._v("命名规则：")]),s._v("{模块名_}逻辑名称。\n"),a("strong",[s._v("说明：")]),s._v("{} 中的内容为可选，逻辑名称 可由多个单词加下划线组成。\n例如：refresh_progress.xml、market_cart_add.xml、market_cart_remove.xml。")]),s._v(" "),a("p",[s._v("如果是普通的补间动画或者属性动画，可采用：动画类型_方向 的命名方式。例如：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("名称")]),s._v(" "),a("th",[s._v("说明")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("fade_in")])]),s._v(" "),a("td",[s._v("淡入")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("fade_out")])]),s._v(" "),a("td",[s._v("淡出")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("push_down_in")])]),s._v(" "),a("td",[s._v("从下方推入")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("push_down_out")])]),s._v(" "),a("td",[s._v("从下方推出")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("push_left")])]),s._v(" "),a("td",[s._v("推向左方")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("slide_in_from_top")])]),s._v(" "),a("td",[s._v("从头部滑动进入")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("zoom_enter")])]),s._v(" "),a("td",[s._v("变形进入")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("slide_in")])]),s._v(" "),a("td",[s._v("滑动进入")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("shrink_to_middle")])]),s._v(" "),a("td",[s._v("中间缩小")])])])]),s._v(" "),a("h4",{attrs:{id:"颜色资源文件-color"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#颜色资源文件-color"}},[s._v("#")]),s._v(" 颜色资源文件（color/）")]),s._v(" "),a("p",[s._v("专门存放颜色相关的资源文件。")]),s._v(" "),a("p",[s._v("**命名规则：**类型_逻辑名称。\n例如：sel_btn_font.xml。")]),s._v(" "),a("p",[s._v("颜色资源也可以放于 res/drawable/ 目录，引用时则用 @drawable 来引用，但不推荐这么做，最好还是把两者分开。")]),s._v(" "),a("h4",{attrs:{id:"图片资源文件-drawable-和-mipmap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图片资源文件-drawable-和-mipmap"}},[s._v("#")]),s._v(" 图片资源文件（drawable/ 和 mipmap/）")]),s._v(" "),a("p",[a("code",[s._v("res/drawable/")]),s._v(" 目录下放的是位图文件（.png、.9.png、.jpg、.gif）或编译为可绘制对象资源子类型的 XML 文件，而 "),a("code",[s._v("res/mipmap/")]),s._v(" 目录下放的是不同密度的启动图标，所以 "),a("code",[s._v("res/mipmap/")]),s._v(" 只用于存放启动图标，其余图片资源文件都应该放到 "),a("code",[s._v("res/drawable/")]),s._v(" 目录下。")]),s._v(" "),a("p",[a("strong",[s._v("命名规则：")]),a("code",[s._v("类型{_模块名}_逻辑名称")]),s._v("、"),a("code",[s._v("类型{_模块名}_颜色")]),s._v("。\n"),a("strong",[s._v("说明：")]),a("code",[s._v("{}")]),s._v(" 中的内容为可选；"),a("code",[s._v("类型")]),s._v(" 可以是可绘制对象资源类型，也可以是控件类型（命令规范>非常量字段名规范>Type0）；最后可加后缀 "),a("code",[s._v("_small")]),s._v(" 表示小图，"),a("code",[s._v("_big")]),s._v(" 表示大图。\n例如：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("名称")]),s._v(" "),a("th",[s._v("说明")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("btn_main_about.png")])]),s._v(" "),a("td",[s._v("主页关于按键 "),a("code",[s._v("类型_模块名_逻辑名称")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("btn_back.png")])]),s._v(" "),a("td",[s._v("返回按键 "),a("code",[s._v("类型_逻辑名称")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("divider_maket_white.png")])]),s._v(" "),a("td",[s._v("商城白色分割线 "),a("code",[s._v("类型_模块名_颜色")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("ic_edit.png")])]),s._v(" "),a("td",[s._v("编辑图标 "),a("code",[s._v("类型_逻辑名称")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("bg_main.png")])]),s._v(" "),a("td",[s._v("主页背景 "),a("code",[s._v("类型_逻辑名称")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("btn_red.png")])]),s._v(" "),a("td",[s._v("红色按键 "),a("code",[s._v("类型_颜色")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("btn_red_big.png")])]),s._v(" "),a("td",[s._v("红色大按键 "),a("code",[s._v("类型_颜色")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("ic_head_small.png")])]),s._v(" "),a("td",[s._v("小头像图标 "),a("code",[s._v("类型_逻辑名称")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("bg_input.png")])]),s._v(" "),a("td",[s._v("输入框背景 "),a("code",[s._v("类型_逻辑名称")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("divider_white.png")])]),s._v(" "),a("td",[s._v("白色分割线 "),a("code",[s._v("类型_颜色")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("bg_main_head.png")])]),s._v(" "),a("td",[s._v("主页头部背景 "),a("code",[s._v("类型_模块名_逻辑名称")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("def_search_cell.png")])]),s._v(" "),a("td",[s._v("搜索页面默认单元图片 "),a("code",[s._v("类型_模块名_逻辑名称")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("ic_more_help.png")])]),s._v(" "),a("td",[s._v("更多帮助图标 "),a("code",[s._v("类型_逻辑名称")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("divider_list_line.png")])]),s._v(" "),a("td",[s._v("列表分割线 "),a("code",[s._v("类型_逻辑名称")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("sel_search_ok.xml")])]),s._v(" "),a("td",[s._v("搜索界面确认选择器 "),a("code",[s._v("类型_模块名_逻辑名称")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("shape_music_ring.xml")])]),s._v(" "),a("td",[s._v("音乐界面环形形状 "),a("code",[s._v("类型_模块名_逻辑名称")])])])])]),s._v(" "),a("p",[s._v("如果有多种形态，如按钮选择器："),a("code",[s._v("sel_btn_xx.xml")]),s._v("，采用如下命名：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("名称")]),s._v(" "),a("th",[s._v("说明")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("sel_btn_xx")])]),s._v(" "),a("td",[s._v("作用在 "),a("code",[s._v("btn_xx")]),s._v("上的 "),a("code",[s._v("selector")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("btn_xx_normal")])]),s._v(" "),a("td",[s._v("默认状态效果")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("btn_xx_pressed")])]),s._v(" "),a("td",[a("code",[s._v("state_pressed")]),s._v("点击效果")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("btn_xx_focused")])]),s._v(" "),a("td",[a("code",[s._v("state_focused")]),s._v("聚焦效果")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("btn_xx_disabled")])]),s._v(" "),a("td",[a("code",[s._v("state_enabled")]),s._v("不可用效果")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("btn_xx_checked")])]),s._v(" "),a("td",[a("code",[s._v("state_checked")]),s._v("选中效果")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("btn_xx_selected")])]),s._v(" "),a("td",[a("code",[s._v("state_selected")]),s._v("选中效果")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("btn_xx_hovered")])]),s._v(" "),a("td",[a("code",[s._v("state_hovered")]),s._v("悬停效果")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("btn_xx_checkable")])]),s._v(" "),a("td",[a("code",[s._v("state_checkable")]),s._v("可选效果")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("btn_xx_activated")])]),s._v(" "),a("td",[a("code",[s._v("state_activated")]),s._v("激活效果")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("btn_xx_window_focused")])]),s._v(" "),a("td",[a("code",[s._v("state_window_focused")]),s._v("窗口聚焦效果")])])])]),s._v(" "),a("blockquote",[a("p",[s._v("注意：使用 Android Studio 的插件 SelectorChapek 可以快速生成 selector，前提是命名要规范。")])]),s._v(" "),a("h4",{attrs:{id:"布局资源文件-layout"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#布局资源文件-layout"}},[s._v("#")]),s._v(" 布局资源文件（layout/）")]),s._v(" "),a("p",[a("strong",[s._v("命名规则：")]),a("code",[s._v("类型_模块名")]),s._v("、"),a("code",[s._v("类型{_模块名}_逻辑名称")]),s._v("。\n"),a("strong",[s._v("说明：")]),a("code",[s._v("{}")]),s._v(" 中的内容为可选。")]),s._v(" "),a("p",[s._v("例如：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("名称")]),s._v(" "),a("th",[s._v("说明")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("activity_main.xml")])]),s._v(" "),a("td",[s._v("主窗体 "),a("code",[s._v("类型_模块名")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("activity_main_head.xml")])]),s._v(" "),a("td",[s._v("主窗体头部 "),a("code",[s._v("类型_模块名_逻辑名称")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("fragment_music.xml")])]),s._v(" "),a("td",[s._v("音乐片段 "),a("code",[s._v("类型_模块名")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("fragment_music_player.xml")])]),s._v(" "),a("td",[s._v("音乐片段的播放器 "),a("code",[s._v("类型_模块名_逻辑名称")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("dialog_loading.xml")])]),s._v(" "),a("td",[s._v("加载对话框 "),a("code",[s._v("类型_逻辑名称")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("ppw_info.xml")])]),s._v(" "),a("td",[s._v("信息弹窗（PopupWindow） "),a("code",[s._v("类型_逻辑名称")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("item_main_song.xml")])]),s._v(" "),a("td",[s._v("主页歌曲列表项 "),a("code",[s._v("类型_模块名_逻辑名称")])])])])]),s._v(" "),a("h4",{attrs:{id:"菜单资源文件-menu"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#菜单资源文件-menu"}},[s._v("#")]),s._v(" 菜单资源文件（menu/）")]),s._v(" "),a("p",[s._v("菜单相关的资源文件应放在该目录下。")]),s._v(" "),a("p",[a("strong",[s._v("命名规则：")]),s._v("{模块名_}逻辑名称\n"),a("strong",[s._v("说明：")]),s._v("{} 中的内容为可选。")]),s._v(" "),a("p",[s._v("例如：main_drawer.xml、navigation.xml。")]),s._v(" "),a("h4",{attrs:{id:"values-资源文件-values"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#values-资源文件-values"}},[s._v("#")]),s._v(" values 资源文件（values/）")]),s._v(" "),a("p",[s._v("values/ 资源文件下的文件都以 s 结尾，如 attrs.xml、colors.xml、dimens.xml。\n起作用的不是文件名称，而是 "),a("resources",[s._v(" 标签下的各种标签。\n比如 "),a("style",[s._v(' 决定样式，<color> 决定颜色，所以，可以把一个大的 xml 文件分割成多个小的文件，比如可以有多个 style 文件，如 styles.xml、styles_home.xml、styles_item_details.xml、styles_forms.xml。</p>\n<h5 id="colors-xml"><a class="header-anchor" href="#colors-xml">#</a> colors.xml</h5>\n<p><code>&lt;color&gt;</code> 的 <code>name</code> 命名使用下划线命名法，在你的 <code>colors.xml</code> 文件中应该只是映射颜色的名称一个 ARGB 值，而没有其它的。不要使用它为不同的按钮来定义 ARGB 值。</p>\n<p>例如，不要像下面这样做：</p>\n\x3c!--beforebegin--\x3e<div class="language- line-numbers-mode">\x3c!--afterbegin--\x3e<pre v-pre class="language-text"><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;\n    &lt;color name=&quot;button_foreground&quot;&gt;#FFFFFF&lt;/color&gt;\n    &lt;color name=&quot;button_background&quot;&gt;#2A91BD&lt;/color&gt;\n    &lt;color name=&quot;comment_background_inactive&quot;&gt;#5F5F5F&lt;/color&gt;\n    &lt;color name=&quot;comment_background_active&quot;&gt;#939393&lt;/color&gt;\n    &lt;color name=&quot;comment_foreground&quot;&gt;#FFFFFF&lt;/color&gt;\n    &lt;color name=&quot;comment_foreground_important&quot;&gt;#FF9D2F&lt;/color&gt;\n    &lt;color name=&quot;comment_shadow&quot;&gt;#323232&lt;/color&gt;\n&lt;/selector&gt;\n</code></pre>\n<div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div>\x3c!--beforeend--\x3e</div>\x3c!--afterend--\x3e<p>使用这种格式，会非常容易重复定义 ARGB 值，而且如果应用要改变基色的话会非常困难。同时，这些定义是跟一些环境关联起来的，如 <code>button</code> 或者 <code>comment</code>，应该放到一个按钮风格中，而不是在 <code>colors.xml</code> 文件中。</p>\n<p>相反，应该这样做：</p>\n\x3c!--beforebegin--\x3e<div class="language-xml line-numbers-mode">\x3c!--afterbegin--\x3e<pre v-pre class="language-xml"><code><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>selector</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>white<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>#FFFFFF<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gray_light<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>#DBDBDB<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gray<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>#939393<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gray_dark<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>#5F5F5F<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>black<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>#323232<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">></span></span>\n  <span class="token comment">&lt;!-- basic colors --\x3e</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>green<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>#27D34D<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>blue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>#2A91BD<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>orange<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>#FF9D2F<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>#FF432F<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>selector</span><span class="token punctuation">></span></span>\n</code></pre>\n<div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div>\x3c!--beforeend--\x3e</div>\x3c!--afterend--\x3e<p>向应用设计者那里要这个调色板，名称不需要跟 <code>&quot;green&quot;</code>、<code>&quot;blue&quot;</code> 等等相同。<code>&quot;brand_primary&quot;</code>、<code>&quot;brand_secondary&quot;</code>、<code>&quot;brand_negative&quot;</code> 这样的名字也是完全可以接受的。像这样规范的颜色很容易修改或重构，会使应用一共使用了多少种不同的颜色变得非常清晰。通常一个具有审美价值的 UI 来说，减少使用颜色的种类是非常重要的。</p>\n<blockquote>\n<p>注意：如果某些颜色和主题有关，那就单独写一个 <code>colors_theme.xml</code>。</p>\n</blockquote>\n<h5 id="dimens-xml"><a class="header-anchor" href="#dimens-xml">#</a> dimens.xml</h5>\n<p>像对待 colors.xml 一样对待 dimens.xml 文件，与定义颜色调色板一样，你同时也应该定义一个空隙间隔和字体大小的“调色板”。 一个好的例子，如下所示：</p>\n\x3c!--beforebegin--\x3e<div class="language-xml line-numbers-mode">\x3c!--afterbegin--\x3e<pre v-pre class="language-xml"><code><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">></span></span>    \n  <span class="token comment">&lt;!-- font sizes --\x3e</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dimen</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>font_22<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>22sp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dimen</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dimen</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>font_18<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>18sp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dimen</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dimen</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>font_15<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>15sp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dimen</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dimen</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>font_12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>12sp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dimen</span><span class="token punctuation">></span></span>    \n  <span class="token comment">&lt;!-- typical spacing between two views --\x3e</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dimen</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>spacing_40<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>40dp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dimen</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dimen</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>spacing_24<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>24dp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dimen</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dimen</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>spacing_14<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>14dp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dimen</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dimen</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>spacing_10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>10dp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dimen</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dimen</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>spacing_4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>4dp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dimen</span><span class="token punctuation">></span></span>    \n  <span class="token comment">&lt;!-- typical sizes of views --\x3e</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dimen</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button_height_60<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>60dp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dimen</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dimen</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button_height_40<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>40dp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dimen</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dimen</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button_height_32<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>32dp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dimen</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span>\n</code></pre>\n<div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div>\x3c!--beforeend--\x3e</div>\x3c!--afterend--\x3e<p>布局时在写 <code>margins</code> 和 <code>paddings</code> 时，你应该使用 <code>spacing_xx</code> 尺寸格式来布局，而不是像对待 <code>string</code> 字符串一样直接写值，像这样规范的尺寸很容易修改或重构，会使应用所有用到的尺寸一目了然。 这样写会非常有感觉，会使组织和改变风格或布局非常容易。</p>\n<h5 id="strings-xml"><a class="header-anchor" href="#strings-xml">#</a> strings.xml</h5>\n<p><string> 的 name 命名使用下划线命名法，采用以下规则：{模块名_}逻辑名称，这样方便同一个界面的所有 string 都放到一起，方便查找。</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>main_menu_about</code></td>\n<td>主菜单按键文字</td>\n</tr>\n<tr>\n<td><code>friend_title</code></td>\n<td>好友模块标题栏</td>\n</tr>\n<tr>\n<td><code>friend_dialog_del</code></td>\n<td>好友删除提示</td>\n</tr>\n<tr>\n<td><code>login_check_email</code></td>\n<td>登录验证</td>\n</tr>\n<tr>\n<td><code>dialog_title</code></td>\n<td>弹出框标题</td>\n</tr>\n<tr>\n<td><code>button_ok</code></td>\n<td>确认键</td>\n</tr>\n<tr>\n<td><code>loading</code></td>\n<td>加载文字</td>\n</tr>\n</tbody>\n</table>\n<h5 id="styles-xml"><a class="header-anchor" href="#styles-xml">#</a> styles.xml</h5>\n\x3c!--beforebegin--\x3e<div class="language- line-numbers-mode">\x3c!--afterbegin--\x3e<pre v-pre class="language-text"><code>应用到 TextView 中：\n```xml\n&lt;TextView\n\tandroid:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:text=&quot;@string/price&quot;\n    style=&quot;@style/ContentText&quot;    /&gt;\n</code></pre>\n<div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div>\x3c!--beforeend--\x3e</div>\x3c!--afterend--\x3e<p>或许你需要为按钮控件做同样的事情，不要停止在那里，将一组相关的和重复 android:xxxx 的属性放到一个通用的 <style> 中。</p>\n<h4 id="id-命名"><a class="header-anchor" href="#id-命名">#</a> id 命名</h4>\n<p>**命名规则：**view缩写{_模块名}_逻辑名，例如： btn_main_search、btn_back。</p>\n<h3 id="版本统一规范"><a class="header-anchor" href="#版本统一规范">#</a> 版本统一规范</h3>\n<p>Android 开发存在着众多版本的不同，比如 compileSdkVersion、minSdkVersion、targetSdkVersion 以及项目中依赖第三方库的版本，不同的 module 及不同的开发人员都有不同的版本，所以需要一个统一版本规范的文件。\n在根目录下的gradle文件中加入:</p>\n\x3c!--beforebegin--\x3e<div class="language-groovy line-numbers-mode">\x3c!--afterbegin--\x3e<pre v-pre class="language-groovy"><code>ext <span class="token punctuation">{</span>\n    <span class="token comment">// Sdk and tools</span>\n    compile_sdk_version <span class="token operator">=</span> <span class="token number">26</span>\n    build_tools_version <span class="token operator">=</span> <span class="token string">\'26.0.0\'</span>\n    min_sdk_version <span class="token operator">=</span> <span class="token number">14</span>\n    target_sdk_version <span class="token operator">=</span> <span class="token number">22</span>\n    version_code <span class="token operator">=</span> <span class="token number">100900900</span>\n    version_name <span class="token operator">=</span> <span class="token string">\'1.9.9\'</span>\n    <span class="token comment">// App dependencies</span>\n    support_version <span class="token operator">=</span> <span class="token string">\'26.1.0\'</span>\n    leakcanary_version <span class="token operator">=</span> <span class="token string">\'1.5.4\'</span>\n    junit_version <span class="token operator">=</span> <span class="token string">\'4.12\'</span>\n    robolectric_version <span class="token operator">=</span> <span class="token string">\'3.1.2\'</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div>\x3c!--beforeend--\x3e</div>\x3c!--afterend--\x3e<p>然后在build.gradle(app)中使用即可</p>\n\x3c!--beforebegin--\x3e<div class="language-groovy line-numbers-mode">\x3c!--afterbegin--\x3e<pre v-pre class="language-groovy"><code>android <span class="token punctuation">{</span>\n\tcompileSdkVersion compile_sdk_version\n    defaultConfig <span class="token punctuation">{</span>\n    \tminSdkVersion min_sdk_version\n        versionCode version_code\n        versionName version_name\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\ndependencies <span class="token punctuation">{</span>\n\tcompileOnly <span class="token interpolation-string"><span class="token string">"com.android.support:appcompat-v7:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">support_version</span></span><span class="token string">"</span></span>\n    compileOnly <span class="token interpolation-string"><span class="token string">"com.android.support:design:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">support_version</span></span><span class="token string">"</span></span>\n    testImplementation <span class="token interpolation-string"><span class="token string">"junit:junit:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">junit_version</span></span><span class="token string">"</span></span>\n    testImplementation <span class="token interpolation-string"><span class="token string">"org.robolectric:robolectric:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">robolectric_version</span></span><span class="token string">"</span></span>\n    testImplementation <span class="token interpolation-string"><span class="token string">"com.android.support:support-v4:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">support_version</span></span><span class="token string">"</span></span>\n<span class="token punctuation">}</span>\n</code></pre>\n<div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div>\x3c!--beforeend--\x3e</div>\x3c!--afterend--\x3e<p>如果是开发多个系统级别的应用，当多个应用同时用到相同的 so 库时，一定要确保 so 库的版本一致，否则可能会引发应用崩溃。</p>\n<h3 id="注释规范"><a class="header-anchor" href="#注释规范">#</a> 注释规范</h3>\n<p>为了减少他人阅读你代码的痛苦值，请在关键地方做好注释。</p>\n<h4 id="类注释"><a class="header-anchor" href="#类注释">#</a> 类注释</h4>\n<p>每个类完成后应该有作者姓名和联系方式的注释，对自己的代码负责。</p>\n\x3c!--beforebegin--\x3e<div class="language-java line-numbers-mode">\x3c!--afterbegin--\x3e<pre v-pre class="language-java"><code><span class="token comment">/**\n* &lt;pre>\n* author : Blankj \n* e-mail : xxx@xx\n* time   : 2017/03/07\n* desc   : xxxx 描述 \n* version: 1.0 *\n* &lt;/pre>\n*/</span>\n</code></pre>\n<div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div>\x3c!--beforeend--\x3e</div>\x3c!--afterend--\x3e<p>具体可以在 AS 中自己配制，进入 Settings -&gt; Editor -&gt; File and Code Templates -&gt; Includes -&gt; File Header，输入</p>\n\x3c!--beforebegin--\x3e<div class="language-java line-numbers-mode">\x3c!--afterbegin--\x3e<pre v-pre class="language-java"><code><span class="token comment">/**\n * &lt;pre>\n *     author : ${USER} \n *     e-mail : xxx@xx \n *     time   : ${YEAR}/${MONTH}/${DAY} \n *     desc   : \n *     version: 1.0\n *&lt;/pre>\n **/</span>\n</code></pre>\n<div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div>\x3c!--beforeend--\x3e</div>\x3c!--afterend--\x3e<p>这样便可在每次新建类的时候自动加上该头注释。</p>\n<h4 id="方法注释"><a class="header-anchor" href="#方法注释">#</a> 方法注释</h4>\n<p>每一个成员方法（包括自定义成员方法、覆盖方法、属性方法）的方法头都必须做方法头注释，在方法前一行输入 /** + 回车 或者设置 Fix doc comment（Settings -&gt; Keymap -&gt; Fix doc comment）快捷键，AS 便会帮你生成模板，我们只需要补全参数即可，如下所示。</p>\n\x3c!--beforebegin--\x3e<div class="language-java line-numbers-mode">\x3c!--afterbegin--\x3e<pre v-pre class="language-java"><code>    <span class="token comment">/**\n     * bitmap 转 byteArr * * @param bitmap bitmap 对象 * @param format 格式 * @return 字节数组\n     */</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">bitmap2Bytes</span><span class="token punctuation">(</span><span class="token class-name">Bitmap</span> bitmap<span class="token punctuation">,</span> <span class="token class-name">CompressFormat</span> format<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>bitmap <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n        <span class="token class-name">ByteArrayOutputStream</span> baos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        bitmap<span class="token punctuation">.</span><span class="token function">compress</span><span class="token punctuation">(</span>format<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> baos<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> baos<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n</code></pre>\n<div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div>\x3c!--beforeend--\x3e</div>\x3c!--afterend--\x3e<h4 id="块注释"><a class="header-anchor" href="#块注释">#</a> 块注释</h4>\n<p>块注释与其周围的代码在同一缩进级别。它们可以是 /* ... <em>/ 风格，也可以是 // ... 风格（<strong>//后最好带一个空格</strong>）。对于多行的 /</em> ... */ 注释，后续行必须从 * 开始， 并且与前一行的 * 对齐。以下示例注释都是 OK 的。</p>\n\x3c!--beforebegin--\x3e<div class="language-java line-numbers-mode">\x3c!--afterbegin--\x3e<pre v-pre class="language-java"><code>    <span class="token comment">/*\n     *  This is okay.\n     */</span>\n    <span class="token comment">// And so</span>\n    <span class="token comment">// is this.</span>\n    <span class="token comment">/* Or you can* even do this. */</span>\n</code></pre>\n<div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div>\x3c!--beforeend--\x3e</div>\x3c!--afterend--\x3e<p>注释不要封闭在由星号或其它字符绘制的框架里。</p>\n<blockquote>\n<p>Tip：在写多行注释时，如果你希望在必要时能重新换行（即注释像段落风格一样），那么使用 /* ... */。</p>\n</blockquote>\n<h4 id="其他一些注释"><a class="header-anchor" href="#其他一些注释">#</a> 其他一些注释</h4>\n<p>AS 已帮你集成了一些注释模板，我们只需要直接使用即可，在代码中输入 todo、fixme 等这些注释模板，回车后便会出现如下注释。</p>\n\x3c!--beforebegin--\x3e<div class="language-java line-numbers-mode">\x3c!--afterbegin--\x3e<pre v-pre class="language-java"><code><span class="token comment">// TODO: 17/3/14 需要实现，但目前还未实现的功能的说明</span>\n<span class="token comment">// FIXME: 17/3/14 需要修正，甚至代码是错误的，不能工作，需要修复的说明</span>\n</code></pre>\n<div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div>\x3c!--beforeend--\x3e</div>\x3c!--afterend--\x3e</ContentSlotsDistributor>\n</template>\n<style> 的 name 命名使用大驼峰命名法，几乎每个项目都需要适当的使用 styles.xml 文件，因为对于一个视图来说，有一个重复的外观是很常见的，将所有的外观细节属性（colors、padding、font）放在 styles.xml 文件中。 在应用中对于大多数文本内容，最起码你应该有一个通用的 styles.xml 文件，例如：\n```xml\n<style name="ContentText">\n  <item name="android:textSize">@dimen/font_normal</item>\n  <item name="android:textColor">@color/basic_black</item>\n')])])],1)])}),[],!1,null,null,null);a.default=e.exports}}]);