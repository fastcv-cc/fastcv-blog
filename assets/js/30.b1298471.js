(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{365:function(s,n,a){"use strict";a.r(n);var e=a(1),t=Object(e.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[s._v("Service(服务)是一个一种可以在后台执行长时间运行操作而没有用户界面的应用组件。服务可由其他应用组件启动（如Activity），服务一旦被启动将在后台一直运行，即使启动服务的组件（Activity）已销毁也不受影响。 此外，组件可以绑定到服务，以与之进行交互，甚至是执行进程间通信 (IPC)。 例如，服务可以处理网络事务、播放音乐，执行文件 I/O 或与内容提供程序交互，而所有这一切均可在后台进行。")]),s._v(" "),n("p",[s._v("和Activity一样，它也有自己的生命周期。但是和Activity不同的是，不同的服务状态有不用的生命周期。")]),s._v(" "),n("p",[s._v("所以，我们结合它的服务状态来探讨它的生命周期。但是在此之前，我们先了解下它的启动方式。")]),s._v(" "),n("h1",{attrs:{id:"启动方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#启动方式"}},[s._v("#")]),s._v(" 启动方式")]),s._v(" "),n("p",[s._v("这里和Activity一样，分为 "),n("strong",[s._v("显式启动")]),s._v(" 和 "),n("strong",[s._v("隐式启动")]),s._v("。")]),s._v(" "),n("h2",{attrs:{id:"显式启动"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#显式启动"}},[s._v("#")]),s._v(" 显式启动")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("        startService(Intent(this,BaseService::class.java))\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("        bindService(Intent(this,BActivity::class.java),serviceConnection, BIND_AUTO_CREATE)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("直接使用startService启动一个服务。")]),s._v(" "),n("p",[s._v("这里解释下 bindService 中需要的几个参数：")]),s._v(" "),n("p",[s._v("ServiceConnection：需要实现的一个接口")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("public interface ServiceConnection {\n    void onServiceConnected(ComponentName name, IBinder service);\n\n    void onServiceDisconnected(ComponentName name);\n\n    default void onBindingDied(ComponentName name) {\n    }\n\n    default void onNullBinding(ComponentName name) {\n    }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("flags：我们一般使用 BIND_AUTO_CREATE")]),s._v(" "),n("h2",{attrs:{id:"隐式启动"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#隐式启动"}},[s._v("#")]),s._v(" 隐式启动")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('        startService(Intent().apply {\n            action = "cc.fastcv.codelab.services.BaseService"\n        })\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('        bindService(Intent().apply {\n            action = "cc.fastcv.codelab.services.BaseService"\n        },serviceConnection, BIND_AUTO_CREATE)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("这里的action就是我们在清单文件中配置的intent-filter的action。清单文件中，service的标签属性如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<service android:enabled=["true" | "false"]\n    android:exported=["true" | "false"]\n    android:icon="drawable resource"\n    android:isolatedProcess=["true" | "false"]\n    android:label="string resource"\n    android:name="string"\n    android:permission="string"\n    android:process="string" >\n    . . .\n</service>\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("table",[n("thead",[n("tr",[n("th",[s._v("属性")]),s._v(" "),n("th",[s._v("作用")])])]),s._v(" "),n("tbody",[n("tr",[n("td",[s._v("android:exported")]),s._v(" "),n("td",[s._v("代表是否能被其他应用隐式调用，其默认值是由service中有无intent-filter决定的，如果有intent-filter，默认值为true，否则为false。为false的情况下，即使有intent-filter匹配，也无法打开，即无法被其他应用隐式调用。")])]),s._v(" "),n("tr",[n("td",[s._v("android:name")]),s._v(" "),n("td",[s._v("对应Service类名 android:permission：是权限声明 android:process：是否需要在单独的进程中运行,当设置为android:process=”:remote”时，代表Service在单独的进程中运行。注意“：”很重要，它的意思是指要在当前进程名称前面附加上当前的包名，所以“remote”和”:remote”不是同一个意思，前者的进程名称为：remote，而后者的进程名称为：App-packageName:remote。")])]),s._v(" "),n("tr",[n("td",[s._v("android:isolatedProcess")]),s._v(" "),n("td",[s._v("设置 true 意味着，服务会在一个特殊的进程下运行，这个进程与系统其他进程分开且没有自己的权限。与其通信的唯一途径是通过服务的API(bind and start)。")])]),s._v(" "),n("tr",[n("td",[s._v("android:enabled")]),s._v(" "),n("td",[s._v("是否可以被系统实例化，默认为 true因为父标签 也有 enable 属性，所以必须两个都为默认值 true 的情况下服务才会被激活，否则不会激活。")])]),s._v(" "),n("tr",[n("td",[s._v("android:label")]),s._v(" "),n("td",[s._v("描述标签")])]),s._v(" "),n("tr",[n("td",[s._v("android:permission")]),s._v(" "),n("td",[s._v("启动权限")])]),s._v(" "),n("tr",[n("td",[s._v("android:name")]),s._v(" "),n("td",[s._v("必填，指向Service的类名")])])])]),s._v(" "),n("p",[s._v("在安卓5.0之前，我们这样子去隐式启动一个服务是没有问题的。但是在安卓5.0之后，这样子启动就会报出错误：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    java.lang.IllegalArgumentException: Service Intent must be explicit: Intent { act=cc.fastcv.codelab.services.BaseService }\n        at android.app.ContextImpl.validateServiceIntent(ContextImpl.java:1851)\n        at android.app.ContextImpl.startServiceCommon(ContextImpl.java:1892)\n        at android.app.ContextImpl.startService(ContextImpl.java:1864)\n        at android.content.ContextWrapper.startService(ContextWrapper.java:817)\n        at android.content.ContextWrapper.startService(ContextWrapper.java:817)\n        at cc.fastcv.codelab.MainActivity.onClick(MainActivity.kt:28)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("Android 5.0之后google出于安全的角度禁止了隐式声明Intent来启动Service。那么怎么适配呢？")]),s._v(" "),n("p",[s._v("答案是：在现有基础上加上 "),n("strong",[s._v("packageName")]),s._v("，如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('        startService(Intent().apply {\n            action = "cc.fastcv.codelab.services.BaseService"\n            `package` = packageName\n        })\n        \n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('        bindService(Intent().apply {\n            action = "cc.fastcv.codelab.services.BaseService"\n            `package` = packageName\n        },serviceConnection, BIND_AUTO_CREATE)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h1",{attrs:{id:"服务状态"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#服务状态"}},[s._v("#")]),s._v(" 服务状态")]),s._v(" "),n("p",[s._v("服务状态我在这里分为两种：")]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("启动状态")]),s._v("：当应用组件（如 Activity）通过调用 startService() 启动服务时，服务即处于“启动”状态。一旦启动，服务即可在后台无限期运行，即使启动服务的组件已被销毁也不受影响，除非手动调用才能停止服务， 已启动的服务通常是执行单一操作，而且不会将结果返回给调用方。")]),s._v(" "),n("li",[n("strong",[s._v("绑定状态")]),s._v("：当应用组件通过调用 bindService() 绑定到服务时，服务即处于“绑定”状态。绑定服务提供了一个客户端-服务器接口，允许组件与服务进行交互、发送请求、获取结果，甚至是利用进程间通信 (IPC) 跨进程执行这些操作。 仅当与另一个应用组件绑定时，绑定服务才会运行。 多个组件可以同时绑定到该服务，但全部取消绑定后，该服务即会被销毁。")])]),s._v(" "),n("p",[s._v("简单来说，就是启动服务的基础接口有两个：")]),s._v(" "),n("ul",[n("li",[s._v("startService")]),s._v(" "),n("li",[s._v("bindService")])]),s._v(" "),n("p",[s._v("如果不需要和服务进行交互，只是单方面的给服务写入指令的话，我们就可以使用startService；而要进行交互的话，就必须使用bindService了。")]),s._v(" "),n("p",[s._v("一种更复杂的情况是，我们可能在不同的情况下分别使用 startService 和 bindService来处理业务。所以，我们需要非常了解不同情况下的生命周期是如何回调的，这样子才能更好的使用服务来处理我们的业务功能。")]),s._v(" "),n("h1",{attrs:{id:"生命周期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[s._v("#")]),s._v(" 生命周期")]),s._v(" "),n("p",[s._v("先来一张官方图镇场！！！")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://xh-blog.oss-cn-guangzhou.aliyuncs.com/service_lifecycle.png",alt:""}})]),s._v(" "),n("h2",{attrs:{id:"startservice"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#startservice"}},[s._v("#")]),s._v(" startService")]),s._v(" "),n("p",[s._v("从官方图上看，需要注意的是回调有：")]),s._v(" "),n("ul",[n("li",[s._v("onCreate")]),s._v(" "),n("li",[s._v("onStartCommand")]),s._v(" "),n("li",[s._v("onDestory")])]),s._v(" "),n("p",[s._v("其中 onStartCommand 是带参数的")]),s._v(" "),n("ul",[n("li",[s._v("intent ：启动时，启动组件传递过来的Intent，如Activity可利用Intent封装所需要的参数并传递给Service")]),s._v(" "),n("li",[s._v("flags：表示启动请求时是否有额外数据，可选值有 0，START_FLAG_REDELIVERY，START_FLAG_RETRY，0代表没有，它们具体含义如下：\n"),n("ul",[n("li",[s._v("START_FLAG_REDELIVERY\n这个值代表了onStartCommand方法的返回值为\nSTART_REDELIVER_INTENT，而且在上一次服务被杀死前会去调用stopSelf方法停止服务。其中START_REDELIVER_INTENT意味着当Service因内存不足而被系统kill后，则会重建服务，并通过传递给服务的最后一个 Intent 调用 onStartCommand()，此时Intent时有值的。")]),s._v(" "),n("li",[s._v("START_FLAG_RETRY\n该flag代表当onStartCommand调用后一直没有返回值时，会尝试重新去调用onStartCommand()。")])])]),s._v(" "),n("li",[s._v("startId ： 指明当前服务的唯一ID，与stopSelfResult (int startId)配合使用，stopSelfResult 可以更安全地根据ID停止服务。")])]),s._v(" "),n("p",[s._v("实际上onStartCommand的返回值int类型才是最最值得注意的，它有三种可选值， START_STICKY，START_NOT_STICKY，START_REDELIVER_INTENT，它们具体含义如下：")]),s._v(" "),n("ul",[n("li",[s._v("START_STICKY\n当Service因内存不足而被系统kill后，一段时间后内存再次空闲时，系统将会尝试重新创建此Service，一旦创建成功后将回调onStartCommand方法，但其中的Intent将是null，除非有挂起的Intent，如pendingintent，这个状态下比较适用于不执行命令、但无限期运行并等待作业的媒体播放器或类似服务。")]),s._v(" "),n("li",[s._v("START_NOT_STICKY\n当Service因内存不足而被系统kill后，即使系统内存再次空闲时，系统也不会尝试重新创建此Service。除非程序中再次调用startService启动此Service，这是最安全的选项，可以避免在不必要时以及应用能够轻松重启所有未完成的作业时运行服务。")]),s._v(" "),n("li",[s._v("START_REDELIVER_INTENT\n当Service因内存不足而被系统kill后，则会重建服务，并通过传递给服务的最后一个 Intent 调用 onStartCommand()，任何挂起 Intent均依次传递。与START_STICKY不同的是，其中的传递的Intent将是非空，是最后一次调用startService中的intent。这个值适用于主动执行应该立即恢复的作业（例如下载文件）的服务。")])]),s._v(" "),n("p",[s._v("从应用场景来看的话，有以下场景需要验证：")]),s._v(" "),n("h3",{attrs:{id:"启动-启动-启动"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#启动-启动-启动"}},[s._v("#")]),s._v(" 启动 - 启动 - 启动")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("2022-10-24 15:06:45.091 4702-4702/cc.fastcv.codelab D/BaseService: onCreate: \n2022-10-24 15:06:45.091 4702-4702/cc.fastcv.codelab D/BaseService: onStartCommand: flags:0  startId:1\n2022-10-24 15:06:54.102 4702-4702/cc.fastcv.codelab D/BaseService: onStartCommand: flags:0  startId:2\n2022-10-24 15:06:54.799 4702-4702/cc.fastcv.codelab D/BaseService: onStartCommand: flags:0  startId:3\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("除了第一次启动会调用onCreate之外，后面都只会调用onStartCommand了。")]),s._v(" "),n("p",[n("strong",[s._v("已验证：和Activity无关，可以跨Activity操作。")])]),s._v(" "),n("h3",{attrs:{id:"启动-关闭-启动-启动"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#启动-关闭-启动-启动"}},[s._v("#")]),s._v(" 启动 - 关闭 - 启动 - 启动")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("2022-10-24 15:10:39.093 5410-5410/cc.fastcv.codelab D/BaseService: onCreate: \n2022-10-24 15:10:39.093 5410-5410/cc.fastcv.codelab D/BaseService: onStartCommand: flags:0  startId:1\n2022-10-24 15:11:29.012 5410-5410/cc.fastcv.codelab D/BaseService: onDestroy: \n2022-10-24 15:11:43.049 5410-5410/cc.fastcv.codelab D/BaseService: onCreate: \n2022-10-24 15:11:43.050 5410-5410/cc.fastcv.codelab D/BaseService: onStartCommand: flags:0  startId:1\n2022-10-24 15:11:47.284 5410-5410/cc.fastcv.codelab D/BaseService: onStartCommand: flags:0  startId:2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[n("strong",[s._v("已验证：和Activity无关，可以跨Activity操作。")])]),s._v(" "),n("h3",{attrs:{id:"启动-关闭-关闭-关闭"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#启动-关闭-关闭-关闭"}},[s._v("#")]),s._v(" 启动  - 关闭 - 关闭 - 关闭")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("2022-10-24 15:12:34.205 5410-5410/cc.fastcv.codelab D/BaseService: onCreate: \n2022-10-24 15:12:34.205 5410-5410/cc.fastcv.codelab D/BaseService: onStartCommand: flags:0  startId:1\n2022-10-24 15:12:36.335 5410-5410/cc.fastcv.codelab D/BaseService: onDestroy: \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("如果服务已经关闭，则再次调用 stopService是没有任何反应的。")]),s._v(" "),n("p",[n("strong",[s._v("已验证：和Activity无关，可以跨Activity操作。")])]),s._v(" "),n("h3",{attrs:{id:"关闭-启动-启动-关闭"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#关闭-启动-启动-关闭"}},[s._v("#")]),s._v(" 关闭 - 启动 - 启动 - 关闭")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("2022-10-24 15:15:23.189 5410-5410/cc.fastcv.codelab D/BaseService: onCreate: \n2022-10-24 15:15:23.189 5410-5410/cc.fastcv.codelab D/BaseService: onStartCommand: flags:0  startId:1\n2022-10-24 15:15:26.936 5410-5410/cc.fastcv.codelab D/BaseService: onStartCommand: flags:0  startId:2\n2022-10-24 15:15:28.642 5410-5410/cc.fastcv.codelab D/BaseService: onDestroy: \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[n("strong",[s._v("已验证：和Activity无关，可以跨Activity操作。")])]),s._v(" "),n("h2",{attrs:{id:"bindservice"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bindservice"}},[s._v("#")]),s._v(" bindService")]),s._v(" "),n("p",[s._v("从官方图上看，需要注意的是回调有：")]),s._v(" "),n("ul",[n("li",[s._v("onCreate")]),s._v(" "),n("li",[s._v("onBind")]),s._v(" "),n("li",[s._v("onUnbind")]),s._v(" "),n("li",[s._v("onDestory")])]),s._v(" "),n("p",[n("strong",[s._v("在这里需要注意的是，在Service的onBind回调中，如果返回的是null，会回调 onBind 但是，不会回调 connect里面的接口")])]),s._v(" "),n("p",[s._v("从应用场景来看的话，有以下场景需要验证：")]),s._v(" "),n("h3",{attrs:{id:"绑定-绑定-绑定"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#绑定-绑定-绑定"}},[s._v("#")]),s._v(" 绑定 - 绑定 - 绑定")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("2022-10-24 15:40:20.125 7906-7906/cc.fastcv.codelab D/BaseService: onCreate: \n2022-10-24 15:40:20.126 7906-7906/cc.fastcv.codelab D/BaseService: onBind: \n2022-10-24 15:40:20.128 7906-7906/cc.fastcv.codelab D/MainActivity: onServiceConnected: \n2022-10-24 15:40:43.224 7906-7906/cc.fastcv.codelab D/BActivity: onCreate: \n2022-10-24 15:40:46.598 7906-7906/cc.fastcv.codelab D/BActivity: onServiceConnected: \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("不同的Activity绑定之后，会有不用的connect接收，但是绑定之后再绑定是不会有任何回调的。")]),s._v(" "),n("h3",{attrs:{id:"绑定-解绑-绑定-绑定"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#绑定-解绑-绑定-绑定"}},[s._v("#")]),s._v(" 绑定 - 解绑 - 绑定 - 绑定")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("2022-10-24 15:42:29.512 8164-8164/cc.fastcv.codelab D/BaseService: onCreate: \n2022-10-24 15:42:29.512 8164-8164/cc.fastcv.codelab D/BaseService: onBind: \n2022-10-24 15:42:29.514 8164-8164/cc.fastcv.codelab D/MainActivity: onServiceConnected: \n2022-10-24 15:42:31.043 8164-8164/cc.fastcv.codelab D/BaseService: onUnbind: \n2022-10-24 15:42:31.043 8164-8164/cc.fastcv.codelab D/BaseService: onDestroy:\n2022-10-24 15:42:35.714 8164-8164/cc.fastcv.codelab D/BActivity: onCreate: \n2022-10-24 15:42:37.633 8164-8164/cc.fastcv.codelab D/BaseService: onCreate: \n2022-10-24 15:42:37.633 8164-8164/cc.fastcv.codelab D/BaseService: onBind: \n2022-10-24 15:42:37.634 8164-8164/cc.fastcv.codelab D/BActivity: onServiceConnected: \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("解绑之后，就会停止服务，再次绑定服务时，会重新启动服务。")]),s._v(" "),n("p",[n("strong",[s._v("已验证：和Activity有关，不可以跨Activity操作。")])]),s._v(" "),n("h3",{attrs:{id:"绑定-解绑-解绑-解绑"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#绑定-解绑-解绑-解绑"}},[s._v("#")]),s._v(" 绑定  - 解绑 - 解绑 - 解绑")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("2022-10-24 15:44:37.633 8585-8585/cc.fastcv.codelab D/BaseService: onCreate: \n2022-10-24 15:44:37.634 8585-8585/cc.fastcv.codelab D/BaseService: onBind: \n2022-10-24 15:44:37.636 8585-8585/cc.fastcv.codelab D/MainActivity: onServiceConnected: \n2022-10-24 15:44:39.276 8585-8585/cc.fastcv.codelab D/BaseService: onUnbind: \n2022-10-24 15:44:39.276 8585-8585/cc.fastcv.codelab D/BaseService: onDestroy: '\n2022-10-24 15:44:40.687 8585-8585/cc.fastcv.codelab E/AndroidRuntime: FATAL EXCEPTION: main\n    java.lang.IllegalArgumentException: Service not registered: cc.fastcv.codelab.MainActivity$serviceConnection$1@943aadb\n        at android.app.LoadedApk.forgetServiceDispatcher(LoadedApk.java:1991)\n        at android.app.ContextImpl.unbindService(ContextImpl.java:2076)\n        at android.content.ContextWrapper.unbindService(ContextWrapper.java:889)\n        at android.content.ContextWrapper.unbindService(ContextWrapper.java:889)\n        at cc.fastcv.codelab.MainActivity.onCreate$lambda-3(MainActivity.kt:45)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("可以看到，在解绑之后，再次解绑的话，就会出现 "),n("strong",[s._v("Service not registered")]),s._v(" 的错误，并且应用会奔溃。")]),s._v(" "),n("h3",{attrs:{id:"解绑-绑定-绑定-解绑"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#解绑-绑定-绑定-解绑"}},[s._v("#")]),s._v(" 解绑 - 绑定 - 绑定 - 解绑")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("2022-10-24 15:46:18.706 8835-8835/cc.fastcv.codelab D/BaseService: onCreate: \n2022-10-24 15:46:18.706 8835-8835/cc.fastcv.codelab D/BaseService: onBind: \n2022-10-24 15:46:18.709 8835-8835/cc.fastcv.codelab D/MainActivity: onServiceConnected: \n2022-10-24 15:46:21.301 8835-8835/cc.fastcv.codelab D/BaseService: onUnbind:\n2022-10-24 15:46:21.301 8835-8835/cc.fastcv.codelab D/BaseService: onDestroy:\n2022-10-24 15:46:21.994 8835-8835/cc.fastcv.codelab D/BaseService: onCreate: \n2022-10-24 15:46:21.995 8835-8835/cc.fastcv.codelab D/BaseService: onBind: \n2022-10-24 15:46:21.997 8835-8835/cc.fastcv.codelab D/MainActivity: onServiceConnected: \n2022-10-24 15:46:22.577 8835-8835/cc.fastcv.codelab D/BaseService: onUnbind: \n2022-10-24 15:46:22.577 8835-8835/cc.fastcv.codelab D/BaseService: onDestroy:\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[n("strong",[s._v("这里需要注意的是，如果绑定的数量与解绑的数量不相等时，是不会回调onUnbind和onDestroy的。")])]),s._v(" "),n("h2",{attrs:{id:"startservice与bindservice"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#startservice与bindservice"}},[s._v("#")]),s._v(" startService与bindService")]),s._v(" "),n("p",[s._v("在前面分别对startService和bindService做了实验之后，我们可以得到：")]),s._v(" "),n("p",[s._v("startService：第一次启动会走onCreate，后面调用启动时，只会调用onStartCommand，然后调用stopService之后就会停止服务。可以重复调用停止服务。")]),s._v(" "),n("p",[s._v("bindService：第一次绑定会走onBind，后面会直接返回binder对象，然后调用解绑操作之后就会停止服务。无法重复调用解绑操作。")]),s._v(" "),n("p",[s._v("所以，当两者结合起来使用时，生命周期会变的复杂起来，这里我将它分为以下几个特例：")]),s._v(" "),n("p",[s._v("1、Service是否启动了，如果没有启动则无论调用哪个都会先走onCreate。如果启动了，这个时候调用start会回调onStartCommand（每次调用都会回调）；调用bind就会调用onBind（多次调用只会回调一次）。")]),s._v(" "),n("p",[s._v("2、如果即启动了又绑定了，则需要即解绑又停止服务才能停止服务，否则不会停止服务。")]),s._v(" "),n("p",[s._v("3、如果有多个地方绑定了，则需要全部解绑了才算完解绑完成。")]),s._v(" "),n("h1",{attrs:{id:"数据传递"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据传递"}},[s._v("#")]),s._v(" 数据传递")]),s._v(" "),n("h2",{attrs:{id:"单向传递"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#单向传递"}},[s._v("#")]),s._v(" 单向传递")]),s._v(" "),n("p",[s._v("从前面可以知道 "),n("strong",[s._v("startService")]),s._v(" 是个单项的操作，那我们怎么样传递数据到服务中呢？")]),s._v(" "),n("p",[s._v("还记得 onStartCommand 回调吗？我们每次调用 startService 方法时都会调用它，而这个回调接口有三个参数，其中的 Intent 就是我们传递数据的载体。")]),s._v(" "),n("p",[s._v("如：我们传递字符给服务：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("2022-10-24 16:00:00.608 9652-9652/cc.fastcv.codelab D/BaseService: onCreate: \n2022-10-24 16:00:00.609 9652-9652/cc.fastcv.codelab D/BaseService: onStartCommand: flags:0  startId:1\n2022-10-24 16:00:00.609 9652-9652/cc.fastcv.codelab D/BaseService: onStartCommand: command = command1\n2022-10-24 16:00:03.378 9652-9652/cc.fastcv.codelab D/BActivity: onCreate: \n2022-10-24 16:00:04.770 9652-9652/cc.fastcv.codelab D/BaseService: onStartCommand: flags:0  startId:2\n2022-10-24 16:00:04.770 9652-9652/cc.fastcv.codelab D/BaseService: onStartCommand: command = command2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("可以看到，我们分别将command1、command2写入到服务中。")]),s._v(" "),n("h2",{attrs:{id:"双向传递"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#双向传递"}},[s._v("#")]),s._v(" 双向传递")]),s._v(" "),n("p",[s._v("我们在 "),n("strong",[s._v("bindService")]),s._v(" 的connect 回调中 获取 Binder对象，如：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('class BaseBinder : Binder() {\n\n    companion object {\n        private const val TAG = "BaseBinder"\n    }\n\n    private val callbacks = mutableListOf<Callback>()\n\n    fun addCallback(callback: Callback) {\n        Log.d(TAG, "addCallback: 绑定监听者 $callback")\n        if (!callbacks.contains(callback)) {\n            callbacks.add(callback)\n        }\n    }\n\n    fun removeCallback(callback: Callback) {\n        Log.d(TAG, "removeCallback: 解除监听者 $callback")\n        if (callbacks.contains(callback)) {\n            callbacks.remove(callback)\n        }\n    }\n\n    fun request() {\n        for (callback in callbacks) {\n            callback.onCall("收到请求")\n        }\n    }\n}\n\ninterface Callback {\n    fun onCall(msg:String)\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br")])]),n("p",[s._v("那么，在绑定成功的时候 addCallback 在解绑的时候 removeCallback。最后运行结果：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("2022-10-24 16:14:10.590 10620-10620/cc.fastcv.codelab D/MainActivity: onCreate: \n2022-10-24 16:14:14.544 10620-10620/cc.fastcv.codelab D/BaseService: onCreate: \n2022-10-24 16:14:14.545 10620-10620/cc.fastcv.codelab D/BaseService: onBind: \n2022-10-24 16:14:14.547 10620-10620/cc.fastcv.codelab D/MainActivity: onServiceConnected: \n2022-10-24 16:14:14.547 10620-10620/cc.fastcv.codelab D/BaseBinder: addCallback: 绑定监听者 cc.fastcv.codelab.MainActivity@dc6dfb0\n2022-10-24 16:14:18.029 10620-10620/cc.fastcv.codelab D/BActivity: onCreate: \n2022-10-24 16:14:19.459 10620-10620/cc.fastcv.codelab D/BActivity: onServiceConnected: \n2022-10-24 16:14:19.459 10620-10620/cc.fastcv.codelab D/BaseBinder: addCallback: 绑定监听者 cc.fastcv.codelab.BActivity@ded60a8\n2022-10-24 16:14:23.244 10620-10620/cc.fastcv.codelab D/MainActivity: onCall: 收到请求\n2022-10-24 16:14:23.244 10620-10620/cc.fastcv.codelab D/BActivity: onCall: 收到请求\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h2",{attrs:{id:"anr问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#anr问题"}},[s._v("#")]),s._v(" ANR问题")]),s._v(" "),n("p",[s._v("在这里需要注意的是，Service的回调都是在主线程中的，所以，如果我们在回调中做耗时操作的话，就会产生ANR的问题。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("2022-10-24 16:17:19.339 10906-10906/cc.fastcv.codelab D/BaseService: onCreate: main\n2022-10-24 16:17:19.339 10906-10906/cc.fastcv.codelab D/BaseService: onStartCommand: flags:0  startId:1  main\n2022-10-24 16:17:23.123 10906-10906/cc.fastcv.codelab D/BaseService: onBind: main\n2022-10-24 16:17:32.945 10906-10906/cc.fastcv.codelab D/BaseService: onUnbind: main\n2022-10-24 16:17:32.945 10906-10906/cc.fastcv.codelab D/BaseService: onDestroy: main\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("所以，如果需要在服务中做耗时操作的话，我们需要在服务的回调之后开启一个子线程做相关耗时操作。这样处理太过繁琐了，所以谷歌推出了"),n("strong",[s._v("IntentService")]),s._v("来帮助我们做类似的操作。")]),s._v(" "),n("h1",{attrs:{id:"intentservice"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#intentservice"}},[s._v("#")]),s._v(" IntentService")]),s._v(" "),n("p",[s._v("客户端通过startService(Intent)来启动IntentService; 我们并不需要手动地区控制IntentService,当任务执行完后,IntentService会自动停止; 可以启动IntentService多次,每个耗时操作会以工作队列的方式在IntentService的 onHandleIntent回调方法中执行,并且每次只会执行一个工作线程,执行完一，再到二这样。如：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('class BaseIntentService : IntentService("intent") {\n\n    companion object {\n        private const val TAG = "BaseIntentService"\n    }\n\n    override fun onCreate() {\n        super.onCreate()\n        Log.d(TAG, "onCreate: ")\n    }\n\n    override fun onStartCommand(intent: Intent?, flags: Int, startId: Int): Int {\n        Log.d(TAG, "onStartCommand: ")\n        return super.onStartCommand(intent, flags, startId)\n    }\n\n    override fun onHandleIntent(intent: Intent?) {\n        val workId = intent?.getStringExtra("workId")\n        Log.d(TAG, "onHandleIntent: workId = $workId  threadId = ${Thread.currentThread().name}")\n    }\n\n    override fun onDestroy() {\n        super.onDestroy()\n        Log.d(TAG, "onDestroy: ")\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br")])]),n("p",[s._v("我们多次点击启动服务")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('            val baseService = Intent(this, BaseIntentService::class.java)\n            baseService.putExtra("workId","" + index++ )\n            startService(baseService)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("结果：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("2022-10-24 16:25:20.857 11738-11738/cc.fastcv.codelab D/BaseIntentService: onCreate: \n2022-10-24 16:25:20.857 11738-11738/cc.fastcv.codelab D/BaseIntentService: onStartCommand: \n2022-10-24 16:25:20.858 11738-11776/cc.fastcv.codelab D/BaseIntentService: onHandleIntent: workId = 1  threadId = IntentService[intent]\n2022-10-24 16:25:20.859 11738-11738/cc.fastcv.codelab D/BaseIntentService: onDestroy: \n2022-10-24 16:25:23.521 11738-11738/cc.fastcv.codelab D/BaseIntentService: onCreate: \n2022-10-24 16:25:23.522 11738-11738/cc.fastcv.codelab D/BaseIntentService: onStartCommand: \n2022-10-24 16:25:23.522 11738-11785/cc.fastcv.codelab D/BaseIntentService: onHandleIntent: workId = 2  threadId = IntentService[intent]\n2022-10-24 16:25:23.523 11738-11738/cc.fastcv.codelab D/BaseIntentService: onDestroy: \n2022-10-24 16:25:23.729 11738-11738/cc.fastcv.codelab D/BaseIntentService: onCreate: \n2022-10-24 16:25:23.729 11738-11738/cc.fastcv.codelab D/BaseIntentService: onStartCommand: \n2022-10-24 16:25:23.730 11738-11786/cc.fastcv.codelab D/BaseIntentService: onHandleIntent: workId = 3  threadId = IntentService[intent]\n2022-10-24 16:25:23.731 11738-11738/cc.fastcv.codelab D/BaseIntentService: onDestroy: \n2022-10-24 16:25:23.911 11738-11738/cc.fastcv.codelab D/BaseIntentService: onCreate: \n2022-10-24 16:25:23.911 11738-11738/cc.fastcv.codelab D/BaseIntentService: onStartCommand: \n2022-10-24 16:25:23.912 11738-11787/cc.fastcv.codelab D/BaseIntentService: onHandleIntent: workId = 4  threadId = IntentService[intent]\n2022-10-24 16:25:23.913 11738-11738/cc.fastcv.codelab D/BaseIntentService: onDestroy: \n2022-10-24 16:25:24.085 11738-11738/cc.fastcv.codelab D/BaseIntentService: onCreate: \n2022-10-24 16:25:24.086 11738-11738/cc.fastcv.codelab D/BaseIntentService: onStartCommand: \n2022-10-24 16:25:24.086 11738-11788/cc.fastcv.codelab D/BaseIntentService: onHandleIntent: workId = 5  threadId = IntentService[intent]\n2022-10-24 16:25:24.087 11738-11738/cc.fastcv.codelab D/BaseIntentService: onDestroy: \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("p",[s._v("可以看到，最终的处理回调都是在子线程中进行的。我们来看看源码（比较简单的源码）")]),s._v(" "),n("h2",{attrs:{id:"源码解析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#源码解析"}},[s._v("#")]),s._v(" 源码解析")]),s._v(" "),n("p",[s._v("首先看下这个类组成")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("public abstract class IntentService extends Service {}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("可以看到，这是个抽象类，集成自Service。其中需要我们重写的 "),n("strong",[s._v("onHandleIntent")]),s._v(" 方法是个抽象方法。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    protected abstract void onHandleIntent(@Nullable Intent intent);\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("那它在哪个地方回调的呢？可以看到，是在一个内部类ServiceHandler中回调的。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    private final class ServiceHandler extends Handler {\n        public ServiceHandler(Looper looper) {\n            super(looper);\n        }\n\n        @Override\n        public void handleMessage(Message msg) {\n            onHandleIntent((Intent)msg.obj);\n            stopSelf(msg.arg1);\n        }\n    }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("而ServiceHandler又是Handler的子类，用来接收消息，并且从ServiceHandler的构造方法可以看出，这里使用的 Looper是从外部传入的。我们看看 ServiceHandler 是在哪里被初始化的。")]),s._v(" "),n("p",[s._v("可以轻易的找到")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    @Override\n    public void onCreate() {\n        super.onCreate();\n        HandlerThread thread = new HandlerThread("IntentService[" + mName + "]");\n        thread.start();\n\n        mServiceLooper = thread.getLooper();\n        mServiceHandler = new ServiceHandler(mServiceLooper);\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("是在Service的onCreate回调中初始化的，而Looper是在本地启动了一个 HandlerThread 之后获取的 Looper。那子线程的问题应该就可以解释的通了。")]),s._v(" "),n("p",[s._v("那我们的消息是怎么发送过来的呢？")]),s._v(" "),n("p",[s._v("从之前的学习可以知道，要接收消息的话，只能从 onStartCommand 回调中去接收，那我们来看看 onStartCommand 回调接口里面做了什么？")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    @Override\n    public int onStartCommand(@Nullable Intent intent, int flags, int startId) {\n        onStart(intent, startId);\n        return mRedelivery ? START_REDELIVER_INTENT : START_NOT_STICKY;\n    }\n    \n    @Override\n    public void onStart(@Nullable Intent intent, int startId) {\n        Message msg = mServiceHandler.obtainMessage();\n        msg.arg1 = startId;\n        msg.obj = intent;\n        mServiceHandler.sendMessage(msg);\n    }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v("哦~，原来是在onStartCommand接收的消息，然后封装成 Message ，再通过 ServiceHandler 回调出来。")]),s._v(" "),n("p",[s._v("虽然这个类很好用，但是，在官方文档上，Android 8.0之后 这个类被废弃掉了，推荐使用 "),n("strong",[s._v("JobIntentService")]),s._v(" "),n("em",[s._v("或者")]),s._v(" "),n("strong",[s._v("WorkManager")])]),s._v(" "),n("h2",{attrs:{id:"jobscheduler"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jobscheduler"}},[s._v("#")]),s._v(" JobScheduler")]),s._v(" "),n("p",[s._v("Android从5.0开始，增加支持一种特殊的机制，即任务调度JobScheduler，为啥要先讲这个呢？")]),s._v(" "),n("p",[s._v("因为，我们后面要提到的 JobService 和 JobIntentService 都是基于它来工作的，包括说后面推出的WorkManager也和它有很大的渊源，所以需要先了解一下这个工具先。")]),s._v(" "),n("p",[s._v("App除了通过屏幕向用户展示可交互的界面元素之外，还经常需要在后台做些背地里做的事情，比如说精密计算、文件下载、统计分析、数据导入、状态监控等等，这些用户看不到的事一般放在Service中处理。")]),s._v(" "),n("p",[s._v("然而有时候我们希望在特定情况下再启动事务，比如说延迟若干时间之后，或者等手机空闲了再运行，这样一方面不会在系统资源紧张之时喧宾夺主，另一方面也起到削峰填谷提高系统效率的作用。对于这些额外的条件要求，Service并不能直接支持，往往需要加入其他手段，才能较好地满足相关的运行条件，比如：")]),s._v(" "),n("ul",[n("li",[s._v("对于延迟时间执行，通常考虑利用系统的闹钟管理器AlarmManager进行定时管理")]),s._v(" "),n("li",[s._v("对于是否联网、是否充电、是否空闲，一般要监听系统的相应广播，常见的系统广播说明如下：\n"),n("ul",[n("li",[s._v("1、网络状态变化需要监听系统广播android.net.conn.CONNECTIVITY_CHANGE；")]),s._v(" "),n("li",[s._v("2、设备是否充电需要监听系统广播Intent.ACTION_POWER_CONNECTED也就是android.intent.action.ACTION_POWER_CONNECTED；")]),s._v(" "),n("li",[s._v("3、设备是否空闲需要监听系统广播Intent.ACTION_SCREEN_OFF也就是android.intent.action.SCREEN_OFF；")])])])]),s._v(" "),n("p",[s._v("可是要想给Service补充以上条件，势必加大了程序逻辑的复杂度，一会儿注册这个事件，一会儿注册那个事件，工程代码将变得不易维护。")]),s._v(" "),n("p",[s._v("有鉴于此，Android从5.0开始，增加支持一种特殊的机制，即任务调度JobScheduler，该工具集成了常见的几种运行条件，开发者只需添加少数几行代码，即可完成原来要多种组件配合的工作。")]),s._v(" "),n("p",[s._v("任务调度机制由三个工具组成，首先是JobInfo，它指定了一个任务的概要信息，比如何时启动，启动时需要满足什么条件等等；其次是JobScheduler，它是系统提供的任务调度服务，它的实例从系统服务Context.JOB_SCHEDULER_SERVICE中获得；最后是JobService，它描述了该任务内部的具体业务逻辑，它的运行时刻由JobScheduler根据JobInfo指定的条件而计算决定。下面分别说明这三个工具的编码过程：")]),s._v(" "),n("h3",{attrs:{id:"jobinfo"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jobinfo"}},[s._v("#")]),s._v(" JobInfo")]),s._v(" "),n("p",[s._v("任务信息的运行条件由JobInfo.Builder来构造，下面是Builder的函数说明：")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("构造函数：指定该任务来源与目的，与Intent类似，第二个参数指定了开发者自定义的JobService。")])]),s._v(" "),n("li",[n("p",[s._v("setRequiredNetworkType：设置需要的网络条件，有三个取值：")]),s._v(" "),n("ul",[n("li",[s._v("JobInfo.NETWORK_TYPE_NONE（无网络时执行，默认）")]),s._v(" "),n("li",[s._v("JobInfo.NETWORK_TYPE_ANY（有网络时执行）")]),s._v(" "),n("li",[s._v("JobInfo.NETWORK_TYPE_UNMETERED（网络无需付费时执行）")])])]),s._v(" "),n("li",[n("p",[s._v("setPersisted：重启后是否还要继续执行，此时需要声明权限RECEIVE_BOOT_COMPLETED，否则会报错“java.lang.IllegalArgumentException: Error: requested job be persisted without holding RECEIVE_BOOT_COMPLETED permission.”而且RECEIVE_BOOT_COMPLETED需要在安装的时候就要声明，如果一开始没声明，而在升级时才声明，那么依然会报权限不足的错误。")])]),s._v(" "),n("li",[n("p",[s._v("setRequiresCharging：是否在充电时执行")])]),s._v(" "),n("li",[n("p",[s._v("setRequiresDeviceIdle：是否在空闲时执行")])]),s._v(" "),n("li",[n("p",[s._v("setPeriodic：设置时间间隔，单位毫秒。该方法不能和setMinimumLatency、setOverrideDeadline这两个同时调用，否则会报错“java.lang.IllegalArgumentException: Can't call setMinimumLatency() on a periodic job”，或者报错“java.lang.IllegalArgumentException: Can't call setOverrideDeadline() on a periodic job”。")])]),s._v(" "),n("li",[n("p",[s._v("setMinimumLatency：设置至少延迟多久后执行，单位毫秒。")])]),s._v(" "),n("li",[n("p",[s._v("setOverrideDeadline：设置最多延迟多久后执行，单位毫秒。")])]),s._v(" "),n("li",[n("p",[s._v("build：完成条件设置，返回构建好的JobInfo对象。")])])]),s._v(" "),n("p",[s._v("如：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("        val jobinfo = JobInfo.Builder(10001, ComponentName(this, MyJobService::class.java))\n            .setRequiredNetworkType(JobInfo.NETWORK_TYPE_NONE)\n            .setPersisted(false)\n            .setRequiresCharging(false)\n            .setRequiresDeviceIdle(true)\n            .setPeriodic(5 * 1000L)\n            .build()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h3",{attrs:{id:"jobscheduler-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jobscheduler-2"}},[s._v("#")]),s._v(" JobScheduler")]),s._v(" "),n("p",[s._v("任务调度的实例从系统服务Context.JOB_SCHEDULER_SERVICE中获得，代码举例如下：")]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[s._v("\tval js "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getSystemService")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("JOB_SCHEDULER_SERVICE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" JobScheduler\t\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("获得任务调度实例后，即可进行任务调度操作，下面是任务调度的相关方法：")]),s._v(" "),n("ul",[n("li",[s._v("schedule：把指定的JobInfo对象放入调度队列，并在条件满足时触发该对象中定义的JobService。")]),s._v(" "),n("li",[s._v("cancel：取消指定编号的任务。")]),s._v(" "),n("li",[s._v("cancelAll：取消所有任务。")]),s._v(" "),n("li",[s._v("getAllPendingJobs：获取所有挂起（即尚未执行）的任务。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('        val js = getSystemService(Context.JOB_SCHEDULER_SERVICE) as JobScheduler\n        js.schedule(jobinfo)\n        js.cancel(10001)\n        js.cancelAll()\n        for (allPendingJob in js.allPendingJobs) {\n            Log.d(TAG, "test: allPendingJob.id.")\n        }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h3",{attrs:{id:"jobservice"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jobservice"}},[s._v("#")]),s._v(" JobService")]),s._v(" "),n("p",[s._v("任务服务是一种特殊的Service，它描述了该任务内部的具体业务逻辑，需要开发者重写的方法如下： onStartJob：在任务开始执行时触发。返回false表示执行完毕，返回true表示需要开发者自己调用jobFinished方法通知系统已执行完成。 onStopJob：在任务停止执行时触发。 JobService内部另外实现了两个方法，说明如下")]),s._v(" "),n("p",[s._v("1、onBind方法，源码如下所示")]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[s._v("    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" final IBinder "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("onBind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("Intent intent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" mBinder"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("asBinder")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("JobService实现了onBind方法，表示任务调度在工作的时候，JobService是通过绑定方式启动的。")]),s._v(" "),n("p",[s._v("2、jobFinished方法，源码如下所示")]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[s._v("    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" final "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("jobFinished")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("JobParameters params"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" boolean needsReschedule")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ensureHandler")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        Message m "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Message"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("obtain")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("mHandler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MSG_JOB_FINISHED")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" params"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("arg2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" needsReschedule "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sendToTarget")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("因为JobService由系统触发，不是在App的主线程中，所以这里通过Message机制与主线程进行通信。")]),s._v(" "),n("p",[s._v("示例：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('class MyJobService : JobService() {\n\n    companion object {\n        private const val TAG = "MyJobService"\n    }\n\n    private val mHandler: Handler = object : Handler(Looper.getMainLooper()) {\n        override fun handleMessage(msg: Message) {\n            try {\n                Thread.sleep(5000)\n            } catch (e: InterruptedException) {\n                e.printStackTrace()\n            }\n            val param = msg.obj as JobParameters\n            jobFinished(param, true)\n            Log.d(TAG, "jobFinished")\n        }\n    }\n\n\n    override fun onStartJob(params: JobParameters?): Boolean {\n        Log.d(TAG, "onStartJob")\n        val message = Message.obtain()\n        message.obj = params\n        mHandler.sendMessage(message)\n        //返回false表示执行完毕，返回true表示需要开发者自己调用jobFinished方法通知系统已执行完成\n        return true\n    }\n\n    override fun onStopJob(params: JobParameters?): Boolean {\n        //停止，不是结束。jobFinished不会直接触发onStopJob\n        //必须在“onStartJob之后，jobFinished之前”取消任务，才会在jobFinished之后触发onStopJob\n        Log.d(TAG, "onStopJob")\n        mHandler.removeMessages(0)\n        return true\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br")])]),n("p",[s._v("以上代码需要注意的是： 1、因为系统服务是通过绑定方式启动JobService，所以此时onStartCommand方法永远不会执行； 2、onStopJob顾名思义是在任务停止时触发，但是直接调用jobFinished方法并不能触发onStopJob。原因是onStopJob的触发是有条件的，首先这里的停止指的是取消任务而不是完成任务；其次必须在“onStartJob之后，jobFinished之前”取消任务，才会在jobFinished之后触发onStopJob。 另外注意在AndroidManifest.xml中补充服务声明：")]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[s._v("        "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("service\n            "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("android")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('".service.MyJobService"')]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("android")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("permission"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"android.permission.BIND_JOB_SERVICE"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h2",{attrs:{id:"alarmmanager"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#alarmmanager"}},[s._v("#")]),s._v(" AlarmManager")]),s._v(" "),n("h3",{attrs:{id:"timer"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#timer"}},[s._v("#")]),s._v(" Timer")]),s._v(" "),n("p",[s._v("Java中的定时器机制有现成的方案，就是Timer+TimerTask。其中TimerTask用来描述时刻到达后的事务处理，而Timer用来调度定时任务，如何时启动、间隔多久再次运行等等。")]),s._v(" "),n("p",[s._v("Timer的调度方法是schedule，主要有三个参数。第一个参数表示用来调度的定时任务，第二个参数表示延迟多久首次启动任务，第三个参数表示间隔多久再次启动任务。\npublic void schedule(TimerTask task, long delay, long period)")]),s._v(" "),n("p",[s._v("定时任务得自己写个继承自TimerTask的新类，并重写run方法填入具体的事务处理代码。调用Timer的schedule方法，定时任务便会按照调度设置按时启动；TimerTask不能直接设置运行的次数上限，一旦启动就会持续定时运行，除非对象销毁或者调用了TimerTask的cancel方法。调用cancel方法停止定时任务后，若想重启该定时任务，只能重新声明TimerTask对象，并且重新调用schedule方法。")]),s._v(" "),n("p",[s._v("Timer+TimerTask的实质是利用开启Thread来触发定时任务，所以TimerTask实际上运行于非UI线程，也就无法直接操作UI。若想在TimerTask中修改UI控件，得通过Handler发送消息来间接实现。")]),s._v(" "),n("p",[s._v("示例：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    //创建任务\n    private val timerTask = object : TimerTask() {\n        override fun run() {\n            Log.d(TAG, "run: 执行任务 ${Thread.currentThread().name}")\n        }\n    }\n    \n    //开始任务\n    val timer = Timer()\n    timer.schedule(timerTask,3000,3000)\n    \n    //取消任务\n    timerTask.cancel()\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("h3",{attrs:{id:"countdowntimer"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#countdowntimer"}},[s._v("#")]),s._v(" CountDownTimer")]),s._v(" "),n("p",[s._v("CountDownTimer是Android提供的倒计时器，日常生活中时有见到倒计时的场景，比如说火箭发射倒计时。")]),s._v(" "),n("p",[s._v("通常我们要自定义一个CountDownTimer的派生类，并重写如下的三个方法：")]),s._v(" "),n("ul",[n("li",[s._v("构造函数 : 第一个参数是总的计时长度，第二个参数是每次的计时间隔（好像时钟的滴答）。")]),s._v(" "),n("li",[s._v("onTick : 每次计时触发的事件。")]),s._v(" "),n("li",[s._v("onFinish : 计时结束事件。")])]),s._v(" "),n("p",[s._v("要想启动CountDownTimer计时，调用它的start方法即可，停止计时则调用cancel方法。另外倒计时器触发的onTick和onFinish都运行于非UI线程，所以与Timer一样，也得借助于Handler机制才能操作UI元素。")]),s._v(" "),n("p",[s._v("示例：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    //创建任务\n    private val countDownTimer = object : CountDownTimer(60000, 1000) {\n        override fun onTick(millisUntilFinished: Long) {\n            Log.d(TAG, "onTick: $millisUntilFinished   ${Thread.currentThread().name}")\n        }\n\n        override fun onFinish() {\n            Log.d(TAG, "onFinish:    ${Thread.currentThread().name}")\n        }\n    }\n    \n    //开始任务\n    countDownTimer.start()\n    \n    //取消任务\n    countDownTimer.cancel()\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("h3",{attrs:{id:"alarmmanager-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#alarmmanager-2"}},[s._v("#")]),s._v(" AlarmManager")]),s._v(" "),n("p",[s._v("AlarmManager是Android提供的一个全局定时器，其使用范围要大于Timer方式。")]),s._v(" "),n("p",[s._v("因为Timer方式采用Thread通信，所以只适用于线程间通信，并且生命周期也有限。如果在Activity中定义Timer，那么Activity页面销毁后，定时器也失效了；如果在Application中定义Timer，那么APP退出后，定时器也要失效。相比之下，AlarmManager利用系统的提醒服务定时发送广播，所以不但适用于线程间通信，而且也适用于进程间通信。另外，由于是系统服务发送广播，因此只要再次打开APP，就会自动收到广播发来的定时任务。")]),s._v(" "),n("p",[s._v("AlarmManager常用的启动方法有两个：")]),s._v(" "),n("ul",[n("li",[s._v("set : 该方法用于设置一次性定时器。第一个参数表示定时器类型，第二个参数表示任务执行时间，第三个参数表示定时任务。")]),s._v(" "),n("li",[s._v("setRepeating : 该方法用于设置重复定时器。第一个参数表示定时器类型，第二个参数表示任务首次执行时间，第三个参数表示再次执行的间隔时间，第四个参数表示定时任务。其中定时器类型主要取值有：\nRTC_WAKEUP : 表示定时器即使在睡眠状态下也会启用，此时定时器使用系统时间\nRTC : 表示定时器在睡眠状态下不可用，此时定时器使用系统时间\nELAPSED_REALTIME_WAKEUP : 表示定时器即使在睡眠状态下也会启用，此时定时器使用相对时间（相对于系统启动开始）\nELAPSED_REALTIME : 表示定时器在睡眠状态下不可用，此时定时器使用相对时间")])]),s._v(" "),n("p",[s._v("因为AlarmManager使用的是系统服务来发送广播，所以在注册广播接收器时需要注意以下几点：\n"),n("strong",[s._v("1、要在AndroidManifest.xml中定义receiver")]),s._v(" "),n("strong",[s._v("2、代码中注册接收器必须使用Context.registerReceiver，不能使用LocalBroadcastManager来注册")])]),s._v(" "),n("p",[s._v("AlarmManager启动方法中的定时任务使用了PendingIntent类，PendingIntent顾名思义就是一个延迟处理的通信工具。PendingIntent的实例可通过下列三种方法得到：")]),s._v(" "),n("ul",[n("li",[s._v("getActivity : 获取用于启动页面的实例")]),s._v(" "),n("li",[s._v("getService : 获取用于启动服务的实例")]),s._v(" "),n("li",[s._v("getBroadcast : 获取用于发送广播的实例")])]),s._v(" "),n("p",[s._v("三个方法的参数是一样的，第一个参数表示Context，第二个参数表示请求代码用于标识本次请求的唯一性，第三个参数表示Intent实例（可捆绑具体参数信息Bundle），第四个参数表示PendingIntent的启动标志，具体取值说明如下：")]),s._v(" "),n("ul",[n("li",[s._v("FLAG_ONE_SHOT : 此时启动的PendingIntent只能使用一次。")]),s._v(" "),n("li",[s._v("FLAG_NO_CREATE : 如果不存在描述的PendingIntent，则不会创建新任务。")]),s._v(" "),n("li",[s._v("FLAG_CANCEL_CURRENT : 如果已存在描述的PendingIntent，则先取消该任务再创建新任务。")]),s._v(" "),n("li",[s._v("FLAG_UPDATE_CURRENT : 一般用这个标志。如果已存在描述的PendingIntent，则更新而不是取消该任务。")])]),s._v(" "),n("p",[s._v("示例：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('        //创建任务\n        val filter = IntentFilter("cc.fastcv.codelab.alarmReceiver")\n        registerReceiver(alarmReceiver, filter)\n\n        val intent = Intent("cc.fastcv.codelab.alarmReceiver")\n        val pIntent = if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.S) {\n            PendingIntent.getBroadcast(\n                this, R.string.app_name, intent, PendingIntent.FLAG_UPDATE_CURRENT or  PendingIntent.FLAG_IMMUTABLE)\n        } else {\n            PendingIntent.getBroadcast(\n                this, R.string.app_name, intent, PendingIntent.FLAG_UPDATE_CURRENT)\n        }\n\n        Log.d(TAG, "onCreate: 发送警告任务")\n        val alarmMgr = getSystemService(ALARM_SERVICE) as AlarmManager\n        alarmMgr.setRepeating(\n            AlarmManager.RTC_WAKEUP, System.currentTimeMillis(), 3000, pIntent);\n            \n        //设置接收器\n        private val alarmReceiver = object  : BroadcastReceiver() {\n            override fun onReceive(context: Context?, intent: Intent?) {\n                Log.d(TAG, "onReceive: 收到警报消息")\n            }\n        }\n        val filter = IntentFilter("cc.fastcv.codelab.alarmReceiver")\n        registerReceiver(alarmReceiver, filter)\n        \n        \n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br")])]),n("h2",{attrs:{id:"jobintentservice"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jobintentservice"}},[s._v("#")]),s._v(" JobIntentService")]),s._v(" "),n("p",[s._v("JobIntentService实质为Service其继承关系如下所示。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v(" java.lang.Object\n    ↳   android.content.Context\n       ↳    android.content.ContextWrapper\n           ↳    android.app.Service\n               ↳    android.support.v4.app.JobIntentService\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("用于处理被加入到job或service任务的一个辅助工具。")]),s._v(" "),n("ul",[n("li",[s._v("8.0以下被当作普通的Intent使用startSerivce()启动service来执行。")]),s._v(" "),n("li",[s._v("8.0以上任务被作为job用jobScheduler.enqueue()方法来分发。")])]),s._v(" "),n("p",[s._v("说到Jobscheduler，应该不陌生了，框架提供的用来APP调度任务的接口，根据APP要求构建JobInfo，系统会在适当的时间调用JobInfo指定的JobService来执行你的任务。")]),s._v(" "),n("p",[s._v("所以在Android8.0及以上JobIntentService和JobService做的事情是相同的，都是等着JobScheduler分配任务来执行。")]),s._v(" "),n("p",[s._v("不同点在于，JobService使用的handler使用的是主线程的Looper，因此需要在onStartJob（）中手动创建AsyncTask去执行耗时任务，而JobIntentService则帮我们处理这一过程，使用它只需要写需要做的任务逻辑即可，不用关心卡住主线程的问题。另外，向jobScheduler传递任务操作也更简单了，不需要在指定JobInfo中的参数，直接enqueue(context,intent)就可以。")]),s._v(" "),n("p",[s._v("这有点像Service和IntentService的关系。")]),s._v(" "),n("p",[s._v("示例：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    Intent workIntent = new Intent();\n    workIntent.putExtra("work","work num:"+num);\n    MyJobIntentService.enqueueWork(getApplicationContext(),workIntent);\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('public class MyJobIntentService extends JobIntentService {\n\n    /**\n     * 这个Service 唯一的id\n     */\n    static final int JOB_ID = 10111;\n\n    /**\n     * Convenience method for enqueuing work in to this service.\n     */\n    static void enqueueWork(Context context, Intent work) {\n        enqueueWork(context, MyJobIntentService.class, JOB_ID, work);\n    }\n\n    @Override\n    protected void onHandleWork( Intent intent) {\n        Log.d("houson", "onHandleWork: "+intent.getStringExtra("work").toString());\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[s._v("注意manifest！")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<uses-permission android:name="android.permission.WAKE_LOCK"></uses-permission>\n<service android:name=".MyJobIntentService"></service>\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h2",{attrs:{id:"workmanager"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#workmanager"}},[s._v("#")]),s._v(" WorkManager")]),s._v(" "),n("p",[s._v("关于workmanager 的介绍 官网上是这么说的: "),n("strong",[s._v("使用 WorkManager API 可以轻松地调度即使在应用退出或设备重启时仍应运行的可延迟异步任务。")]),s._v(" 重点是后面的几个字,运行可延迟的异步任务, 在退出或者重启的时候,我们在之前要实现这种任务可能需要 BroadcastReceiver 或者 AlarmManager,现在的话可以使用WorkManager,这个框架最高兼容至Android api 14。")]),s._v(" "),n("ul",[n("li",[s._v("Android 23以上是采用JobScheduler")]),s._v(" "),n("li",[s._v("Android 14-22 采用的是BroadcastReceiver 和 AlarmManager")])]),s._v(" "),n("p",[s._v("要使用的话，需要添加依赖：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('       def work_version = "2.3.1"\n\n        // (Java only)\n        implementation "androidx.work:work-runtime:$work_version"//java 语言选这个\n\n        // Kotlin + coroutines\n        implementation "androidx.work:work-runtime-ktx:$work_version"//kotlin 选这个\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("在使用之前，我们介绍下它的几个成员：")]),s._v(" "),n("h3",{attrs:{id:"worker"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#worker"}},[s._v("#")]),s._v(" Worker")]),s._v(" "),n("p",[s._v("任务的执行者，是一个抽象类，用于指定需要执行的具体任务，需要实现doWork() 这一个方法，它是执行在一个单独的后台线程里的。所有需要在后台执行的任务都在这个方法里完成。\ndoWork()函数的返回值：")]),s._v(" "),n("ul",[n("li",[s._v("Worker.Result.SUCCESS:任务执行成功。")]),s._v(" "),n("li",[s._v("Worker.Result.FAILURE:任务执行失败。")]),s._v(" "),n("li",[s._v("Worker.Result.RETRY:任务需要重新执行，如果出现这个返回结果，就需要与WorkRequest.Builder中的setBackoffCriteria()函数一起使用。")])]),s._v(" "),n("p",[s._v("如：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('class UploadPicWork(\n    private val context: Context,\n    private val workerParameters: WorkerParameters\n) :\n    Worker(context, workerParameters) {\n    override fun doWork(): Result {\n\n       val params = inputData.getString("params_tag")//获取传递的参数\n\n        try {\n            uploadPic()//上传图片\n        } catch (e: Exception) {\n            return Result.failure(Data())//执行失败了\n        }\n\n        return Result.success()\n    }\n}\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("h3",{attrs:{id:"workrequest"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#workrequest"}},[s._v("#")]),s._v(" WorkRequest")]),s._v(" "),n("p",[s._v("代表一个单独的任务，对Worker任务进行包装，一个WorkRequest对应一个Worker类。可以通过WorkRequest来给Worker类添加约束细节，比如设备是否空闲，设备电池是否不应低于临界阈值，指定设备在充电时是否启动任务等等。WorkRequest是一个抽象类，具体要使用两个子类：")]),s._v(" "),n("ul",[n("li",[s._v("OneTimeWorkRequest(任务只执行一遍)")]),s._v(" "),n("li",[s._v("PeriodicWorkRequest(任务周期性的执行)。")])]),s._v(" "),n("p",[s._v("如：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('val UploadPicWork =\n                OneTimeWorkRequestBuilder<UploadPicWork>()\n                    .setInputData(workDataOf("params_tag" to "params"))//传递参数\n                    .setConstraints(triggerContentMaxDelay)//设置约束条件\n                    .addTag("tag")//设置tag\n                    .build()\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h4",{attrs:{id:"workrequest加标签"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#workrequest加标签"}},[s._v("#")]),s._v(" WorkRequest加标签")]),s._v(" "),n("p",[s._v("可以通过addTag给WorkRequest加入标签，比如：")]),s._v(" "),n("div",{staticClass:"language-kotlin line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-kotlin"}},[n("code",[s._v(" PeriodicWorkRequest request "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" new PeriodicWorkRequest"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Builder")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("MyWorker"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("class"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" TimeUnit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SECONDS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setInputData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("addTag")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"A"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nPeriodicWorkRequest request2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" new PeriodicWorkRequest"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Builder")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("MyWorker"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("class"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" TimeUnit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SECONDS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setInputData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("addTag")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"A"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("通过addTag()，将WorkRequest成为了一个组：A组。以后可以直接控制整个组就行了，组内的每个成员都会受到影响。比如通过WorkManager的cancelAllWorkByTag(String tag):取消一组带有相同标签的任务。")]),s._v(" "),n("h4",{attrs:{id:"获取-workinfo"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#获取-workinfo"}},[s._v("#")]),s._v(" 获取 "),n("strong",[s._v("WorkInfo")])]),s._v(" "),n("ul",[n("li",[s._v("听过 "),n("strong",[s._v("id")]),s._v(" 获取,可以听过 "),n("strong",[s._v("WorkManager.getWorkInfoById(UUID)")]),s._v(" 或 "),n("strong",[s._v("WorkManager.getWorkInfoByIdLiveData(UUID)")]),s._v(" 来通过 "),n("strong",[s._v("WorkRequest id")]),s._v(" 来获取 "),n("strong",[s._v("WorkInfo")]),s._v("。")])]),s._v(" "),n("div",{staticClass:"language-kotlin line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-kotlin"}},[n("code",[s._v(" WorkManager"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getInstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getWorkInfoByIdLiveData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("UploadPicWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 通过id 获取")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("observe")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Observer "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//it:WorkInfo")]),s._v("\n                    it"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("apply")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("when")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                            WorkInfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("State"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("BLOCKED "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"BLOCKED"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                            WorkInfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("State"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("CANCELLED "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CANCELLED"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                            WorkInfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("State"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("RUNNING "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"RUNNING"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                            WorkInfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("State"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ENQUEUED "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ENQUEUED"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                            WorkInfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("State"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("FAILED "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"FAILED"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                            WorkInfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("State"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SUCCEEDED "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"SUCCEEDED"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"else status ')]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("${")]),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("state")]),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("ul",[n("li",[s._v("通过 "),n("strong",[s._v("tag")]),s._v(" 获取,可以利用 "),n("strong",[s._v("WorkManager.getWorkInfosByTag(String)")]),s._v(" 或 "),n("strong",[s._v("WorkManager.getWorkInfosByTagLiveData(String)")]),s._v(" 来通过 "),n("strong",[s._v("WorkRequest")]),s._v(" 的 "),n("strong",[s._v("WorkInfo")]),s._v(" 对象。")])]),s._v(" "),n("div",{staticClass:"language-kotlin line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-kotlin"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//要通过 tag 获取,则需要先设置 tag")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" UploadPicWork "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n                OneTimeWorkRequestBuilder"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("UploadPicWork"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setInputData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("workDataOf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"params_tag"')])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("to")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"params"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//传递参数")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setConstraints")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("triggerContentMaxDelay"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//设置约束条件")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("addTag")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tag"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//设置tag")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//获取 workInfo")]),s._v("\n\nWorkManager"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getInstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getWorkInfosByTagLiveData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tag"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("observe")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Observer "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("it"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("List"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("WorkInfo"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//此处返回的是一个集合,作为示例代码,默认只取 0 index")]),s._v("\n                    it"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("apply")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("when")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                            WorkInfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("State"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("BLOCKED "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"BLOCKED"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                            WorkInfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("State"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("CANCELLED "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CANCELLED"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                            WorkInfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("State"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("RUNNING "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"RUNNING"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                            WorkInfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("State"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ENQUEUED "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ENQUEUED"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                            WorkInfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("State"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("FAILED "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"FAILED"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                            WorkInfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("State"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SUCCEEDED "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"SUCCEEDED"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"else status ')]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("${")]),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br")])]),n("ul",[n("li",[s._v("对于 "),n("strong",[s._v("唯一工作名称")]),s._v(" 的一个 "),n("strong",[s._v("Worker")]),s._v(" ,可以利用 "),n("strong",[s._v("WorkManager.getWorkInfosForUniqueWork(String)")]),s._v(" 或 "),n("strong",[s._v("WorkManager.getWorkInfosForUniqueWorkLiveData(String)")]),s._v(" 检索所有匹配的 "),n("strong",[s._v("WorkRequest")]),s._v(" 的 "),n("strong",[s._v("WorkInfo")]),s._v(" 对象。此处估计不太好理解,唯一工作是一个概念性非常强的术语，可确保一次只有一个具有特定名称的工作链。与 id 不同的是，唯一名称是人类可读的，由开发者指定，而不是由 "),n("strong",[s._v("WorkManager")]),s._v(" 自动生成。与标记不同，唯一名称仅与“一个”工作链关联。您可以通过调用 "),n("strong",[s._v("WorkManager.enqueueUniqueWork(String, ExistingWorkPolicy, OneTimeWorkRequest)")]),s._v(" 或 "),n("strong",[s._v("WorkManager.enqueueUniquePeriodicWork(String, ExistingPeriodicWorkPolicy, PeriodicWorkRequest)")]),s._v(" 创建唯一工作序列。")])]),s._v(" "),n("div",{staticClass:"language-kotlin line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-kotlin"}},[n("code",[s._v("WorkManager"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getInstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getWorkInfosForUniqueWorkLiveData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"UploadPicWork"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//唯一工作名称 ")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("observe")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Observer "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("it"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("List"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("WorkInfo"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//此处返回的是一个集合,作为示例代码,默认只取 0")]),s._v("\n\n                    it"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("apply")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("when")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                            WorkInfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("State"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("BLOCKED "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"BLOCKED"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                            WorkInfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("State"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("CANCELLED "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CANCELLED"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                            WorkInfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("State"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("RUNNING "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"RUNNING"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                            WorkInfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("State"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ENQUEUED "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ENQUEUED"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                            WorkInfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("State"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("FAILED "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"FAILED"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                            WorkInfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("State"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SUCCEEDED "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"SUCCEEDED"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"else status ')]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("${")]),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("blockquote",[n("p",[s._v("注意如采用这种方式获取 "),n("strong",[s._v("workinfo")]),s._v(" ,在执行 "),n("strong",[s._v("worker")]),s._v(" 的时候与之前不一样,需要采用 "),n("strong",[s._v("WorkManager.enqueueUniqueWork(String, ExistingWorkPolicy, OneTimeWorkRequest)")]),s._v(" 或 "),n("strong",[s._v("WorkManager.enqueueUniquePeriodicWork(String, ExistingPeriodicWorkPolicy, PeriodicWorkRequest)")]),s._v(" 来执行")])]),s._v(" "),n("div",{staticClass:"language-kotlin line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-kotlin"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//全部代码如下")]),s._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//创建约束条件")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" triggerContentMaxDelay "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n                Constraints"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Builder")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setRequiredNetworkType")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("NetworkType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("CONNECTED"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//                    .setRequiresDeviceIdle(false)")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setRequiresBatteryNotLow")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setRequiresStorageNotLow")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setRequiresCharging")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTriggerContentMaxDelay")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" TimeUnit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("MILLISECONDS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建workrequest")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" UploadPicWork "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n                OneTimeWorkRequestBuilder"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("UploadPicWork"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setInputData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("workDataOf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"params_tag"')])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("to")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"params"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setConstraints")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("triggerContentMaxDelay"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//注意!!!,此处区别与之前的 WorkManager.getInstance(this).enqueue(UploadPicWork)")]),s._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "UploadPicWork" 需要与下面代码 getWorkInfosForUniqueWorkLiveData("UploadPicWork") 中字符串对应')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ExistingWorkPolicy.APPEND 一个枚举值,worker 执行的策略,想要了解的同学,可以看下面的链接")]),s._v("\n    WorkManager"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getInstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("enqueueUniqueWork")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"UploadPicWork"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("ExistingWorkPolicy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("APPEND"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("UploadPicWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n            WorkManager"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getInstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getWorkInfosForUniqueWorkLiveData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"UploadPicWork"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("observe")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Observer "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n                    it"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("apply")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("when")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                            WorkInfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("State"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("BLOCKED "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"BLOCKED"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                            WorkInfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("State"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("CANCELLED "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CANCELLED"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                            WorkInfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("State"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("RUNNING "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"RUNNING"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                            WorkInfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("State"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ENQUEUED "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ENQUEUED"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                            WorkInfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("State"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("FAILED "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"FAILED"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                            WorkInfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("State"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SUCCEEDED "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"SUCCEEDED"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"else status ')]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("${")]),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br")])]),n("h3",{attrs:{id:"workmanager-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#workmanager-2"}},[s._v("#")]),s._v(" WorkManager")]),s._v(" "),n("p",[s._v("主要管理任务请求和任务队列，将WorkRequest加入任务队列。 通过WorkManager来调度任务，以分散系统资源的负载。")]),s._v(" "),n("h3",{attrs:{id:"workstatus"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#workstatus"}},[s._v("#")]),s._v(" WorkStatus")]),s._v(" "),n("p",[s._v("当 WorkManager 把任务加入队列后，会为每个WorkRequest对象提供一个 LiveData， LiveData 持有 WorkStatus，包含有任务的状态和任务的信息。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("public enum State {\n\n    ENQUEUED,\n\n    RUNNING,\n\n    SUCCEEDED,\n\n    FAILED,\n\n    BLOCKED,\n\n    CANCELLED;\n\n    public boolean isFinished() {\n        return (this == SUCCEEDED || this == FAILED || this == CANCELLED);\n    }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("h3",{attrs:{id:"基本用法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基本用法"}},[s._v("#")]),s._v(" 基本用法")]),s._v(" "),n("p",[s._v("基本用法分为3步：")]),s._v(" "),n("ol",[n("li",[s._v("定义后台任务，并实现相关逻辑")]),s._v(" "),n("li",[s._v("配置该后台任务的运行条件和约束条件")]),s._v(" "),n("li",[s._v("构建后台任务请求")])]),s._v(" "),n("p",[n("strong",[s._v("定义后台任务，并实现相关逻辑")]),s._v("\n定义自己的Worker类继承自Worker类并重写doWork方法")]),s._v(" "),n("p",[s._v("doWork方法指定Worker类如何执行操作，但是不能出现任何关于任务何时运行的信息")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("\nclass myWorker(context: Context, params: WorkerParameters) : Worker(context, params){\n    override fun doWork() : Result{\n        //执行操作\n        return Result.success()\n    }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[n("strong",[s._v("配置该后台任务的运行条件和约束条件")]),s._v("\n在MainActivity中根据myWorker类创建OneTimeWorkRequest对象")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("val myConstraints = Constraints.Builder().build()\nval myRequest = OneTimeWorkRequest.Builder(myWorker::class.java)\n                                  .setConstraints(myContraints)\n                                  .build()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("OneTimeWorkRequest.Builder用于构建单次运行的后台任务请求")]),s._v(" "),n("p",[s._v("PeriodicWorkRequest.Builder用于构建周期运行的后台任务请求，且运行间隔不能短于15 mins")]),s._v(" "),n("p",[s._v("在创建Constraints和创建WorkRequest时可以配置各种各样的运行条件和约束条件")]),s._v(" "),n("p",[n("strong",[s._v("构建后台任务请求")]),s._v("\n在MainActivity中将该后台任务请求传入WorkManager的enqueue方法。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("WorkManager.getInstance(this).enqueue(myRequest)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("检查任务状态方法：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v(" WorkManager.getInstance(this).getWorkInfoByIdLiveData(myRequest.id)\n                              .observe(this){ workInfo ->\n \tif (workInfo.state == WorkInfo.State.SUCCEEDED){\n                //利用workInfo对结果进行判断\n    }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("取消任务方法：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("WorkManager.getInstance(this).cancelByWorkId(myRequest.id)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h3",{attrs:{id:"含参worker类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#含参worker类"}},[s._v("#")]),s._v(" 含参Worker类")]),s._v(" "),n("p",[s._v("使用键值对和Data对象进行参数的输入和结果的返回。")]),s._v(" "),n("p",[s._v("在主函数中通过观察任务的WorkStatus获取输出")]),s._v(" "),n("p",[s._v("TestWorker类")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v('class TestWorker(context: Context, params: WorkerParameters) : Worker(context, params) {\n    companion object{\n        const val KEY_INT_ARG = "INT"\n        const val KEY_STR_ARG = "STR"\n        const val KEY_LIST_ARG = "LIST"\n        const val KEY_CLASS_ARG = "CLASS"\n        const val KEY_RESULT = "RESULT"\n    }\n    @SuppressLint("RestrictedApi")\n    override fun doWork(): Result {\n    //获取参数\n    val int = inputData.getInt(KEY_INT_ARG, 0)\n    println("int:$int.toString()")\n    val str = inputData.getString(KEY_STR_ARG)\n    /**\n     * 仅传递基础数据类型和其构成的数组\n     * 对于类和类组成的数组，需要使用Gson转换成json字符串\n     * Gson依赖：implementation \'com.google.code.gson:gson:2.8.6\'\n     */\n    val list: ArrayList<TestClass> = Gson().fromJson(\n        inputData.getString(KEY_LIST_ARG),\n        object : TypeToken<ArrayList<TestClass>>() {}.type\n    )\n    val cls: TestClass = Gson().fromJson(\n        inputData.getString(KEY_CLASS_ARG),\n        object : TypeToken<TestClass>() {}.type\n    )\n\n    //对参数进行操作\n    println("TestWorker:")\n    println("int:$int.toString()")\n    println("str:$str")\n    for (item in list){\n        println("list:${item.text}")\n    }\n    println("class:${cls.text}")\n\n    //返回值\n    val listString = Gson().toJson(list)\n    val result = Data.Builder().putString(KEY_RESULT, listString).build()\n    return Result.Success(result)\n}\n}\n')])])]),n("p",[s._v("主函数")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('class MainActivity : AppCompatActivity() {\n    @SuppressLint("EnqueueWork")\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n        //非基本类型参数转换成String\n        val cls = TestClass("TestClass")\n        val clsString = Gson().toJson(cls)\n        val list = ArrayList<TestClass>()\n        list.add(TestClass("TestClass1"))\n        list.add(TestClass("TestClass2"))\n        list.add(TestClass("TestClass3"))\n        val listString = Gson().toJson(list)\n        //创建参数\n        val myData = Data.Builder().putInt(TestWorker.KEY_INT_ARG, 999)\n                                   .putString(TestWorker.KEY_STR_ARG, "String")\n                                   .putString(TestWorker.KEY_CLASS_ARG, clsString)\n                                   .putString(TestWorker.KEY_LIST_ARG, listString)\n                                   .build()\n        //构建后台\n        val work = OneTimeWorkRequest.Builder(TestWorker::class.java)\n                                     .setInputData(myData)\n                                     .build()\n        WorkManager.getInstance(this).enqueue(work)\n        //获得返回值\n        WorkManager.getInstance(this).getWorkInfoByIdLiveData(work.id)\n                                     .observe(this){workInfo ->\n            val str = workInfo.outputData.getString(TestWorker.KEY_RESULT)\n            if (str != null){\n                val result: ArrayList<TestClass> = Gson().fromJson(str, object : TypeToken<ArrayList<TestClass>>() {}.type)\n                for (item in result){\n                    println("result:${item.text}")\n                }\n            }\n        }\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br")])]),n("p",[s._v("链式任务\nWorkManager允许我们创建和排队多个任务的工作序列，以及它们按照什么顺序运行。")]),s._v(" "),n("p",[s._v("任何一个任务返回Work.WorkResult.FAILURE，整个序列结束")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("WorkManager.getInstance(this).beginWith(workA)\n                             .then(workB)\n                             .then(workC)\n                             .enqueue()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("允许多个对象传递给begin()和then()")]),s._v(" "),n("p",[s._v("WorkManager并行运行同一次方法传进的任务")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("WorkManager.getInstance(this).beginWith(listOf(workerA1, workerA2, workerA3))\n                             .then(listOf(workerB1, workerB2))\n                             .then(workerC)\n                             .enqueue()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("允许使用WorkContinuation.combine方法连接多个链")]),s._v(" "),n("p",[s._v("WorkManager根据连接链的顺序依次运行。")]),s._v(" "),n("p",[s._v("链内任务按顺序执行")]),s._v(" "),n("p",[s._v("链间任务可能重叠导致任务顺序的改变。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("val chain1 = WorkManager.getInstance(this)\n                         .beginWith(workerA1)\n                         .then(workerB1)\nval chain2 = WorkManager.getInstance(this)\n                        .beginWith(workerA2)\n                        .then(workerB2)\nWorkContinuation.combine(listOf(chain1, chain2))\n                .then(workerC)\n                .enqueue()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("h1",{attrs:{id:"ipc"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ipc"}},[s._v("#")]),s._v(" IPC")]),s._v(" "),n("p",[s._v("为啥要在这里突然提起IPC呢？ 因为服务在我们日常的开发中，它还有一个重要的使用场景：作为一个子进程！！！，既然有多个进程，肯定会涉及到进程间通信的问题。那 "),n("strong",[s._v("进程间通信")]),s._v(" 就是 "),n("strong",[s._v("IPC")]),s._v(" 了")]),s._v(" "),n("p",[s._v("IPC (Inter processCommunication) 就是指的是不同进程之间的数据交换。也被叫做进程间通信。那么，在安卓中，我们怎么去测试多进程的内容。这个就首先涉及到了安卓应用开启多进程的方式。我们只需要在四大组件的xml属性中加上")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('android:precess = "xxx"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("就可以了。")]),s._v(" "),n("p",[s._v("既然分了多个进程，肯定会出现数据不同步的问题，大佬们总结了一下，有一下几个：")]),s._v(" "),n("ul",[n("li",[s._v("静态成员和单例完全失效")]),s._v(" "),n("li",[s._v("线程同步机制完全失效")]),s._v(" "),n("li",[s._v("SharedPreferences的可靠性下降")]),s._v(" "),n("li",[s._v("Apllication会多次创建")])]),s._v(" "),n("p",[s._v("这个问题总的来说，就是因为不在同一个进程，没有共享内存，那么生成的字节码相互之间访问不了，地址都不同，肯定是会出问题的。这就涉及到了跨进程通信的使用了。")]),s._v(" "),n("p",[s._v("这里，我们就在服务里面使用")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('android:precess = "xxx"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("属性将其变为子进程。再看看之前的绑定交换数据的操作能不能成功。")]),s._v(" "),n("p",[s._v("emmmmm , 一运行就出问题了")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    java.lang.ClassCastException: android.os.BinderProxy cannot be cast to cc.fastcv.codelab.services.BaseBinder\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("它告诉我无法强转？ 我就是返回的 BaseBinder 对象呀，为啥无法强转呢？")]),s._v(" "),n("p",[s._v("因为我们返回的是这个对象的引用，但是在不同的进程里面，都不在同一块内存了，引用根本无法访问，更别说强转了。那该怎么办呢？")]),s._v(" "),n("p",[s._v("无法访问对象引用，那只能将数据完完整整的传递过去了。常见的IPC方式有：")]),s._v(" "),n("h2",{attrs:{id:"跨进程通信的方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#跨进程通信的方式"}},[s._v("#")]),s._v(" 跨进程通信的方式")]),s._v(" "),n("h3",{attrs:{id:"广播"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#广播"}},[s._v("#")]),s._v(" 广播")]),s._v(" "),n("p",[s._v("广播的话，是最容易理解的，就比如系统广播一样，可以携带一些数据给其他应用。这个可以去看广播的章节。")]),s._v(" "),n("h3",{attrs:{id:"内容提供者"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#内容提供者"}},[s._v("#")]),s._v(" 内容提供者")]),s._v(" "),n("p",[s._v("这个也是一样的，提供一个URI给外部应用区访问内部应用的数据库数据。这个可以去看内容提供者的章节。")]),s._v(" "),n("h3",{attrs:{id:"socket"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#socket"}},[s._v("#")]),s._v(" Socket")]),s._v(" "),n("p",[s._v("这个也可以理解，直接以网络的形式进行数据传输。")]),s._v(" "),n("h3",{attrs:{id:"messenger"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#messenger"}},[s._v("#")]),s._v(" Messenger")]),s._v(" "),n("p",[s._v("Messenger可以翻译为信使，顾名思义，通过它可以在不同进程传递Message对象，在Message中放入我们需要传递的数据，就可以轻松的实现数据的进程间传递了。Messenger是一种轻量级的IPC方案，就像上面说的，它的底层实现时AIDL。")]),s._v(" "),n("h4",{attrs:{id:"服务端"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#服务端"}},[s._v("#")]),s._v(" 服务端")]),s._v(" "),n("p",[s._v("我们首先实现一个服务端：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('class BaseService : Service() {\n    companion object {\n        private const val TAG = "BaseService"\n    }\n\n    private val messengerHandler = object : Handler(Looper.getMainLooper()) {\n        override fun handleMessage(msg: Message) {\n            Log.d(TAG, "receive msg from Client: " + msg.data.getString("msg"))\n        }\n    }\n\n    private val messenger = Messenger(messengerHandler)\n\n    override fun onCreate() {\n        super.onCreate()\n        Log.d(TAG, "onCreate: ${Thread.currentThread().name}")\n    }\n\n    override fun onBind(intent: Intent?): IBinder? {\n        return messenger.binder\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("p",[s._v("注册为单个进程")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    <service android:name="xxx"\n            android:process=":remote"/>\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h4",{attrs:{id:"客户端"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#客户端"}},[s._v("#")]),s._v(" 客户端")]),s._v(" "),n("p",[s._v("再实现客户端：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    private var messenger: Messenger? = null\n\n    private val serviceConnection = object : ServiceConnection {\n        override fun onServiceConnected(name: ComponentName?, service: IBinder?) {\n            Log.d(TAG, "onServiceConnected: ")\n            messenger = Messenger(service)\n        }\n\n        override fun onServiceDisconnected(name: ComponentName?) {\n            Log.d(TAG, "onServiceDisconnected: ")\n        }\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("h4",{attrs:{id:"消息"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#消息"}},[s._v("#")]),s._v(" 消息")]),s._v(" "),n("p",[s._v("发送消息：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    val message = Message.obtain()\n    val bundle = Bundle()\n    bundle.putString("msg","Hello I\'m Client")\n    message.data = bundle\n    messenger?.send(message)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h4",{attrs:{id:"结果"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#结果"}},[s._v("#")]),s._v(" 结果")]),s._v(" "),n("p",[s._v("结果：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("2022-10-24 17:30:30.080 16283-16283/cc.fastcv.codelab D/MainActivity: onCreate: \n2022-10-24 17:30:33.282 16458-16458/cc.fastcv.codelab D/BaseService: onCreate: main\n2022-10-24 17:30:33.282 16458-16458/cc.fastcv.codelab D/BaseService: onBind: \n2022-10-24 17:30:33.284 16283-16283/cc.fastcv.codelab D/MainActivity: onServiceConnected: \n2022-10-24 17:30:35.763 16458-16458/cc.fastcv.codelab D/BaseService: receive msg from Client: Hello I'm Client\n2022-10-24 17:30:36.924 16458-16458/cc.fastcv.codelab D/BaseService: receive msg from Client: Hello I'm Client\n2022-10-24 17:30:39.025 16458-16458/cc.fastcv.codelab D/BaseService: unbindService: \n2022-10-24 17:30:39.026 16458-16458/cc.fastcv.codelab D/BaseService: onDestroy: \n2022-10-24 17:30:40.699 16458-16458/cc.fastcv.codelab D/BaseService: receive msg from Client: Hello I'm Client\n2022-10-24 17:30:41.532 16458-16458/cc.fastcv.codelab D/BaseService: receive msg from Client: Hello I'm Client\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("从结果上看，我们明明已经停止服务了。为啥还可以继续发送消息呢？")]),s._v(" "),n("p",[s._v("这是因为，我们的 Binder 服务已经跑起来了，相互建立连接后，依赖的是 Binder 服务在通信，和Service无关了。")]),s._v(" "),n("h4",{attrs:{id:"异常处理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#异常处理"}},[s._v("#")]),s._v(" 异常处理")]),s._v(" "),n("p",[s._v("如果我们的远程服务进程死掉了，那么我们再发送消息的时候就会出现一个异常：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("     Caused by: android.os.DeadObjectException\n        at android.os.BinderProxy.transactNative(Native Method)\n        at android.os.BinderProxy.transact(BinderProxy.java:510)\n        at android.os.IMessenger$Stub$Proxy.send(IMessenger.java:123)\n        at android.os.Messenger.send(Messenger.java:57)\n        at com.example.pipixia.MainActivity.send(MainActivity.kt:68)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("所以，我们在发送消息时，需要做异常处理。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    fun send(view: View?) {\n        val message = Message.obtain()\n        val bundle = Bundle()\n        bundle.putString("msg","Hello I\'m Client")\n        message.data = bundle\n\n        try {\n            messenger?.send(message)\n        } catch (e: RemoteException) {\n            Log.d(TAG, "send: messenger 消息发送失败")\n        }\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("h4",{attrs:{id:"双向通信"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#双向通信"}},[s._v("#")]),s._v(" 双向通信")]),s._v(" "),n("p",[s._v("其实，实现双向通信的诀窍在 Message 的 replyTo 字段上，我们可以把我们客户端加一个 Messenger 当成一个 服务端来使用。只要将客户端服务器的 binder 地址发送给服务端即可。")]),s._v(" "),n("p",[s._v("客户端")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    //新增服务\n    private val messengerHandler = object : Handler(Looper.getMainLooper()) {\n        override fun handleMessage(msg: Message) {\n            Log.d(TAG, "receive msg from Server: " + msg.data.getString("msg"))\n        }\n    }\n\n    private val messengerServer = Messenger(messengerHandler)\n    \n    //发送消息时 带上服务地址\n    val message = Message.obtain()\n    val bundle = Bundle()\n    bundle.putString("msg","Hello I\'m Client")\n    message.data = bundle\n    message.replyTo = messengerServer\n    messenger?.send(message)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("p",[s._v("服务端：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    //收到消息 回复\n    val message = Message.obtain()\n    val bundle = Bundle()\n    bundle.putString("msg","Hello I\'m Server")\n    message.data = bundle\n    msg.replyTo.send(message)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("结果：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("2022-10-24 17:47:32.433 17222-17222/cc.fastcv.codelab D/MainActivity: onCreate: \n2022-10-24 17:47:39.798 17280-17280/cc.fastcv.codelab D/BaseService: onCreate: main\n2022-10-24 17:47:39.799 17280-17280/cc.fastcv.codelab D/BaseService: onBind: \n2022-10-24 17:47:39.801 17222-17222/cc.fastcv.codelab D/MainActivity: onServiceConnected: \n2022-10-24 17:47:43.332 17280-17280/cc.fastcv.codelab D/BaseService: receive msg from Client: Hello I'm Client\n2022-10-24 17:47:43.333 17222-17222/cc.fastcv.codelab D/MainActivity: receive msg from Server: Hello I'm Server\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[n("strong",[s._v("总结")])]),s._v(" "),n("ul",[n("li",[s._v("优点：使用简单，上手很快")]),s._v(" "),n("li",[s._v("缺点：执行方法时串行的，只能一个一个的执行，不能进行大量的并发处理。这个时候还是得用AIDL。")])]),s._v(" "),n("h3",{attrs:{id:"aidl"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#aidl"}},[s._v("#")]),s._v(" AIDl")]),s._v(" "),n("p",[s._v("AIDL是Android中"),n("strong",[s._v("IPC（Inter-Process Communication）"),n("strong",[s._v("方式中的一种，AIDL是")]),s._v("Android Interface definition language")]),s._v("的缩写，对于小白来说，AIDL的作用是让你可以在自己的APP里绑定一个其他APP的service，这样你的APP可以和其他APP交互。")]),s._v(" "),n("h4",{attrs:{id:"单向读写数据"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#单向读写数据"}},[s._v("#")]),s._v(" 单向读写数据")]),s._v(" "),n("p",[s._v("通过as我们在我们的包下新建一个AIDL文件，我们项目目录就会出现一个aidl文件夹，里面有我们刚才新建的那个AIDL文件，查看文件可以看到，如")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("interface IMyAidlInterface {\n    void basicTypes(int anInt, long aLong, boolean aBoolean, float aFloat,\n            double aDouble, String aString);\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[n("strong",[s._v("序列化")])]),s._v(" "),n("p",[s._v("前面说过，如果要把数据跨进程传输，需要把数据序列化之后才行，所以，这里我们举个例子，将Book类实现序列化接口：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("data class Book(var bookId: Int, var bookName: String?) : Parcelable {\n    constructor(parcel: Parcel) : this(parcel.readInt(), parcel.readString()) {}\n\n    override fun writeToParcel(parcel: Parcel, flags: Int) {\n        parcel.writeInt(bookId)\n        parcel.writeString (bookName)\n    }\n\n    override fun describeContents(): Int {\n        return 0\n    }\n\n    companion object CREATOR : Parcelable.Creator<Book> {\n        override fun createFromParcel(parcel: Parcel): Book {\n            return Book(parcel)\n        }\n\n        override fun newArray(size: Int): Array<Book?> {\n            return arrayOfNulls(size)\n        }\n    }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("p",[n("strong",[s._v("实现AIDL文件")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("import cc.fastcv.codelab.Book;\n\ninterface IBookManagerInterface {\n\n    //得到所有的书籍\n    List<Book> getBookList();\n\n    //新增书籍\n    void addBook(in Book book);\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[n("strong",[s._v("构建module自动生成类文件")])]),s._v(" "),n("p",[s._v("我们build下我们的项目模块，然后可以在")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("build/generated/aidl_source_output_dir/[debug|release]/out/<packageName>/xxx/xxxx.java\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("我们可以点开看一下：(这里我们把它拆解一下)")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("public interface IBookManagerInterface extends android.os.IInterface\n{\n  public static class Default implements cc.fastcv.codelab.IBookManagerInterface\n  { ... }\n\n  public static abstract class Stub extends android.os.Binder implements cc.fastcv.codelab.IBookManagerInterface\n  {\n    ...\n    \n    private static class Proxy implements cc.fastcv.codelab.IBookManagerInterface\n    {\n     ...\n    }\n  }\n  //得到所有的书籍\n\n  public java.util.List<cc.fastcv.codelab.Book> getBookList() throws android.os.RemoteException;\n  //新增书籍\n\n  public void addBook(cc.fastcv.codelab.Book book) throws android.os.RemoteException;\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])]),n("p",[s._v("这样子，整体结构就比较清晰了，首先是一个大的接口类："),n("strong",[s._v("IBookManagerInterface")]),s._v("，然后在内部有一个静态的默认实现类Default实现了IBookManagerInterface接口。还有一个抽象代理类"),n("strong",[s._v("Stub")]),s._v("也实现了IBookManagerInterface并且继承自 "),n("strong",[s._v("android.os.Binder")]),s._v("，如果你仔细看这个Stub类的内容，你会发现很多很奇怪的内容，如：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("        case TRANSACTION_getBookList:\n        {\n          data.enforceInterface(descriptor);\n          java.util.List<cc.fastcv.codelab.Book> _result = this.getBookList();\n          reply.writeNoException();\n          reply.writeTypedList(_result);\n          return true;\n        }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("还有就是它本身没有实现IBookManagerInterface接口的方法，它只是定义了一些常量和相应常量的底层处理逻辑。那谁实现了IBookManagerInterface接口？")]),s._v(" "),n("p",[s._v("没错就是最后一个类 Proxy 实现的这个接口，从它的内容来看，它并不关心底层的逻辑是怎么样处理的，它只用实现 IBookManagerInterface 的方法，然后通过 "),n("code",[s._v("android.os.IBinder mRemote")]),s._v(" 来实现底层逻辑，如：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("            @Override\n            public java.util.List<cc.fastcv.codelab.Book> getBookList() throws android.os.RemoteException {\n                android.os.Parcel _data = android.os.Parcel.obtain();\n                android.os.Parcel _reply = android.os.Parcel.obtain();\n                java.util.List<cc.fastcv.codelab.Book> _result;\n                try {\n                    _data.writeInterfaceToken(DESCRIPTOR);\n                    boolean _status = mRemote.transact(Stub.TRANSACTION_getBookList, _data, _reply, 0);\n                    if (!_status && getDefaultImpl() != null) {\n                        return getDefaultImpl().getBookList();\n                    }\n                    _reply.readException();\n                    _result = _reply.createTypedArrayList(cc.fastcv.codelab.Book.CREATOR);\n                } finally {\n                    _reply.recycle();\n                    _data.recycle();\n                }\n                return _result;\n            }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[n("strong",[s._v("服务端")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('class BookService : Service() {\n    companion object {\n        val TAG = "ServerService"\n    }\n\n    val manager = object : IBookManagerInterface.Stub() {\n        override fun getBookList(): MutableList<Book> {\n            Log.d(TAG, "getBookList:  pid = ${myPid()}")\n            return books\n        }\n\n        override fun addBook(book: Book?) {\n            Log.d(TAG, "addBook: $book  pid = ${myPid()}")\n            books.add(book!!)\n        }\n    }\n\n    val books = ArrayList<Book>()\n\n    override fun onBind(intent: Intent?): IBinder? {\n        Log.d(TAG, "onBind: ")\n        return manager\n    }\n\n    override fun onUnbind(intent: Intent?): Boolean {\n        Log.d(TAG, "onUnbind: ")\n        return super.onUnbind(intent)\n    }\n\n    override fun onDestroy() {\n        super.onDestroy()\n        Log.d(TAG, "onDestroy: ")\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br")])]),n("p",[s._v("记得在清单文件加上")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('        <service android:name=".services.BookService"\n            android:process=":remote"/>\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[n("strong",[s._v("客户端")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    var stub:IBookManagerInterface? = null\n\n    private val serviceConnection = object : ServiceConnection {\n        override fun onServiceConnected(name: ComponentName?, service: IBinder?) {\n            Log.d(TAG, "onServiceConnected: ")\n            stub = IBookManagerInterface.Stub.asInterface(service)\n        }\n\n        override fun onServiceDisconnected(name: ComponentName?) {\n            Log.d(TAG, "onServiceDisconnected: ")\n        }\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("新增")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('       stub?.addBook(Book(index++,"C语言$index 册"))\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("查询")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('        stub?.bookList?.let {\n            for (book in it) {\n                Log.d(TAG, "书籍信息: $book")\n            }\n        }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("结果：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("2022-10-25 14:10:12.960 13642-13656/cc.fastcv.codelab D/ServerService: getBookList:  pid = 13642\n2022-10-25 14:10:12.961 13545-13545/cc.fastcv.codelab D/MainActivity: 书籍信息: Book(bookId=1, bookName=C语言2 册)\n2022-10-25 14:10:12.961 13545-13545/cc.fastcv.codelab D/MainActivity: 书籍信息: Book(bookId=2, bookName=C语言3 册)\n2022-10-25 14:10:12.961 13545-13545/cc.fastcv.codelab D/MainActivity: 书籍信息: Book(bookId=3, bookName=C语言4 册)\n2022-10-25 14:10:12.961 13545-13545/cc.fastcv.codelab D/MainActivity: 书籍信息: Book(bookId=4, bookName=C语言5 册)\n2022-10-25 14:10:12.961 13545-13545/cc.fastcv.codelab D/MainActivity: 书籍信息: Book(bookId=5, bookName=C语言6 册)\n2022-10-25 14:10:12.961 13545-13545/cc.fastcv.codelab D/MainActivity: 书籍信息: Book(bookId=6, bookName=C语言7 册)\n2022-10-25 14:10:12.961 13545-13545/cc.fastcv.codelab D/MainActivity: 书籍信息: Book(bookId=7, bookName=C语言8 册)\n2022-10-25 14:10:12.961 13545-13545/cc.fastcv.codelab D/MainActivity: 书籍信息: Book(bookId=8, bookName=C语言9 册)\n2022-10-25 14:10:26.973 13642-13656/cc.fastcv.codelab D/ServerService: addBook: Book(bookId=9, bookName=C语言10 册)  pid = 13642\n2022-10-25 14:10:31.545 13642-13656/cc.fastcv.codelab D/ServerService: getBookList:  pid = 13642\n2022-10-25 14:10:31.545 13545-13545/cc.fastcv.codelab D/MainActivity: 书籍信息: Book(bookId=1, bookName=C语言2 册)\n2022-10-25 14:10:31.545 13545-13545/cc.fastcv.codelab D/MainActivity: 书籍信息: Book(bookId=2, bookName=C语言3 册)\n2022-10-25 14:10:31.545 13545-13545/cc.fastcv.codelab D/MainActivity: 书籍信息: Book(bookId=3, bookName=C语言4 册)\n2022-10-25 14:10:31.545 13545-13545/cc.fastcv.codelab D/MainActivity: 书籍信息: Book(bookId=4, bookName=C语言5 册)\n2022-10-25 14:10:31.545 13545-13545/cc.fastcv.codelab D/MainActivity: 书籍信息: Book(bookId=5, bookName=C语言6 册)\n2022-10-25 14:10:31.545 13545-13545/cc.fastcv.codelab D/MainActivity: 书籍信息: Book(bookId=6, bookName=C语言7 册)\n2022-10-25 14:10:31.545 13545-13545/cc.fastcv.codelab D/MainActivity: 书籍信息: Book(bookId=7, bookName=C语言8 册)\n2022-10-25 14:10:31.545 13545-13545/cc.fastcv.codelab D/MainActivity: 书籍信息: Book(bookId=8, bookName=C语言9 册)\n2022-10-25 14:10:31.545 13545-13545/cc.fastcv.codelab D/MainActivity: 书籍信息: Book(bookId=9, bookName=C语言10 册)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("h4",{attrs:{id:"双向读写数据"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#双向读写数据"}},[s._v("#")]),s._v(" 双向读写数据")]),s._v(" "),n("p",[s._v("在实现双向读写数据时，我们先记住一些常识，如AIDL支持的数据类型有哪些")]),s._v(" "),n("ul",[n("li",[s._v("基本数据类型（int、long、char、boolean、double等）")]),s._v(" "),n("li",[s._v("String 和 CharSequence")]),s._v(" "),n("li",[s._v("List：只支持ArrayList，里面的每个元素都必须能够被AIDL支持")]),s._v(" "),n("li",[s._v("Map：只支持HashMap，里面的每个元素都必须能够被AIDL支持，包括key和value")]),s._v(" "),n("li",[s._v("Parcelable：所有实现了Parcelable接口的对象")]),s._v(" "),n("li",[s._v("AIDL ：所有的AIDL接口本身也可以在AIDL文件中使用")])]),s._v(" "),n("p",[s._v("但是，其中自定义的parcelable对象和AIDL对象必须显示import进来，不管它们是否和当前的AIDL文件位于同一个包内。就像我们的Book")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("import cc.fastcv.codelab.Book;\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("接下来，我们想象一下，怎么样实现双向读写数据。从上面的代码，我们可以看到，客户端向服务器读写数据时，是拿到了服务器的一个BInder对象然后进行数据读写的，那么我们可不可以逆向思维，把客户端也当成一个服务器，实现一个BInder接口。因为上面说了，可以把AIDL接口本身进行传递，我们来试一下")]),s._v(" "),n("p",[n("strong",[s._v("首先实现客户端接收消息的AIDL")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("interface IServerNotyfyInterface {\n    void nofity(int limit);\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("然后，修改之前服务端实现的接口，需要把我们客户端的接口注册过去，还得取消注册")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("import cc.fastcv.codelab.Book;\nimport cc.fastcv.codelab.IServerNotyfyInterface;\n\ninterface IBookManagerInterface {\n\n    //得到所有的书籍\n    List<Book> getBookList();\n\n    //新增书籍\n    void addBook(in Book book);\n\n    //传入我们的Binder\n    void register(IServerNotyfyInterface listener);\n\n    //取消监听\n    void unRegister(IServerNotyfyInterface listener);\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("p",[n("strong",[s._v("实现客户端接收消息")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    val listener = object : IServerNotyfyInterface.Stub() {\n        override fun nofity(limit: Int) {\n            Log.d(TAG, "nofity: limit = $limit")\n        }\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    //注册监听\n    stub?.register(listener)\n    //注销监听\n    stub?.register(listener)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[n("strong",[s._v("服务端接收客户端的binder注册和反注册")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    var notify:IServerNotyfyInterface? = null\n\n    val manager = object : IBookManagerInterface.Stub() {\n        override fun getBookList(): MutableList<Book> {\n            Log.d(TAG, "getBookList:  pid = ${myPid()}")\n            return books\n        }\n\n        override fun addBook(book: Book?) {\n            Log.d(TAG, "addBook: $book  pid = ${myPid()}")\n            if (notify != null && notify!!.asBinder().isBinderAlive && books.size%5 == 0) {\n                notify!!.nofity(books.size)\n            }\n            books.add(book!!)\n        }\n\n        override fun register(listener: IServerNotyfyInterface?) {\n            Log.d(TAG, "register: ${listener.hashCode()}")\n            notify = listener\n        }\n\n        override fun unRegister(listener: IServerNotyfyInterface?) {\n            Log.d(TAG, "register: ${listener.hashCode()}")\n            notify = null\n        }\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br")])]),n("p",[s._v("在代码中可以看到，我们添加书籍的数量达到5的倍数后就会提醒客户端一次。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("2022-10-25 15:22:37.921 23575-23575/cc.fastcv.codelab D/ServerService: onBind: \n2022-10-25 15:22:37.922 23521-23521/cc.fastcv.codelab D/MainActivity: onServiceConnected: \n2022-10-25 15:22:37.923 23575-23588/cc.fastcv.codelab D/ServerService: register: 107797164\n2022-10-25 15:22:44.897 23575-23588/cc.fastcv.codelab D/ServerService: addBook: Book(bookId=1, bookName=C语言2 册)  pid = 23575\n2022-10-25 15:22:44.898 23521-23521/cc.fastcv.codelab D/MainActivity: nofity: limit = 0\n2022-10-25 15:22:47.277 23575-23588/cc.fastcv.codelab D/ServerService: addBook: Book(bookId=2, bookName=C语言3 册)  pid = 23575\n2022-10-25 15:22:49.655 23575-23588/cc.fastcv.codelab D/ServerService: addBook: Book(bookId=3, bookName=C语言4 册)  pid = 23575\n2022-10-25 15:22:51.132 23575-23588/cc.fastcv.codelab D/ServerService: addBook: Book(bookId=4, bookName=C语言5 册)  pid = 23575\n2022-10-25 15:22:52.287 23575-23588/cc.fastcv.codelab D/ServerService: addBook: Book(bookId=5, bookName=C语言6 册)  pid = 23575\n2022-10-25 15:22:53.610 23575-23588/cc.fastcv.codelab D/ServerService: addBook: Book(bookId=6, bookName=C语言7 册)  pid = 23575\n2022-10-25 15:22:53.611 23521-23521/cc.fastcv.codelab D/MainActivity: nofity: limit = 5\n2022-10-25 15:22:55.674 23521-23533/cc.fastcv.codelab W/System: A resource failed to call close. \n2022-10-25 15:22:55.726 23575-23588/cc.fastcv.codelab D/ServerService: addBook: Book(bookId=7, bookName=C语言8 册)  pid = 23575\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v("这样子，我们就实现了双向读写操作了。")]),s._v(" "),n("p",[s._v("这里还存在一个问题")]),s._v(" "),n("p",[s._v("我们看，我们注册的listener的hashcode和 取消注册的hashcode 的值")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("2022-10-25 15:28:54.154 23929-23929/cc.fastcv.codelab D/ServerService: onBind: \n2022-10-25 15:28:54.155 23881-23881/cc.fastcv.codelab D/MainActivity: onServiceConnected: \n2022-10-25 15:28:54.157 23929-23946/cc.fastcv.codelab D/ServerService: register: 107797164\n2022-10-25 15:28:56.525 23929-23946/cc.fastcv.codelab D/ServerService: register: 67220341\n2022-10-25 15:28:56.527 23929-23929/cc.fastcv.codelab D/ServerService: onUnbind: \n2022-10-25 15:28:56.527 23929-23929/cc.fastcv.codelab D/ServerService: onDestroy:\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("两个值不一样，那么，如果存在多个listener组成一个集合，如：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    val nofitys = ArrayList<IServerNotyfyInterface>()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("那么，在取消监听的时候，就会出现一个问题，我们无法从集合中remove掉这个对象，那这种情况怎么处理呢？我们可以使用：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    val nofitys = RemoteCallbackList<IServerNotyfyInterface>()   \n    \n    nofitys.register(listener)   \n    \n    nofitys.unregister(listener)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h4",{attrs:{id:"简析源码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#简析源码"}},[s._v("#")]),s._v(" 简析源码")]),s._v(" "),n("p",[s._v("我们前面简单看过 AIDL文件生成的 接口文件的组成")]),s._v(" "),n("ul",[n("li",[s._v("真正的接口文件")]),s._v(" "),n("li",[s._v("Stub Binder的继承者，接口的实现者，实现底层数据处理逻辑，是个抽象类")]),s._v(" "),n("li",[s._v("Proxy 接口的代理类，具体接口方法的实现类")])]),s._v(" "),n("p",[s._v("然后，看看我们服务端的具体实现")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    val manager = object : IBookManagerInterface.Stub() {\n        override fun getBookList(): MutableList<Book> {\n            Log.d(TAG, "getBookList:  pid = ${myPid()}")\n            return books\n        }\n\n        override fun addBook(book: Book?) {\n            Log.d(TAG, "addBook: $book  pid = ${myPid()}")\n            if (notify != null && notify!!.asBinder().isBinderAlive && books.size%5 == 0) {\n                notify!!.nofity(books.size)\n            }\n            books.add(book!!)\n        }\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("p",[s._v("可以看到，这里用匿名类的方法实现了"),n("strong",[s._v("IBookManagerInterface.Stub")]),s._v(" 这个抽象类，并且处理真正的数据。那当我们新增书籍的时候到底做了哪些事情呢？我们看看。")]),s._v(" "),n("p",[s._v("首先在客户端，我们拿到binder对象的方式为：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    var stub:IBookManagerInterface? = null\n    stub = IBookManagerInterface.Stub.asInterface(service)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("这里用到了asInterface方法：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    public static cc.fastcv.codelab.IBookManagerInterface asInterface(android.os.IBinder obj)\n    {\n      if ((obj==null)) {\n        return null;\n      }\n      android.os.IInterface iin = obj.queryLocalInterface(DESCRIPTOR);\n      if (((iin!=null)&&(iin instanceof cc.fastcv.codelab.IBookManagerInterface))) {\n        return ((cc.fastcv.codelab.IBookManagerInterface)iin);\n      }\n      return new cc.fastcv.codelab.IBookManagerInterface.Stub.Proxy(obj);\n    }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("将binder本身传入，然后通过Stub.Proxy代理的方式，获取到代理类。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    private static class Proxy implements cc.fastcv.codelab.IBookManagerInterface\n    {\n      private android.os.IBinder mRemote;\n      \n      Proxy(android.os.IBinder remote)\n      {\n        mRemote = remote;\n      }\n      \n      @Override public android.os.IBinder asBinder()\n      {\n        return mRemote;\n      }\n      \n      public java.lang.String getInterfaceDescriptor()\n      {\n        return DESCRIPTOR;\n      }\n      \n      //得到所有的书籍\n      @Override public java.util.List<cc.fastcv.codelab.Book> getBookList() throws android.os.RemoteException\n      {\n        ...\n      }\n      \n      //新增书籍\n\n      @Override public void addBook(cc.fastcv.codelab.Book book) throws android.os.RemoteException\n      {\n        ...\n      }\n    }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br")])]),n("p",[s._v("可以看到，Stub.Proxy本身与Binder无关，只是引用外部传入的mRemote做的操作，并且实现了IBookManagerInterface接口的相关方法。")]),s._v(" "),n("p",[s._v("那也就是说，调用新增书籍的方法是从这里进入的。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("      //新增书籍\n      @Override public void addBook(cc.fastcv.codelab.Book book) throws android.os.RemoteException\n      {\n        //分配数据载体对象\n        android.os.Parcel _data = android.os.Parcel.obtain();\n        //分配数据返回对象\n        android.os.Parcel _reply = android.os.Parcel.obtain();\n        try {\n          //写入标识\n          _data.writeInterfaceToken(DESCRIPTOR);\n          if ((book!=null)) {\n            _data.writeInt(1);\n            //写入序列化数据\n            book.writeToParcel(_data, 0);\n          }\n          else {\n            _data.writeInt(0);\n          }\n          //获取数据传输结果\n          boolean _status = mRemote.transact(Stub.TRANSACTION_addBook, _data, _reply, 0);\n          ...\n          //读取返回是否有异常信息\n          _reply.readException();\n        }\n        finally {\n          //回收资源\n          _reply.recycle();\n          _data.recycle();\n        }\n      }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br")])]),n("p",[s._v("这里逻辑比较简单，我们继续看 "),n("code",[s._v("mRemote.transact(Stub.TRANSACTION_addBook, _data, _reply, 0);")]),s._v(" 是怎么样的处理逻辑")]),s._v(" "),n("p",[s._v("这里的"),n("strong",[s._v("mRemote")]),s._v("，有印象的人会知道它是 IBookManagerInterface.Stub 的实现类，也就是我们在服务端实现的 匿名类，它本身实现的onTransact为：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    @Override public boolean onTransact(int code, android.os.Parcel data, android.os.Parcel reply, int flags) throws android.os.RemoteException\n    {\n      java.lang.String descriptor = DESCRIPTOR;\n      //code 方法标识\n      switch (code)\n      {\n        ...\n        case TRANSACTION_addBook:\n        {\n          //校验标识 如果存在错误的接口类型，则会引发 SecurityException。\n          data.enforceInterface(descriptor);\n          cc.fastcv.codelab.Book _arg0;\n          //检验是否有写入值 如果有则反序列化\n          if ((0!=data.readInt())) {\n            _arg0 = cc.fastcv.codelab.Book.CREATOR.createFromParcel(data);\n          }\n          else {\n            _arg0 = null;\n          }\n          this.addBook(_arg0);\n          reply.writeNoException();\n          return true;\n        }\n        ...\n      }\n    }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br")])]),n("p",[s._v("可以看到，这里最终调用了"),n("code",[s._v("this.addBook(_arg0);")]),s._v(" ，也就是最终调用到了我们实现的匿名类中。")]),s._v(" "),n("p",[s._v("新增是客户端往服务端写，那读取列表是怎么实现的呢？")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("      @Override public java.util.List<cc.fastcv.codelab.Book> getBookList() throws android.os.RemoteException\n      {\n        android.os.Parcel _data = android.os.Parcel.obtain();\n        android.os.Parcel _reply = android.os.Parcel.obtain();\n        java.util.List<cc.fastcv.codelab.Book> _result;\n        try {\n          _data.writeInterfaceToken(DESCRIPTOR);\n          boolean _status = mRemote.transact(Stub.TRANSACTION_getBookList, _data, _reply, 0);\n          if (!_status && getDefaultImpl() != null) {\n            return getDefaultImpl().getBookList();\n          }\n          _reply.readException();\n          //如果没有出现异常，则读取数据\n          _result = _reply.createTypedArrayList(cc.fastcv.codelab.Book.CREATOR);\n        }\n        finally {\n          _reply.recycle();\n          _data.recycle();\n        }\n        return _result;\n      }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    @Override public boolean onTransact(int code, android.os.Parcel data, android.os.Parcel reply, int flags) throws android.os.RemoteException\n    {\n      java.lang.String descriptor = DESCRIPTOR;\n      switch (code)\n      {\n        ...\n        case TRANSACTION_getBookList:\n        {\n          data.enforceInterface(descriptor);\n          java.util.List<cc.fastcv.codelab.Book> _result = this.getBookList();\n          reply.writeNoException();\n          reply.writeTypedList(_result);\n          return true;\n        }\n        ...\n      }\n    }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("p",[s._v("可以看到，最后就是通过 "),n("strong",[s._v("reply")]),s._v(" 写入返回值。")]),s._v(" "),n("p",[n("strong",[s._v("总结")])]),s._v(" "),n("p",[s._v("客户端总的来说：（带返回值的）")]),s._v(" "),n("ul",[n("li",[s._v("首先创建一个Parcel _data用于传值")]),s._v(" "),n("li",[s._v("再创建一个Parcel _reply用于收值")]),s._v(" "),n("li",[s._v("最后创建个我们要接收的类型，之后开始写入   如果没有就不写")]),s._v(" "),n("li",[s._v("首先_data写入我们的标识， _data.writeInterfaceToken(DESCRIPTOR);")]),s._v(" "),n("li",[s._v("如果有值要传入，就写_data.writeStrongBinder((((listener!=null))?(listener.asBinder()):(null)));   否则不写")]),s._v(" "),n("li",[s._v("最后发起请求Ibinder.transact(Stub.TRANSACTION_getBookList, _data, _reply, 0)")]),s._v(" "),n("li",[s._v("再_reply.readException();")]),s._v(" "),n("li",[s._v("最后从_reply 取值   _result = _reply.createTypedArrayList(com.example.pipixia.ipc.aidl.Book.CREATOR);   如果没有值取就不写")]),s._v(" "),n("li",[s._v("然后回收 Parcel")])]),s._v(" "),n("p",[s._v("服务端：")]),s._v(" "),n("ul",[n("li",[s._v("data.enforceInterface(descriptor);  必须写")]),s._v(" "),n("li",[s._v("如果有返回值 则拿值  java.util.List<com.example.pipixia.ipc.aidl.Book> _result = this.getBookList(); ， 没有则不写")]),s._v(" "),n("li",[s._v("如果有传入的值，则拿值 arg0 = com.example.pipixia.ipc.aidl.Book.CREATOR.createFromParcel(data);; ， 没有则不写")]),s._v(" "),n("li",[s._v("eply.writeNoException();")]),s._v(" "),n("li",[s._v("如果有返回值就写这行  reply.writeTypedList(_result);    否则不写")]),s._v(" "),n("li",[s._v("return true;")])]),s._v(" "),n("p",[s._v("这里我们虽然能猜到"),n("strong",[s._v("onTransact")]),s._v("方法大概是干嘛的，但是它最后一个参数还是要讲一下：")]),s._v(" "),n("p",[s._v("其中四个参数的意义是：")]),s._v(" "),n("table",[n("thead",[n("tr",[n("th",[s._v("字段")]),s._v(" "),n("th",[s._v("作用")])])]),s._v(" "),n("tbody",[n("tr",[n("td",[s._v("code")]),s._v(" "),n("td",[s._v("是一个整形的唯一标识，用于区分执行哪个方法，客户端会传递此参数，告诉服务端执行哪个方法")])]),s._v(" "),n("tr",[n("td",[s._v("data")]),s._v(" "),n("td",[s._v("客户端传递过来的参数")])]),s._v(" "),n("tr",[n("td",[s._v("reply")]),s._v(" "),n("td",[s._v("服务器返回回去的值")])]),s._v(" "),n("tr",[n("td",[s._v("flags")]),s._v(" "),n("td",[s._v("标明是否有返回值，0为有（双向），1为没有（单向）")])])])]),s._v(" "),n("h3",{attrs:{id:"binder"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#binder"}},[s._v("#")]),s._v(" Binder")]),s._v(" "),n("p",[s._v("说了这么久的Binder，那Binder到底是什么？")]),s._v(" "),n("p",[s._v("IBinder是远程对象的基本接口，是为了高性能而设计的轻量级远程调用机制的核心部分。但它不仅用于远程调用，也用于进程内调用。该接口定义了与远程对象间交互的协议。但不要直接实现 这个接口，而是继承(extends)Binder。")]),s._v(" "),n("p",[s._v("IBinder主要的API是transact()，与之对应的API是Binder.onTransact()。通过前者，你能 想远程IBinder对象发送发出调用，后者使你的远程对象能够响应接收到的调用。IBinder的API都是 Syncronous(同步)执行的，比如transact()直到对方的Binder.onTransact()方法调用玩 后才返回。 调用发生在进程内时无疑是这样的，而在进程间时，在IPC的帮助下，也是同样的效果。")]),s._v(" "),n("p",[s._v("通过transact()发送的数据是Parcel，Parcel是一种一般的缓冲区，除了有数据外还带有 一些描述它内容的元数据。元数据用于管理IBinder对象的引用，这样就能在缓冲区从一个进程移动 到另一个进程时保存这些引用。这样就保证了当一个IBinder被写入到Parcel并发送到另一个进程中， 如果另一个进程把同一个IBinder的引用回发到原来的进程，那么这个原来的进程就能接收到发出的 那个IBinder的引用。这种机制使IBinder和Binder像唯一标志符那样在进程间管理。")]),s._v(" "),n("p",[s._v("系统为每个进程维护一个存放交互线程的线程池。这些交互线程用于派送所有从另外进程发来的IPC 调用。例如：当一个IPC从进程Ａ发到进程Ｂ，Ａ中那个发出调用的线程(这个应该不在线程池中)就阻塞 在transact()中了。进程Ｂ中的交互线程池中的一个线程接收了这个调用，它调用 Binder.onTransact()，完成后用一个Parcel来做为结果返回。然后进程Ａ中的那个等待的线程在 收到返回的Parcel后得以继续执行。实际上，另一个进程看起来就像是当前进程的一个线程， 但不是当前进程创建的。")]),s._v(" "),n("p",[s._v("Binder机制还支持进程间的递归调用。例如，进程Ａ执行自己的IBinder的transact()调用进程Ｂ 的Binder，而进程Ｂ在其Binder.onTransact()中又用transact()向进程Ａ发起调用，那么进程Ａ 在等待它发出的调用返回的同时，还会用Binder.onTransact()响应进程Ｂ的transact()。 总之Binder造成的结果就是让我们感觉到跨进程的调用与进程内的调用没什么区别。")]),s._v(" "),n("p",[s._v("直观来说，Binder是Android中的一个类，它实现了IBinder接口。从IPC角度来说，Binder是Android中的一种跨进程通信方式，Binder还可以理解为一种虚拟的物理设备，它的设备驱动是/dev/binder，该通信方式在Linux中没有；从Android Framework角度来说，Binder是ServiceManager连接各种Manager(AM，WM，等等)和相应ManagerService的桥梁；从Android应用层来说，Binder是客户端和服务端进行通信的媒介，当bindService的时候，服务端就会返回一个包含了服务端业务调用的Binder对象，通过这个Binder对象，客户端就可以获取服务端提供的服务或数据，这里的服务包括普通服务和基于AIDL的服务。")]),s._v(" "),n("p",[s._v("Binder能干什么？Binder可以提供系统中任何程序都可以访问的全局服务。这个功能当然是任何系统都应该提供的，下面我们简单看一下Android的Binder的框架")]),s._v(" "),n("p",[s._v("Android Binder框架分为服务器接口、Binder驱动、以及客户端接口；简单想一下，需要提供一个全局服务，那么全局服务那端即是服务器接口，任何程序即客户端接口，它们之间通过一个Binder驱动访问。")]),s._v(" "),n("p",[s._v("服务器端接口：实际上是Binder类的对象，该对象一旦创建，内部则会启动一个隐藏线程，会接收Binder驱动发送的消息，收到消息后，会执行Binder对象中的onTransact()函数，并按照该函数的参数执行不同的服务器端代码。")]),s._v(" "),n("p",[s._v("Binder驱动：该对象也为Binder类的实例，客户端通过该对象访问远程服务。")]),s._v(" "),n("p",[s._v("客户端接口：获得Binder驱动，调用其transact()发送消息至服务器")]),s._v(" "),n("p",[s._v("Binder在运行过程中，可能由于某些原因导致异常终止了，这个时候我们到服务端的Binder连接断裂（称之为Binder死亡），会导致我们的远程调用失败。更为关键的是，如果我们不知道Binder连接已经断裂，那么客户端的功能就会收到影响。为了解决这个问题，Binder中提供了两个配对的方法linkToDeath和unlinkToDeath，通过linkToDeath我们可以给Binder设置一个死亡代理，当Binder死亡时，我们就会收到通知，这个时候我们就可以重新发起连接请求从而恢复连接。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    val deathRecipient = IBinder.DeathRecipient {\n        Log.d(TAG, ": binderDied")\n    }\n\n    private val serviceConnection = object : ServiceConnection {\n        override fun onServiceConnected(name: ComponentName?, service: IBinder?) {\n            Log.d(TAG, "onServiceConnected: ")\n            service?.linkToDeath(deathRecipient,0)\n            stub = IBookManagerInterface.Stub.asInterface(service)\n        }\n\n        override fun onServiceDisconnected(name: ComponentName?) {\n            Log.d(TAG, "onServiceDisconnected: ")\n        }\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[s._v("默认情况下，我们的远程服务任何人都可以连接，但这不应该是我们愿意看到的。所以我们必须给服务加入权限验证功能，权限验证失败则无法调用服务中的方法。这里有两种方式：")]),s._v(" "),n("p",[s._v("声明权限")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    <permission android:name="com.example.pipixia.ipc.permission" />\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("在需要判断的地方加上这个")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('            val check = checkCallingOrSelfPermission("com.example.pipixia.ipc.permission")            \n            if (check == PackageManager.PERMISSION_DENIED) {\n                return false\n            }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("申请权限")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    <uses-permission android:name="com.example.pipixia.ipc.permission" />\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h1",{attrs:{id:"android-8-0"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#android-8-0"}},[s._v("#")]),s._v(" Android 8.0")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("在 Android 8.0 （API26）之前，创建前台服务的方式通常是先创建一个后台服务，然后将该服务推到前台。")])]),s._v(" "),n("li",[n("p",[s._v("Android 8.0 （API26）有一项复杂功能；系统不允许后台应用创建后台服务。 因此，Android 8.0 引入了一种全新的方法，即 Context.startForegroundService()，以在前台启动新服务。")])]),s._v(" "),n("li",[n("p",[s._v("在系统创建服务后，应用有五秒的时间来调用该服务的 startForeground() 方法以显示新服务的用户可见通知。")])]),s._v(" "),n("li",[n("p",[s._v("如果应用在此时间限制内未调用 startForeground()，则系统将停止服务并声明此应用为 ANR。")])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("android.app.RemoteServiceException: Context.startForegroundService() did not then call Service.startForeground()\nat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1768)\nat android.os.Handler.dispatchMessage(Handler.java:106)\nat android.os.Looper.loop(Looper.java:164)\nat android.app.ActivityThread.main(ActivityThread.java:6494)\nat java.lang.reflect.Method.invoke(Native Method)\nat com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:438)\nat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:807)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h2",{attrs:{id:"解决方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#解决方法"}},[s._v("#")]),s._v(" 解决方法")]),s._v(" "),n("p",[s._v("将 调用 startService启动Service 改为调用 startForegroundService")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("public static void start() {\n        Intent intent = new Intent(AppContext.me(), ScoreRefreshServer.class);\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n            AppContext.me().startForegroundService(intent);\n        } else {\n            AppContext.me().startService(intent);\n        }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("并且，在service的onCreate方法中调用startForeground()")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {   \n          ...\n          Notification.Builder builder = new Notification.Builder(getApplicationContext(), AppEnv.UMENG_CHANNEL)\n                    .setContentTitle("正在后台运行")\n                    .setSmallIcon(R.mipmap.logo);\n          startForeground(1, builder.build());\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("可以看到"),n("strong",[s._v("startForeground")]),s._v(" 方法需要传入一个通知，也就是，我们需要给用户一个直观的表现，我们有个应用在后台运行。通知的知识我们会有单独的章节总结。")]),s._v(" "),n("p",[s._v("或者按照官方的推荐，我们使用 "),n("strong",[s._v("JobIntentService")]),s._v("。")]),s._v(" "),n("h1",{attrs:{id:"android-9-0"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#android-9-0"}},[s._v("#")]),s._v(" Android 9.0")]),s._v(" "),n("p",[s._v("在 Android 9.0 中，应用在使用前台服务之前必须先申请 FOREGROUND_SERVICE 权限，否则就会抛出 SecurityException 异常。")]),s._v(" "),n("p",[s._v("此外，由于 FOREGROUND_SERVICE 权限只是普通权限，因此开发者只需在 AndroidManifest.xml 中注册此权限即可，系统会自动对此权限进行授权：")]),s._v(" "),n("h1",{attrs:{id:"android-13-0"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#android-13-0"}},[s._v("#")]),s._v(" Android 13.0")]),s._v(" "),n("p",[s._v("这里对通知的改动比较大，所以需要提一下，注意下通知的变化。")])])}),[],!1,null,null,null);n.default=t.exports}}]);