(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{363:function(t,a,s){"use strict";s.r(a);var e=s(1),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"写在前面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#写在前面"}},[t._v("#")]),t._v(" 写在前面")]),t._v(" "),a("p",[t._v("什么是广播？   下课时间到了，全校的铃声都响了，这个是铃声被广播出去了，被在校的人接收到了下课的信号；村里要开会，村长在喇叭里面喊，消息通知到了全村，村长要传递的消息通过广播传给了在村子里面的人。")]),t._v(" "),a("p",[t._v("广播就是我们理解的广播，直接字面意思，它将消息传递出去，给到每个可以接收到的对象，每个对象对这个消息单独做处理。")]),t._v(" "),a("p",[t._v("从上面的描述，我们可以抽取出广播中关键的两个点。")]),t._v(" "),a("ul",[a("li",[t._v("广播发送者")]),t._v(" "),a("li",[t._v("广播接收者")])]),t._v(" "),a("p",[t._v("其中，四大组件中的BroadcastRecever的全称就是广播接收者，那为啥要提广播发送者呢？")]),t._v(" "),a("p",[t._v("因为广播不止是系统可以发送，我们APP也可以发送广播出去，给到其他APP使用。")]),t._v(" "),a("p",[t._v("所以，四大组件中的广播接收者不只是广播接收者的内容，它更应该是广播这个大的内容。")]),t._v(" "),a("p",[t._v("这部分内容从发送者和接收者来区分。")]),t._v(" "),a("h1",{attrs:{id:"广播发送者"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#广播发送者"}},[t._v("#")]),t._v(" 广播发送者")]),t._v(" "),a("p",[t._v("发送者更多的是关注广播的类型。从不同的参照出发，有以下几种类别：")]),t._v(" "),a("ul",[a("li",[t._v("系统广播 和 非系统广播")]),t._v(" "),a("li",[t._v("全局广播 和 本地广播")]),t._v(" "),a("li",[t._v("有序广播 和 无序广播")])]),t._v(" "),a("p",[t._v("广播消息封装在 "),a("code",[t._v("Intent")]),t._v(" 对象中。Intent 的操作字符串必须提供应用的 Java 软件包名称语法，并唯一标识广播事件。您可以使用 "),a("code",[t._v("putExtra(String, Bundle)")]),t._v(" 向 intent 附加其他信息。您也可以对 intent 调用 "),a("code",[t._v("setPackage(String)")]),t._v("，将广播限定到同一组织中的一组应用。")]),t._v(" "),a("h2",{attrs:{id:"系统广播-非系统广播"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系统广播-非系统广播"}},[t._v("#")]),t._v(" 系统广播/非系统广播")]),t._v(" "),a("ul",[a("li",[t._v("Android中内置了多个系统广播：只要涉及到手机的基本操作（如开机、网络状态变化、拍照等等），都会发出相应的广播")]),t._v(" "),a("li",[t._v("每个广播都有特定的Intent - Filter（包括具体的action）")])]),t._v(" "),a("p",[t._v("当使用系统广播时，只需要在注册广播接收者时定义相关的action即可，并不需要手动发送广播，当系统有相关操作时会自动进行系统广播。如电量变化，网络变化，开关机状态等等。如网络变化的广播")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('    private void init() {\n        LogUtil.log("注册广播");\n        IntentFilter filter = new IntentFilter();\n        filter.addAction("android.net.conn.CONNECTIVITY_CHANGE");\n        netBraodcastReceiver = new NetBraodcastReceiver();\n        registerReceiver(netBraodcastReceiver,filter);\n    }\n\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n        LogUtil.log("注销广播");\n        unregisterReceiver(netBraodcastReceiver);\n    }\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])]),a("p",[t._v("这仅仅是系统广播中的一个，我们列举一下常用的系统广播：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("字段")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Intent.ACTION_AIRPLANE_MODE_CHANGED")]),t._v(" "),a("td",[t._v("关闭或打开飞行模式时的广播")])]),t._v(" "),a("tr",[a("td",[t._v("Intent.ACTION_BATTERY_CHANGED")]),t._v(" "),a("td",[t._v("充电状态，或者电池的电量发生变化//电池的充电状态、电荷级别改变，不能通过组建声明接收这个广播，只有通过Context.registerReceiver()注册")])]),t._v(" "),a("tr",[a("td",[t._v("Intent.ACTION_BATTERY_LOW")]),t._v(" "),a("td",[t._v("表示电池电量低")])]),t._v(" "),a("tr",[a("td",[t._v("Intent.ACTION_BATTERY_OKAY")]),t._v(" "),a("td",[t._v("表示电池电量充足，即从电池电量低变化到饱满时会发出广播")])]),t._v(" "),a("tr",[a("td",[t._v("Intent.ACTION_BOOT_COMPLETED")]),t._v(" "),a("td",[t._v("在系统启动完成后，这个动作被广播一次（只有一次）")])]),t._v(" "),a("tr",[a("td",[t._v("Intent.ACTION_DATE_CHANGED")]),t._v(" "),a("td",[t._v("设备日期发生改变时会发出此广播")])]),t._v(" "),a("tr",[a("td",[t._v("Intent.ACTION_HEADSET_PLUG")]),t._v(" "),a("td",[t._v("在耳机口上插入耳机时发出的广播")])]),t._v(" "),a("tr",[a("td",[t._v("Intent.ACTION_INPUT_METHOD_CHANGED")]),t._v(" "),a("td",[t._v("改变输入法时发出的广播")])]),t._v(" "),a("tr",[a("td",[t._v("Intent.ACTION_LOCALE_CHANGED")]),t._v(" "),a("td",[t._v("设备当前区域设置已更改时发出的广播")])])])]),t._v(" "),a("p",[t._v("而非系统广播则是由三方APP发送的广播。")]),t._v(" "),a("h2",{attrs:{id:"全局广播-本地广播"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局广播-本地广播"}},[t._v("#")]),t._v(" 全局广播/本地广播")]),t._v(" "),a("p",[t._v("默认发送的广播都是全局广播，但是这样很不安全，如果外部应用想监听这个广播也是可以的。")]),t._v(" "),a("h3",{attrs:{id:"本地广播"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地广播"}},[t._v("#")]),t._v(" 本地广播")]),t._v(" "),a("p",[t._v("如果这个广播只是我们APP内部使用，则可以使用本地广播：")]),t._v(" "),a("p",[a("code",[t._v("LocalBroadcastManager.sendBroadcast")]),t._v(" 方法会将广播发送给与发送器位于同一应用中的接收器。如果您不需要跨应用发送广播，请使用本地广播。这种实现方法的效率更高（无需进行进程间通信），而且您无需担心其他应用在收发您的广播时带来的任何安全问题。")]),t._v(" "),a("h3",{attrs:{id:"广播权限"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#广播权限"}},[t._v("#")]),t._v(" 广播权限")]),t._v(" "),a("p",[t._v("也可以使用权限发送广播：")]),t._v(" "),a("p",[t._v("您可以通过权限将广播限定到拥有特定权限的一组应用。您可以对广播的发送器或接收器施加限制。")]),t._v(" "),a("h4",{attrs:{id:"带权限的发送"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#带权限的发送"}},[t._v("#")]),t._v(" 带权限的发送")]),t._v(" "),a("p",[t._v("当您调用 "),a("code",[t._v("sendBroadcast(Intent, String)")]),t._v(" 或 "),a("code",[t._v("sendOrderedBroadcast(Intent, String, BroadcastReceiver, Handler, int, String, Bundle)")]),t._v(" 时，可以指定权限参数。接收器若要接收此广播，则必须通过其清单中的 标记请求该权限（如果存在危险，则会被授予该权限）。例如，以下代码会发送广播：")]),t._v(" "),a("div",{staticClass:"language-kotlin line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendBroadcast")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Intent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.example.NOTIFY"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Manifest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("permission"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SEND_SMS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("要接收此广播，接收方应用必须请求如下权限：")]),t._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("uses-permission")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("android.permission.SEND_SMS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("您可以指定现有的系统权限（如 "),a("code",[t._v("SEND_SMS")]),t._v("），也可以使用"),a("permission",[t._v("元素定义自定义权限。")])],1),t._v(" "),a("p",[t._v("**注意：**自定义权限将在安装应用时注册。定义自定义权限的应用必须在使用自定义权限的应用之前安装。")]),t._v(" "),a("h4",{attrs:{id:"带权限的接收"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#带权限的接收"}},[t._v("#")]),t._v(" 带权限的接收")]),t._v(" "),a("p",[t._v("如果您在注册广播接收器时指定了权限参数（通过 "),a("code",[t._v("registerReceiver(BroadcastReceiver, IntentFilter, String, Handler)")]),t._v(" 或清单中的"),a("receiver",[t._v("标记指定），则广播方必须通过其清单中的"),a("receiver",[t._v("标记请求该权限（如果存在危险，则会被授予该权限），才能向该接收器发送 Intent。")])],1)],1),t._v(" "),a("p",[t._v("例如，假设您的接收方应用具有如下所示的清单声明的接收器：")]),t._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("receiver")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v(".MyBroadcastReceiver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n              "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("permission")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("android.permission.SEND_SMS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("intent-filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("action")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("android.intent.action.AIRPLANE_MODE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("intent-filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("receiver")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("或者您的接收方应用具有如下所示的上下文注册的接收器：")]),t._v(" "),a("div",{staticClass:"language-kotlin line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" filter "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IntentFilter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Intent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ACTION_AIRPLANE_MODE_CHANGED"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerReceiver")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("receiver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" filter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Manifest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("permission"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SEND_SMS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("那么，发送方应用必须请求如下权限，才能向这些接收器发送广播：")]),t._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("uses-permission")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("android.permission.SEND_SMS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"指定包名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指定包名"}},[t._v("#")]),t._v(" 指定包名")]),t._v(" "),a("ul",[a("li",[t._v("在 Android 4.0 及更高版本中，您可以在发送广播时使用 "),a("code",[t._v("setPackage(String)")]),t._v(" 指定"),a("a",{attrs:{href:"https://developer.android.com/guide/topics/manifest/manifest-element#package",target:"_blank",rel:"noopener noreferrer"}},[t._v("软件包"),a("OutboundLink")],1),t._v("。系统会将广播限定到与该软件包匹配的一组应用。")])]),t._v(" "),a("p",[a("strong",[t._v("注意：")])]),t._v(" "),a("p",[t._v("1、如果不需要向应用以外的组件发送广播，使用LocalBroadcastManager 效率更高（无需进行进程间通信）。本地广播可在应用中作为通用的发布/订阅事件总线，而不会产生任何系统级广播开销。")]),t._v(" "),a("p",[t._v("2、优先使用上下文注册而不是清单声明， 如果有许多应用在其清单中注册接收相同的广播，可能会导致系统启动大量应用，从而对设备性能和用户体验造成严重影响。有时，Android 系统本身会强制使用上下文注册的接收器。例如，CONNECTIVITY_ACTION 广播只会传送给上下文注册的接收器。")]),t._v(" "),a("p",[t._v("3、onRecive返回后即有可能被系统回收，如需做耗时操作，尽量使用goAsync()开启后台任务或JobScheduler")]),t._v(" "),a("h2",{attrs:{id:"有序广播-无序广播"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有序广播-无序广播"}},[t._v("#")]),t._v(" 有序广播/无序广播")]),t._v(" "),a("h3",{attrs:{id:"无序广播"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#无序广播"}},[t._v("#")]),t._v(" 无序广播")]),t._v(" "),a("p",[t._v("默认发送的广播都是无序广播，即同级的广播是没有固定顺序来接收这个广播的，且无法停止。")]),t._v(" "),a("p",[a("code",[t._v("sendBroadcast(Intent)")]),t._v(" 方法会按随机的顺序向所有接收器发送广播。这称为常规广播。这种方法效率更高，但也意味着接收器无法从其他接收器读取结果，无法传递从广播中收到的数据，也无法中止广播。")]),t._v(" "),a("h3",{attrs:{id:"有序广播"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有序广播"}},[t._v("#")]),t._v(" 有序广播")]),t._v(" "),a("p",[t._v("而有序广播则是，一个一个的发送，中途可以停止继续发送。")]),t._v(" "),a("p",[a("code",[t._v("sendOrderedBroadcast(Intent, String)")]),t._v(" 方法一次向一个接收器发送广播。当接收器逐个顺序执行时，接收器可以向下传递结果，也可以完全中止广播，使其不再传递给其他接收器。接收器的运行顺序可以通过匹配的 intent-filter 的 android:priority 属性来控制；具有相同优先级的接收器将按随机顺序运行。")]),t._v(" "),a("p",[t._v("广播接受者接收广播的顺序规则（同时面向静态和动态注册的广播接受者）：")]),t._v(" "),a("ul",[a("li",[t._v("按照Priority属性值从大-小排序；")]),t._v(" "),a("li",[t._v("Priority属性相同者，动态注册的广播优先；")])]),t._v(" "),a("p",[t._v("特点：")]),t._v(" "),a("ul",[a("li",[t._v("接收广播按顺序接收")]),t._v(" "),a("li",[t._v("先接收的广播接收者可以对广播进行截断，即后接收的广播接收者不再接收到此广播；")]),t._v(" "),a("li",[t._v("先接收的广播接收者可以对广播进行修改，那么后接收的广播接收者将接收到被修改后的广播")])]),t._v(" "),a("p",[t._v("有序广播的使用过程与普通广播非常类似，差异仅在于广播的发送方式： "),a("code",[t._v("sendOrderedBroadcast(intent);")])]),t._v(" "),a("p",[a("strong",[t._v("注意：")])]),t._v(" "),a("p",[t._v("1、第一个广播接收器使用intent.getExtras()接收数据，后面的广播接收器使用getResultExtras(true)接收数据")]),t._v(" "),a("p",[t._v("2、是否是有序广播：isOrderedBroadcast()\n3、中断广播：abortBroadcast()\n4、向下级传递数据：setResultExtras(bundle)，如果不是有序广播，调用会报错\n5、IntentFilter中setPriority设置优先级")]),t._v(" "),a("ul",[a("li",[t._v("优先级对无序广播也生效")]),t._v(" "),a("li",[t._v("无需广播，先注册先生效")])]),t._v(" "),a("p",[t._v("附加说明")]),t._v(" "),a("ul",[a("li",[t._v("Android8中使用静态注册的广播接收器接收自定义广播时，会发生接收不到自定义广播的问题,需要在Android7的代码基础上在发送广播的intent中加上这一句：")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('//ComponentName的第一个参数是自定义广播的包名，第二个参数是广播接收器的类\nbraodcast.setComponent(new ComponentName("pkgName","ReceiverName"));\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h1",{attrs:{id:"广播接收者"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#广播接收者"}},[t._v("#")]),t._v(" 广播接收者")]),t._v(" "),a("p",[t._v("接收者主要关注 注册监听的方式：")]),t._v(" "),a("ul",[a("li",[t._v("静态注册")]),t._v(" "),a("li",[t._v("动态注册")])]),t._v(" "),a("h2",{attrs:{id:"静态注册"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态注册"}},[t._v("#")]),t._v(" 静态注册")]),t._v(" "),a("p",[t._v("1、创建 "),a("code",[t._v("BroadcastReceiver")]),t._v(" 子类并实现 "),a("code",[t._v("onReceive(Context, Intent)")]),t._v("。以下示例中的广播接收器会记录并显示广播的内容：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('    private const val TAG = "MyBroadcastReceiver"\n\n    class MyBroadcastReceiver : BroadcastReceiver() {\n\n        override fun onReceive(context: Context, intent: Intent) {\n            StringBuilder().apply {\n                append("Action: ${intent.action}\\n")\n                append("URI: ${intent.toUri(Intent.URI_INTENT_SCHEME)}\\n")\n                toString().also { log ->\n                    Log.d(TAG, log)\n                    Toast.makeText(context, log, Toast.LENGTH_LONG).show()\n                }\n            }\n        }\n    }\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])]),a("p",[t._v("2、在应用清单中指定 "),a("receiver",[t._v("元素。")])],1),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('    <receiver android:name=".MyBroadcastReceiver"  android:exported="true">\n        <intent-filter>\n            <action android:name="android.intent.action.BOOT_COMPLETED"/>\n            <action android:name="android.intent.action.INPUT_METHOD_CHANGED" />\n        </intent-filter>\n    </receiver>\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("系统软件包管理器会在应用安装时注册接收器。然后，该接收器会成为应用的一个独立入口点，这意味着如果应用当前未运行，系统可以启动应用并发送广播。")]),t._v(" "),a("p",[t._v("系统会创建新的 "),a("code",[t._v("BroadcastReceiver")]),t._v(" 组件对象来处理它接收到的每个广播。此对象仅在调用 "),a("code",[t._v("onReceive(Context, Intent)")]),t._v(" 期间有效。一旦从此方法返回代码，系统便会认为该组件不再活跃。")]),t._v(" "),a("h2",{attrs:{id:"动态注册"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态注册"}},[t._v("#")]),t._v(" 动态注册")]),t._v(" "),a("p",[t._v("1、创建 "),a("code",[t._v("BroadcastReceiver")]),t._v(" 的实例。")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    val br: BroadcastReceiver = MyBroadcastReceiver()\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("2、创建 "),a("code",[t._v("IntentFilter")]),t._v(" 并调用 "),a("code",[t._v("registerReceiver(BroadcastReceiver, IntentFilter)")]),t._v(" 来注册接收器：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    val filter = IntentFilter(ConnectivityManager.CONNECTIVITY_ACTION).apply {\n        addAction(Intent.ACTION_AIRPLANE_MODE_CHANGED)\n    }\n    registerReceiver(br, filter)\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("**注意：**要注册本地广播，请调用 "),a("code",[t._v("LocalBroadcastManager.registerReceiver(BroadcastReceiver, IntentFilter)")]),t._v("。")]),t._v(" "),a("p",[t._v("只要静态注册有效，静态注册的接收器就会接收广播。例如，如果您在 "),a("code",[t._v("Activity")]),t._v(" 上下文中注册，只要 Activity 没有被销毁，您就会收到广播。如果您在应用上下文中注册，只要应用在运行，您就会收到广播。")]),t._v(" "),a("p",[t._v("3、要停止接收广播，请调用 "),a("code",[t._v("unregisterReceiver(android.content.BroadcastReceiver)")]),t._v("。当您不再需要接收器或上下文不再有效时，请务必注销接收器。")]),t._v(" "),a("p",[t._v("请注意注册和注销接收器的位置，比方说，如果您使用 Activity 上下文在 "),a("code",[t._v("onCreate(Bundle)")]),t._v(" 中注册接收器，则应在 "),a("code",[t._v("onDestroy()")]),t._v(" 中注销，以防接收器从 Activity 上下文中泄露出去。如果您在 "),a("code",[t._v("onResume()")]),t._v(" 中注册接收器，则应在 "),a("code",[t._v("onPause()")]),t._v(" 中注销，以防多次注册接收器（如果您不想在暂停时接收广播，这样可以减少不必要的系统开销）。请勿在 "),a("code",[t._v("onSaveInstanceState(Bundle)")]),t._v(" 中注销，因为如果用户在历史记录堆栈中后退，则不会调用此方法。")]),t._v(" "),a("p",[a("strong",[t._v("特别注意：")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("动态广播最好在Activity 的 onResume()注册、onPause()注销。")])]),t._v(" "),a("li",[a("p",[t._v("原因：")]),t._v(" "),a("p",[t._v("1.对于动态广播，有注册就必然得有注销，否则会导致内存泄露。重复注册、重复注销也不允许。")]),t._v(" "),a("p",[t._v("2.在onResume()注册、onPause()注销是因为onPause()在App死亡前一定会被执行，从而保证广播在App死亡前一定会被注销，进而防止内存泄露。")])])]),t._v(" "),a("h1",{attrs:{id:"版本变更"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#版本变更"}},[t._v("#")]),t._v(" 版本变更")]),t._v(" "),a("h2",{attrs:{id:"android-9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#android-9"}},[t._v("#")]),t._v(" Android 9")]),t._v(" "),a("p",[t._v("从 Android 9（API 级别 28）开始，"),a("strong",[t._v("NETWORK_STATE_CHANGED_ACTION")]),t._v(" 广播不再接收有关用户位置或个人身份数据的信息。")]),t._v(" "),a("p",[t._v("此外，如果您的应用安装在搭载 Android 9 或更高版本的设备上，则通过 WLAN 接收的系统广播不包含 SSID、BSSID、连接信息或扫描结果。要获取这些信息，请调用 "),a("strong",[t._v("getConnectionInfo()")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"android-8-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#android-8-0"}},[t._v("#")]),t._v(" Android 8.0")]),t._v(" "),a("p",[t._v("从 Android 8.0（API 级别 26）开始，系统对清单声明的接收器施加了额外的限制。")]),t._v(" "),a("p",[t._v("如果您的应用以 Android 8.0 或更高版本为目标平台，那么对于大多数隐式广播（没有明确针对您的应用的广播），您不能使用清单来声明接收器。")]),t._v(" "),a("h2",{attrs:{id:"android-7-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#android-7-0"}},[t._v("#")]),t._v(" Android 7.0")]),t._v(" "),a("p",[t._v("Android 7.0（API 级别 24）及更高版本不发送以下系统广播：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("ACTION_NEW_PICTURE")])]),t._v(" "),a("li",[a("code",[t._v("ACTION_NEW_VIDEO")])])]),t._v(" "),a("p",[t._v("此外，以 Android 7.0 及更高版本为目标平台的应用必须使用 "),a("code",[t._v("registerReceiver(BroadcastReceiver, IntentFilter)")]),t._v(" 注册 "),a("code",[t._v("CONNECTIVITY_ACTION")]),t._v(" 广播。无法在清单中声明接收器。")]),t._v(" "),a("h1",{attrs:{id:"补充"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#补充"}},[t._v("#")]),t._v(" 补充")]),t._v(" "),a("h2",{attrs:{id:"广播收到回调后不能开子线程做操作-开携程呢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#广播收到回调后不能开子线程做操作-开携程呢"}},[t._v("#")]),t._v(" 广播收到回调后不能开子线程做操作？开携程呢？")]),t._v(" "),a("p",[t._v("测试在收到消息后开启子线程做了30s的工作没有任何问题。")])])}),[],!1,null,null,null);a.default=n.exports}}]);